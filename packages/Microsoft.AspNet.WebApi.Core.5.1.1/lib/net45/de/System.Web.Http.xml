<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http</name>
  </assembly>
  <members>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.Http.InvalidByteRangeException)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die eine Ausnahme darstellt.</summary>
      <returns>Die Anforderung muss einer <see cref="T:System.Web.Http.HttpConfiguration" />-Instanz zugeordnet sein.Eine <see cref="T:System.Net.Http.HttpResponseMessage" />, deren Inhalt eine serialisierte Darstellung einer <see cref="T:System.Web.Http.HttpError" />-Instanz ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
      <param name="statusCode">Der Statuscode der Antwort.</param>
      <param name="exception">Die Ausnahme.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die eine Fehlermeldung darstellt.</summary>
      <returns>Die Anforderung muss einer <see cref="T:System.Web.Http.HttpConfiguration" />-Instanz zugeordnet sein.Eine <see cref="T:System.Net.Http.HttpResponseMessage" />, deren Inhalt eine serialisierte Darstellung einer <see cref="T:System.Web.Http.HttpError" />-Instanz ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
      <param name="statusCode">Der Statuscode der Antwort.</param>
      <param name="message">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die eine Ausnahme mit einer Fehlermeldung darstellt.</summary>
      <returns>Die Anforderung muss einer <see cref="T:System.Web.Http.HttpConfiguration" />-Instanz zugeordnet sein.Eine <see cref="T:System.Net.Http.HttpResponseMessage" />, deren Inhalt eine serialisierte Darstellung einer <see cref="T:System.Web.Http.HttpError" />-Instanz ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
      <param name="statusCode">Der Statuscode der Antwort.</param>
      <param name="message">Die Fehlermeldung.</param>
      <param name="exception">Die Ausnahme.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die einen Fehler darstellt.</summary>
      <returns>Die Anforderung muss einer <see cref="T:System.Web.Http.HttpConfiguration" />-Instanz zugeordnet sein.Eine <see cref="T:System.Net.Http.HttpResponseMessage" />, deren Inhalt eine serialisierte Darstellung einer <see cref="T:System.Web.Http.HttpError" />-Instanz ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
      <param name="statusCode">Der Statuscode der Antwort.</param>
      <param name="error">Der HTTP-Fehler.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die einen Fehler im Modellstatus darstellt.</summary>
      <returns>Die Anforderung muss einer <see cref="T:System.Web.Http.HttpConfiguration" />-Instanz zugeordnet sein.Eine <see cref="T:System.Net.Http.HttpResponseMessage" />, deren Inhalt eine serialisierte Darstellung einer <see cref="T:System.Web.Http.HttpError" />-Instanz ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
      <param name="statusCode">Der Statuscode der Antwort.</param>
      <param name="modelState">Die Modellstatus.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</summary>
      <returns>Eine initialisierte <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht, die zu dieser Antwortnachricht geführt hat.</param>
      <param name="statusCode">Der HTTP-Antwortstatuscode.</param>
      <param name="value">Der Inhalt der HTTP-Antwortnachricht.</param>
      <typeparam name="T">Der Typ der HTTP-Antwortnachricht.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</summary>
      <returns>Eine initialisierte <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht, die zu dieser Antwortnachricht geführt hat.</param>
      <param name="statusCode">Der HTTP-Antwortstatuscode.</param>
      <param name="value">Der Inhalt der HTTP-Antwortnachricht.</param>
      <param name="formatter">Der Medientypformatierer.</param>
      <typeparam name="T">Der Typ der HTTP-Antwortnachricht.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</summary>
      <returns>Eine initialisierte <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht, die zu dieser Antwortnachricht geführt hat.</param>
      <param name="statusCode">Der HTTP-Antwortstatuscode.</param>
      <param name="value">Der Inhalt der HTTP-Antwortnachricht.</param>
      <param name="formatter">Der Medientypformatierer.</param>
      <param name="mediaType">Der Medientyp-Headerwert.</param>
      <typeparam name="T">Der Typ der HTTP-Antwortnachricht.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</summary>
      <returns>Eine initialisierte <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht, die zu dieser Antwortnachricht geführt hat.</param>
      <param name="statusCode">Der HTTP-Antwortstatuscode.</param>
      <param name="value">Der Inhalt der HTTP-Antwortnachricht.</param>
      <param name="formatter">Der Medientypformatierer.</param>
      <param name="mediaType">Der Medientyp.</param>
      <typeparam name="T">Der Typ der HTTP-Antwortnachricht.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</summary>
      <returns>Eine initialisierte <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht, die zu dieser Antwortnachricht geführt hat.</param>
      <param name="statusCode">Der HTTP-Antwortstatuscode.</param>
      <param name="value">Der Inhalt der HTTP-Antwortnachricht.</param>
      <param name="mediaType">Der Medientyp-Headerwert.</param>
      <typeparam name="T">Der Typ der HTTP-Antwortnachricht.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</summary>
      <returns>Eine initialisierte <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht, die zu dieser Antwortnachricht geführt hat.</param>
      <param name="statusCode">Der HTTP-Antwortstatuscode.</param>
      <param name="value">Der Inhalt der HTTP-Antwortnachricht.</param>
      <param name="mediaType">Der Medientyp.</param>
      <typeparam name="T">Der Typ der HTTP-Antwortnachricht.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Web.Http.HttpConfiguration)">
      <summary>Erstellt eine <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</summary>
      <returns>Eine initialisierte <see cref="T:System.Net.Http.HttpResponseMessage" />, die mit der zugehörigen <see cref="T:System.Net.Http.HttpRequestMessage" /> verbunden ist.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht, die zu dieser Antwortnachricht geführt hat.</param>
      <param name="statusCode">Der HTTP-Antwortstatuscode.</param>
      <param name="value">Der Inhalt der HTTP-Antwortnachricht.</param>
      <param name="configuration">Die HTTP-Konfiguration, die den Abhängigkeitskonfliktlöser zum Auflösen von Diensten enthält.</param>
      <typeparam name="T">Der Typ der HTTP-Antwortnachricht.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.DisposeRequestResources(System.Net.Http.HttpRequestMessage)">
      <summary>Verwirft alle nachverfolgten Ressource, die dem <paramref name="request" />-Objekt zugeordnet sind und mithilfe der Methode <see cref="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)" /> hinzugefügt wurden.</summary>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetActionDescriptor(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetClientCertificate(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft das aktuelle X.509-Zertifikat aus der angegebenen HTTP-Anforderung ab.</summary>
      <returns>Das aktuelle <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> oder null, wenn kein Zertifikat verfügbar ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetConfiguration(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft die <see cref="T:System.Web.Http.HttpConfiguration" /> für die angegebene Anforderung ab.</summary>
      <returns>Die <see cref="T:System.Web.Http.HttpConfiguration" /> für die angegebene Anforderung.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetCorrelationId(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft die <see cref="T:System.Guid" /> ab, die als die Korrelations-ID zugewiesen wurde, die dem angegebenen <paramref name="request" />-Objekt zugeordnet ist.Der Wert wird beim ersten Aufruf dieser Methode erstellt und festgelegt.</summary>
      <returns>Das <see cref="T:System.Guid" />-Objekt, das die Korrelations-ID darstellt, die der Anforderung zugeordnet ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetDependencyScope(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft das <see cref="T:System.Web.Http.Dependencies.IDependencyScope" />-Objekt für die angegebene Anforderung oder null ab, wenn dieses Objekt nicht verfügbar ist.</summary>
      <returns>Das <see cref="T:System.Web.Http.Dependencies.IDependencyScope" />-Objekt für die angegebene Anforderung oder null, wenn dieses Objekt nicht verfügbar ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetQueryNameValuePairs(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft die analysierte Abfragezeichenfolge als eine Auflistung von Schlüssel-Wert-Paaren ab.</summary>
      <returns>Die analysierte Abfragezeichenfolge als eine Auflistung von Schlüssel-Wert-Paaren.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRequestContext(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetResourcesForDisposal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft das <see cref="T:System.Web.Http.Routing.IHttpRouteData" />-Objekt für die angegebene Anforderung oder null ab, wenn dieses Objekt nicht verfügbar ist.</summary>
      <returns>Das <see cref="T:System.Web.Http.Routing.IHttpRouteData" />-Objekt für die angegebene Anforderung oder null, wenn dieses Objekt nicht verfügbar ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetSynchronizationContext(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft das <see cref="T:System.Threading.SynchronizationContext" />-Objekt für die angegebene Anforderung oder null ab, wenn dieses Objekt nicht verfügbar ist.</summary>
      <returns>Das <see cref="T:System.Threading.SynchronizationContext" />-Objekt für die angegebene Anforderung oder null, wenn dieses Objekt nicht verfügbar ist.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetUrlHelper(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft eine <see cref="T:System.Web.Http.Routing.UrlHelper" />-Instanz für eine HTTP-Anforderung ab.</summary>
      <returns>Eine <see cref="T:System.Web.Http.Routing.UrlHelper" />-Instanz, die für die angegebene HTTP-Anforderung initialisiert wird.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsBatchRequest(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsLocal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.IDisposable})"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)">
      <summary>Fügt die angegebene <paramref name="resource" /> einer Liste von Ressourcen hinzu, die von einem Host verworfen werden, sobald das <paramref name="request" />-Objekt verworfen wird.</summary>
      <param name="request">Die HTTP-Anforderung, die den Lebenszyklus des <paramref name="resource" />-Objekts steuert.</param>
      <param name="resource">Die zu verwerfende Ressource, wenn <paramref name="request" /> verworfen wird.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetConfiguration(System.Net.Http.HttpRequestMessage,System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRequestContext(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpRequestContext)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRouteData(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRouteData)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.ShouldIncludeErrorDetail(System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Net.Http.HttpResponseMessageExtensions">
      <summary>Stellt die Nachrichtenerweiterungen für die HTTP-Antwort aus einem ASP.NET-Vorgang dar.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.TryGetContentValue``1(System.Net.Http.HttpResponseMessage,``0@)">
      <summary>Versucht, den Wert des Inhalts für das <see cref="T:System.Net.Http.HttpResponseMessageExtensions" />-Objekt abzurufen.</summary>
      <returns>Das Ergebnis des Wertabrufs des Inhalts.</returns>
      <param name="response">Die Antwort des Vorgangs.</param>
      <param name="value">Der Wert des Inhalts.</param>
      <typeparam name="T">Der Typ des abzurufenden Werts.</typeparam>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String)"></member>
    <member name="T:System.Net.Http.Formatting.UriPathExtensionMapping">
      <summary>Stellt <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />e aus Pfaderweiterungen bereit, die in einem <see cref="T:System.Uri" /> vorkommen. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />-Klasse. </summary>
      <param name="uriPathExtension">Die dem mediaType entsprechende Erweiterung. Dieser Wert sollte keinen Punkt und keine Platzhalter enthalten.</param>
      <param name="mediaType">Der <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />, der zurückgegeben wird, wenn eine Übereinstimmung mit uriPathExtension vorhanden ist.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.String)">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />-Klasse. </summary>
      <param name="uriPathExtension">Die dem mediaType entsprechende Erweiterung. Dieser Wert sollte keinen Punkt und keine Platzhalter enthalten.</param>
      <param name="mediaType">Der Medientyp, der zurückgegeben wird, wenn eine Übereinstimmung mit uriPathExtension vorhanden ist.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Gibt einen Wert zurück, der angibt, ob diese <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />-Instanz einen <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> für den <see cref="T:System.Uri" /> der Anforderung (request) bereitstellen kann. </summary>
      <returns>Wenn diese Instanz mit einer Dateierweiterung request übereinstimmt, wird 1.0 zurückgegeben, andernfalls 0.0.</returns>
      <param name="request">Die zu prüfende <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtension">
      <summary> Ruft die <see cref="T:System.Uri" />-Pfaderweiterung ab. </summary>
      <returns>Die <see cref="T:System.Uri" />-Pfaderweiterung.</returns>
    </member>
    <member name="F:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtensionKey">
      <summary>Der <see cref="T:System.Uri" />-Pfaderweiterungsschlüssel.</summary>
    </member>
    <member name="T:System.Web.Http.AcceptVerbsAttribute">
      <summary> Gibt an, welche HTTP-Methoden eine Aktion unterstützt. </summary>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.Net.Http.HttpMethod)"></member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.Net.Http.HttpMethod[])"></member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String)"></member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.AcceptVerbsAttribute" />-Klasse.</summary>
      <param name="methods">Die HTTP-Methoden, die die Aktion unterstützt.</param>
    </member>
    <member name="P:System.Web.Http.AcceptVerbsAttribute.HttpMethods">
      <summary>Ruft die HTTP-Methoden ab, die die Aktion unterstützt.</summary>
    </member>
    <member name="T:System.Web.Http.ActionNameAttribute">
      <summary>Stellt ein Attribut dar, das für den Namen einer Aktion verwendet wird.</summary>
    </member>
    <member name="M:System.Web.Http.ActionNameAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ActionNameAttribute" />-Klasse.</summary>
      <param name="name">Der Name der Aktion.</param>
    </member>
    <member name="P:System.Web.Http.ActionNameAttribute.Name">
      <summary>Ruft den Namen der Aktion ab bzw. legt diesen fest.</summary>
      <returns>Der Name der Aktion.</returns>
    </member>
    <member name="T:System.Web.Http.AllowAnonymousAttribute">
      <summary>Gibt an, dass Aktionen und Controller während der Autorisierung von <see cref="T:System.Web.Http.AuthorizeAttribute" /> übersprungen werden.</summary>
    </member>
    <member name="M:System.Web.Http.AllowAnonymousAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.AllowAnonymousAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.ApiController">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.#ctor"></member>
    <member name="M:System.Web.Http.ApiController.BadRequest">
      <summary>Erstellt ein <see cref="T:System.Web.Http.Results.BadRequestResult" />.</summary>
      <returns>Ein <see cref="T:System.Web.Http.Results.BadRequestResult" />-Objekt.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.String)"></member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Erstellt ein <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> mit dem angegebenen Modellzustand.</summary>
      <returns>Ein <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> mit dem angegebenen Modellzustand.</returns>
      <param name="modelState">Der Modellzustand, der in den Fehler einzuschließen ist.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Configuration">
      <summary>Ruft die <see cref="HttpConfiguration" /> des aktuellen ApiControllers ab.Der Setter ist nur für den Einsatz bei Komponententests gedacht.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.Conflict"></member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
      <summary>Erstellt ein &lt;siehe cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt; mit den angegebenen Werten.</summary>
      <returns>Ein &lt;siehe cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt; mit den angegebenen Werten.</returns>
      <param name="statusCode">Der HTTP-Statuscode für die Antwortnachricht.</param>
      <param name="value">Der Inhaltstyp, der ausgehandelt und im Entitätstext formatiert werden soll.</param>
      <typeparam name="T">Der Inhaltstyp im Entitätstext.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Erstellt ein &lt;siehe cref="T:System.Web.Http.FormattedContentResult`1" /&gt; mit den angegebenen Werten.</summary>
      <returns>Ein &lt;siehe cref="T:System.Web.Http.FormattedContentResult`1" /&gt; mit den angegebenen Werten.</returns>
      <param name="statusCode">Der HTTP-Statuscode für die Antwortnachricht.</param>
      <param name="value">Der Inhaltswert, der im Entitätstext formatiert werden soll.</param>
      <param name="formatter">Der Formatierer, der zum Formatieren des Inhalts verwendet werden soll.</param>
      <typeparam name="T">Der Inhaltstyp im Entitätstext.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Erstellt ein &lt;siehe cref="T:System.Web.Http.FormattedContentResult`1" /&gt; mit den angegebenen Werten.</summary>
      <returns>Ein &lt;siehe cref="T:System.Web.Http.FormattedContentResult`1" /&gt; mit den angegebenen Werten.</returns>
      <param name="statusCode">Der HTTP-Statuscode für die Antwortnachricht.</param>
      <param name="value">Der Inhaltswert, der im Entitätstext formatiert werden soll.</param>
      <param name="formatter">Der Formatierer, der zum Formatieren des Inhalts verwendet werden soll.</param>
      <param name="mediaType"> Der Wert für den Content-Type-Header oder &lt;siehe langword="null" /&gt;, damit der Formatierer einen Standardwert auswählt. </param>
      <typeparam name="T">Der Inhaltstyp im Entitätstext.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Erstellt ein &lt;siehe cref="T:System.Web.Http.FormattedContentResult`1" /&gt; mit den angegebenen Werten.</summary>
      <returns>Ein &lt;siehe cref="T:System.Web.Http.FormattedContentResult`1" /&gt; mit den angegebenen Werten.</returns>
      <param name="statusCode">Der HTTP-Statuscode für die Antwortnachricht.</param>
      <param name="value">Der Inhaltswert, der im Entitätstext formatiert werden soll.</param>
      <param name="formatter">Der Formatierer, der zum Formatieren des Inhalts verwendet werden soll.</param>
      <param name="mediaType">Der Wert für den Content-Type-Header.</param>
      <typeparam name="T">Der Inhaltstyp im Entitätstext.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ControllerContext">
      <summary>Ruft die <see cref="HttpControllerContext" /> des aktuellen ApiControllers ab.Der Setter ist nur für den Einsatz bei Komponententests gedacht.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose"></member>
    <member name="M:System.Web.Http.ApiController.Dispose(System.Boolean)"></member>
    <member name="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)"></member>
    <member name="M:System.Web.Http.ApiController.InternalServerError"></member>
    <member name="M:System.Web.Http.ApiController.InternalServerError(System.Exception)"></member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ModelState">
      <summary>Ruft den Modellzustand nach dem Modellbindungsprozess ab.Dieser Modellzustand ist leer, bevor die Modellbindung erfolgt.Füllen Sie diese Eigenschaft nur zu Komponententestzwecken auf.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.NotFound">
      <summary>Erstellt ein <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <returns>Ein <see cref="T:System.Web.Http.Results.NotFoundResult" />-Objekt.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Ok"></member>
    <member name="M:System.Web.Http.ApiController.Ok``1(``0)">
      <summary>Erstellt ein <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> mit den angegebenen Werten.</summary>
      <returns>Ein <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> mit den angegebenen Werten.</returns>
      <typeparam name="T">Der Inhaltstyp im Entitätstext.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.Request">
      <summary>Ruft die <see cref="HttpRequestMessage" /> des aktuellen ApiControllers ab.Der Setter ist nur für den Einsatz bei Komponententests gedacht.</summary>
    </member>
    <member name="P:System.Web.Http.ApiController.RequestContext"></member>
    <member name="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
      <summary>Erstellt ein <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> mit der angegebenen Antwort.</summary>
      <returns>Ein <see cref="T:System.Web.Http.Results.ResponseMessageResult" />-Objekt für die angegebene Antwort.</returns>
      <param name="response">Die HTTP-Antwortnachricht.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
      <summary>Erstellt ein <see cref="T:System.Web.Http.StatusCodeResult" /> mit dem angegebenen Statuscode.</summary>
      <returns>Ein <see cref="T:System.Web.Http.StatusCodeResult" /> mit dem angegebenen Statuscode.</returns>
      <param name="status">Der HTTP-Statuscode für die Antwortnachricht.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})"></member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])"></member>
    <member name="P:System.Web.Http.ApiController.Url">
      <summary>Ruft eine Instanz eines <see cref="UrlHelper" />s ab, die zum Generieren von URLs zu anderen APIs verwendet wird.Der Setter ist nur für den Einsatz bei Komponententests gedacht.</summary>
    </member>
    <member name="P:System.Web.Http.ApiController.User">
      <summary>Gibt den aktuellen Prinzipal zurück, der dieser Anforderung zugeordnet ist.</summary>
    </member>
    <member name="T:System.Web.Http.AuthorizeAttribute">
      <summary>Gibt den Autorisierungsfilter an, mit dem der <see cref="T:System.Security.Principal.IPrincipal" /> der Anforderung überprüft wird.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.AuthorizeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Verarbeitet Anforderungen, deren Autorisierung nicht erfolgreich war.</summary>
      <param name="actionContext">Der Kontext.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Gibt an, ob das angegebene Steuerelement autorisiert ist.</summary>
      <returns>true, wenn das Steuerelement autorisiert ist, andernfalls false.</returns>
      <param name="actionContext">Der Kontext.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Wird aufgerufen, wenn eine Aktion autorisiert wird.</summary>
      <param name="actionContext">Der Kontext.</param>
      <exception cref="T:System.ArgumentNullException">Der Kontextparameter ist null.</exception>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Roles">
      <summary>Ruft die autorisierten Rollen ab bzw. legt diese fest. </summary>
      <returns>Die Rollenzeichenfolge. </returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.TypeId">
      <summary>Ruft einen eindeutigen Bezeichner für dieses Attribut ab.</summary>
      <returns>Ein eindeutiger Bezeichner für dieses Attribut.</returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Users">
      <summary>Ruft die autorisierten Benutzer ab bzw. legt sie fest. </summary>
      <returns>Die Benutzerzeichenfolge. </returns>
    </member>
    <member name="T:System.Web.Http.DefaultRouteAttribute">
      <summary>Annotates a controller with a route template that applies to any actions within the controller that don't already have a route template.</summary>
    </member>
    <member name="M:System.Web.Http.DefaultRouteAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.DefaultRouteAttribute" /> class.  </summary>
    </member>
    <member name="M:System.Web.Http.DefaultRouteAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.DefaultRouteAttribute" /> class. </summary>
      <param name="routeTemplate">The route template for the controller.</param>
    </member>
    <member name="P:System.Web.Http.DefaultRouteAttribute.RouteTemplate">
      <summary>Gets the route template describing the URI pattern to match against.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.FromBodyAttribute">
      <summary> Ein Attribut, das angibt, dass ein Aktionsparameter nur aus dem Eintitätsnachrichtentext der eingehenden <see cref="T:System.Net.Http.HttpRequestMessage" /> stammt. </summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.FromBodyAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Ruft eine Parameterbindung ab.</summary>
      <returns>Die Parameterbindung.</returns>
      <param name="parameter">Die Parameterbeschreibung.</param>
    </member>
    <member name="T:System.Web.Http.FromUriAttribute">
      <summary>Ein Attribut, das angibt, dass ein Aktionsparameter aus dem URI der eingehenden <see cref="T:System.Net.Http.HttpRequestMessage" /> stammt.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.FromUriAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Ruft die Wertanbieterfactorys für die Modellbindung ab.</summary>
      <returns>Eine Auflistung von <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />-Objekten.</returns>
      <param name="configuration">Die Konfiguration.</param>
    </member>
    <member name="T:System.Web.Http.HttpBindNeverAttribute">
      <summary>Stellt Attribute dar, die angeben, dass eine HTTP-Bindung eine Eigenschaft ausschließen soll.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindNeverAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpBindNeverAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.HttpBindRequiredAttribute">
      <summary>Stellt das erforderliche Attribut für die HTTP-Bindung dar.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindRequiredAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpBindRequiredAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.HttpConfiguration">
      <summary>Stellt eine Konfiguration von <see cref="T:System.Web.Http.HttpServer" />-Instanzen dar. </summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpConfiguration" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor(System.Web.Http.HttpRouteCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpConfiguration" />-Klasse mit einer HTTP-Routenauflistung.</summary>
      <param name="routes">Die HTTP-Routenauflistung, die dieser Instanz zugeordnet werden soll.</param>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.DependencyResolver">
      <summary>Ruft den dieser Instanz zugeordneten Abhängigkeitskonfliktlöser ab oder legt diesen fest.</summary>
      <returns>Der Abhängigkeitskonfliktlöser.</returns>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose">
      <summary>Führt anwendungsdefinierte Aufgaben aus, die sich auf das Freigeben und Zurücksetzen nicht verwalteter Ressourcen beziehen.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose(System.Boolean)">
      <summary>Gibt die von dem Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. false, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.EnsureInitialized"></member>
    <member name="P:System.Web.Http.HttpConfiguration.Filters">
      <summary>Ruft die Liste der Filter ab, die für alle Anforderungen gelten, die mithilfe dieser <see cref="T:System.Web.Http.HttpConfiguration" />-Instanz verarbeitet werden, oder legt diese fest.</summary>
      <returns>Die Liste der Filter.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Formatters">
      <summary>Ruft die Medientypformatierer für diese Instanz ab.</summary>
      <returns>Eine Auflistung von <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />-Objekten.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.IncludeErrorDetailPolicy">
      <summary>Ruft einen Wert ab, der angibt, ob Fehlerdetails in Fehlermeldungen aufgenommen werden sollen, oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" />-Wert, der diese Fehlerdetailrichtlinie angibt.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Initializer">
      <summary> Ruft die Aktion ab, die die endgültige Initialisierung der <see cref="T:System.Web.Http.HttpConfiguration" />-Instanz ausführt, bevor diese zum Verarbeiten von Anforderungen verwendet wird, oder legt diese Aktion fest. </summary>
      <returns>Die Aktion, die die endgültige Initialisierung der <see cref="T:System.Web.Http.HttpConfiguration" />-Instanz ausführt.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.MessageHandlers">
      <summary>Ruft eine sortierte Liste von <see cref="T:System.Net.Http.DelegatingHandler" />-Instanzen ab, die aufgerufen werden sollen, während eine <see cref="T:System.Net.Http.HttpRequestMessage" /> den Stapel nach oben durchläuft und im Gegenzug eine andere <see cref="T:System.Net.Http.HttpResponseMessage" /> den Stapel nach unten durchläuft. </summary>
      <returns>Die Nachrichtenhandlerauflistung.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.ParameterBindingRules">
      <summary>Ruft die Auflistung der Regeln für die Art der Parameterbindungen ab.</summary>
      <returns>Eine Auflistung von Funktionen, die eine Parameterbindung für einen angegebenen Parameter generieren können.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Properties">
      <summary>Ruft die Eigenschaften ab, die dieser Instanz zugeordnet sind.</summary>
      <returns>Das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />-Objekt, das die Eigenschaften enthält.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Routes">
      <summary>Ruft die <see cref="T:System.Web.Http.HttpRouteCollection" /> ab, die dieser <see cref="T:System.Web.Http.HttpConfiguration" />-Instanz zugeordnet ist.</summary>
      <returns>Das <see cref="T:System.Web.Http.HttpRouteCollection" />-Objekt.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Services">
      <summary>Ruft den Container der Standarddienste ab, die dieser Instanz zugeordnet sind.</summary>
      <returns>Der <see cref="T:System.Web.Http.Controllers.ServicesContainer" />, der die Standarddienste für diese Instanz enthält.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.VirtualPathRoot">
      <summary>Ruft den virtuellen Stammpfad ab.</summary>
      <returns>Der virtuelle Stammpfad.</returns>
    </member>
    <member name="T:System.Web.Http.HttpConfigurationExtensions">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.BindParameter(System.Web.Http.HttpConfiguration,System.Type,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Registriert, dass der angegebene Parametertyp für eine Aktion mithilfe der Modellbindung gebunden werden muss.</summary>
      <param name="configuration">Die zu aktualisierende Konfiguration.</param>
      <param name="type">Der Parametertyp, auf den die Bindung angewendet wird.</param>
      <param name="binder">Eine Modellbindung.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration)">
      <summary> Ordnet die durch Attribute definierten Routen für die Anwendung zu. </summary>
      <param name="configuration">Die Serverkonfiguration.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.HttpRouteBuilder)">
      <summary> Ordnet die durch Attribute definierten Routen für die Anwendung zu. </summary>
      <param name="configuration">Die Serverkonfiguration.</param>
      <param name="routeBuilder">Der <see cref="T:System.Web.Http.Routing.HttpRouteBuilder" />, der zum Generieren von Attributrouten verwendet werden soll.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.SuppressHostPrincipal(System.Web.Http.HttpConfiguration)">
      <summary>Aktiviert die Unterdrückung des Prinzipals des Hosts.</summary>
      <param name="configuration">Die Serverkonfiguration.</param>
    </member>
    <member name="T:System.Web.Http.HttpDeleteAttribute">
      <summary>Gibt an, dass eine Aktion die DELETE HTTP-Methode unterstützt.</summary>
    </member>
    <member name="M:System.Web.Http.HttpDeleteAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpDeleteAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.HttpError">
      <summary>Definiert einen serialisierbaren Container zum Speichern von Fehlerinformationen.Diese Informationen werden als Schlüssel-Wert-Paare gespeichert.Die Wörterbuchschlüssel zum Nachschlagen von Standardfehlerinformationen sind für den Typ <see cref="T:System.Web.Http.HttpErrorKeys" /> verfügbar.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpError" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Exception,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpError" />-Klasse für <paramref name="exception" />.</summary>
      <param name="exception">Die Ausnahme, die für die Fehlerinformationen verwendet werden soll.</param>
      <param name="includeErrorDetail">true, um die Ausnahmeinformationen in den Fehler einzuschließen, andernfalls false.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpError" />-Klasse, die die Fehlermeldung <paramref name="message" /> enthält.</summary>
      <param name="message">Die Fehlermeldung, die dieser Instanz zugeordnet werden soll.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpError" />-Klasse für <paramref name="modelState" />.</summary>
      <param name="modelState">Der ungültige Modellstatus, der für Fehlerinformationen verwendet werden soll.</param>
      <param name="includeErrorDetail">true, um die Ausnahmemeldungen in den Fehler einzuschließen, andernfalls false.</param>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionMessage">
      <summary> Die Meldung von <see cref="T:System.Exception" />, wenn verfügbar. </summary>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionType">
      <summary> Der Typ von <see cref="T:System.Exception" />, wenn verfügbar. </summary>
    </member>
    <member name="M:System.Web.Http.HttpError.GetPropertyValue``1(System.String)">
      <summary> Ruft einen bestimmten Eigenschaftenwert aus dieser Fehlerinstanz ab. </summary>
      <param name="key">Der Name der Fehlereigenschaft.</param>
      <typeparam name="TValue">Der Typ der Eigenschaft.</typeparam>
    </member>
    <member name="P:System.Web.Http.HttpError.InnerException">
      <summary> Die interne <see cref="T:System.Exception" />, die dieser Instanz zugeordnet ist, wenn verfügbar. </summary>
    </member>
    <member name="P:System.Web.Http.HttpError.Message">
      <summary>Die allgemeine, für den Benutzer sichtbare Meldung, in der der Grund des Fehlers erklärt wird. Informationen in diesem Feld sollten als öffentlich betrachtet werden, weil sie über das Netzt ohne Rücksicht auf <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" /> übermittelt werden.Daher sollten Maßnahmen ergriffen werden, damit vertrauliche Informationen zum Server oder zur Anwendung nicht offengelegt werden.</summary>
    </member>
    <member name="P:System.Web.Http.HttpError.MessageDetail">
      <summary> Eine ausführliche Beschreibung des Fehlers, damit Entwickler die genaue Fehlerursache ermitteln können. </summary>
    </member>
    <member name="P:System.Web.Http.HttpError.ModelState">
      <summary> Der <see cref="P:System.Web.Http.HttpError.ModelState" />, der Informationen zu den Fehlern enthält, die während der Modellbindung aufgetreten sind. </summary>
    </member>
    <member name="P:System.Web.Http.HttpError.StackTrace">
      <summary> Die Stapelüberwachungsinformationen, die dieser Instanz zugeordnet sind, wenn verfügbar. </summary>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#GetSchema"></member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)"></member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)"></member>
    <member name="T:System.Web.Http.HttpErrorKeys">
      <summary> Provides keys to look up error information stored in the <see cref="T:System.Web.Http.HttpError" /> dictionary. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ErrorCodeKey">
      <summary> Provides a key for the ErrorCode. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionMessageKey">
      <summary> Provides a key for the ExceptionMessage. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionTypeKey">
      <summary> Provides a key for the ExceptionType. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.InnerExceptionKey">
      <summary> Provides a key for the InnerException. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageDetailKey">
      <summary> Provides a key for the MessageDetail. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageKey">
      <summary> Provides a key for the Message. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageLanguageKey">
      <summary> Provides a key for the MessageLanguage. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ModelStateKey">
      <summary> Provides a key for the ModelState. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.StackTraceKey">
      <summary> Provides a key for the StackTrace. </summary>
    </member>
    <member name="T:System.Web.Http.HttpGetAttribute">
      <summary>Gibt an, dass eine Aktion die GET HTTP-Methode unterstützt.</summary>
    </member>
    <member name="M:System.Web.Http.HttpGetAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpGetAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.HttpHeadAttribute">
      <summary> Gibt an, dass eine Aktion die HEAD HTTP-Methode unterstützt. </summary>
    </member>
    <member name="M:System.Web.Http.HttpHeadAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpHeadAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.HttpOptionsAttribute">
      <summary> Gibt an, dass eine Aktion die OPTIONS HTTP-Methode unterstützt. </summary>
    </member>
    <member name="M:System.Web.Http.HttpOptionsAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpOptionsAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.HttpPatchAttribute">
      <summary> Gibt an, dass eine Aktion die PATCH HTTP-Methode unterstützt. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPatchAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpPatchAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.HttpPostAttribute">
      <summary>Gibt an, dass eine Aktion die POST HTTP-Methode unterstützt. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPostAttribute.#ctor"></member>
    <member name="T:System.Web.Http.HttpPutAttribute">
      <summary> Gibt an, dass eine Aktion die PUT HTTP-Methode unterstützt. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPutAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpPutAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.HttpResponseException">
      <summary> Eine Ausnahme, die die Rückgabe einer vorgegebenen <see cref="T:System.Net.Http.HttpResponseMessage" /> an den Client ermöglicht. </summary>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpResponseException" />-Klasse.</summary>
      <param name="response">Die an den Client zurückzugebende HTTP-Antwort.</param>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.HttpStatusCode)">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpResponseException" />-Klasse. </summary>
      <param name="statusCode">Der Statuscode der Antwort.</param>
    </member>
    <member name="P:System.Web.Http.HttpResponseException.Response">
      <summary>Ruft die an den Client zurückzugebende HTTP-Antwort ab.</summary>
      <returns>Die <see cref="T:System.Net.Http.HttpResponseMessage" />, die die HTTP-Antwort darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollection">
      <summary>Eine Auflistung von <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanzen.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpRouteCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpRouteCollection" />-Klasse.</summary>
      <param name="virtualPathRoot">Der virtuelle Pfadstamm.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Add(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Fügt der Auflistung eine <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz hinzu.</summary>
      <param name="name">Der Name der Route.</param>
      <param name="route">Die <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz, die der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Clear">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Contains(System.Web.Http.Routing.IHttpRoute)">
      <summary>Bestimmt, ob die Auflistung eine bestimmte <see cref="T:System.Web.Http.Routing.IHttpRoute" /> enthält.</summary>
      <returns>true, wenn sich <see cref="T:System.Web.Http.Routing.IHttpRoute" /> in der Auflistung befindet, andernfalls false.</returns>
      <param name="item">Das Objekt, das in der Auflistung gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ContainsKey(System.String)">
      <summary>Bestimmt, ob die Auflistung ein Element mit dem angegebenen Schlüssel enthält.</summary>
      <returns>true, wenn die Auflistung ein Element mit dem Schlüssel enthält, andernfalls false.</returns>
      <param name="name">Der Schlüssel, der in der Auflistung gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.Routing.IHttpRoute}[],System.Int32)">
      <summary>Kopiert die <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanzen der Auflistung in ein Array. Dabei wird an einem bestimmten Arrayindex begonnen.</summary>
      <param name="array">Das Array, das das Ziel der aus der Auflistung kopierten Elemente ist.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, an dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Web.Http.Routing.IHttpRoute[],System.Int32)">
      <summary>Kopiert die Routennamen und <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanzen der Auflistung in ein Array. Dabei wird an einem bestimmten Arrayindex begonnen.</summary>
      <param name="array">Das Array, das das Ziel der aus der Auflistung kopierten Elemente ist.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, an dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Erstellt eine <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz.</summary>
      <returns>Die neue <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz.</returns>
      <param name="routeTemplate">Die Routenvorlage.</param>
      <param name="defaults">Ein Objekt, das die Routenstandardparameter enthält.</param>
      <param name="constraints">Ein Objekt, das die Routeneinschränkungen enthält.</param>
      <param name="dataTokens">Die Routendatentoken.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)">
      <summary>Erstellt eine <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz.</summary>
      <returns>Die neue <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz.</returns>
      <param name="routeTemplate">Die Routenvorlage.</param>
      <param name="defaults">Ein Objekt, das die Routenstandardparameter enthält.</param>
      <param name="constraints">Ein Objekt, das die Routeneinschränkungen enthält.</param>
      <param name="dataTokens">Die Routendatentoken.</param>
      <param name="handler">Der Nachrichtenhandler für die Route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Object,System.Object)">
      <summary>Erstellt eine <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz.</summary>
      <returns>Die neue <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz.</returns>
      <param name="routeTemplate">Die Routenvorlage.</param>
      <param name="defaults">Ein Objekt, das die Routenstandardparameter enthält.</param>
      <param name="constraints">Ein Objekt, das die Routeneinschränkungen enthält.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose">
      <summary>Führt anwendungsdefinierte Aufgaben aus, die sich auf das Freigeben und Zurücksetzen nicht verwalteter Ressourcen beziehen.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose(System.Boolean)">
      <summary>Gibt die von dem Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. false, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.IEnumerator`1" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft die Routendaten für eine angegebene HTTP-Anforderung ab.</summary>
      <returns>Eine <see cref="T:System.Web.Http.Routing.IHttpRouteData" />-Instanz, die die Routendaten darstellt.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ruft einen virtuellen Pfad ab.</summary>
      <returns>Eine <see cref="T:System.Web.Http.Routing.IHttpVirtualPathData" />-Instanz, die den virtuellen Pfad darstellt.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
      <param name="name">Der Routenname.</param>
      <param name="values">Die Routenwerte.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Insert(System.Int32,System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Fügt eine <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="name">Der Routenname.</param>
      <param name="value">Die einzufügende <see cref="T:System.Web.Http.Routing.IHttpRoute" />.Der Wert darf nicht null sein.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>True, wenn die Auflistung schreibgeschützt ist, andernfalls False.</returns>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab bzw. legt dieses fest.</summary>
      <returns>Die <see cref="T:System.Web.Http.Routing.IHttpRoute" /> am angegebenen Index.</returns>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.String)">
      <summary>Ruft das Element mit dem angegebenen Routennamen ab bzw. legt dieses fest.</summary>
      <returns>Die <see cref="T:System.Web.Http.Routing.IHttpRoute" /> am angegebenen Index.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.OnGetEnumerator">
      <summary>Wird intern zum Abrufen des Enumerators für die Auflistung verwendet.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Remove(System.String)">
      <summary>Entfernt eine <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz aus der Auflistung.</summary>
      <returns>True, wenn das Element erfolgreich entfernt wurde, andernfalls False.Diese Methode gibt auch dann False zurück, wenn <paramref name="name" /> nicht in der Auflistung gefunden wurde.</returns>
      <param name="name">Der Name der zu entfernenden Route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Add(System.Web.Http.Routing.IHttpRoute)">
      <summary>Fügt der Auflistung ein Element hinzu.</summary>
      <param name="route">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Remove(System.Web.Http.Routing.IHttpRoute)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus der Auflistung.</summary>
      <returns>True, wenn <paramref name="route" /> erfolgreich aus der Auflistung entfernt wurde, andernfalls False.Diese Methode gibt auch dann false zurück, wenn <paramref name="route" /> in der ursprünglichen Auflistung nicht gefunden wurde.</returns>
      <param name="route">Das Objekt, das aus der Auflistung entfernt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, mithilfe dessen eine Auflistung durchlaufen werden kann.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.TryGetValue(System.String,System.Web.Http.Routing.IHttpRoute@)">
      <summary>Ruft die <see cref="T:System.Web.Http.Routing.IHttpRoute" /> mit dem angegebenen Routennamen ab.</summary>
      <returns>true, wenn die Auflistung ein Element mit dem angegebenen Namen enthält, andernfalls false.</returns>
      <param name="name">Der Routenname.</param>
      <param name="route">Der Rückgabewert dieser Methode ist die <see cref="T:System.Web.Http.Routing.IHttpRoute" />-Instanz, wenn der Routenname gefunden wurde, andernfalls null.Dieser Parameter wird nicht initialisiert übergeben.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.VirtualPathRoot">
      <summary>Ruft den virtuellen Pfadstamm ab.</summary>
      <returns>Der virtuelle Pfadstamm.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollectionExtensions">
      <summary> Erweiterungsmethoden für <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpBatchRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Web.Http.Batch.HttpBatchHandler)">
      <summary> Ordnet die angegebene Route zum Verarbeiten von HTTP-Batchanforderungen zu. </summary>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="routeName">Der Name der zuzuordnenden Route.</param>
      <param name="routeTemplate">Die Routenvorlage für die Route.</param>
      <param name="batchHandler">Das <see cref="T:System.Web.Http.Batch.HttpBatchHandler" />-Objekt für die Verarbeitung von Batchanforderungen.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Ordnet die angegebene Routenvorlage zu.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="routeTemplate">Die Routenvorlage für die Route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Ordnet die angegebene Routenvorlage zu und legt Standardeinschränkungen fest.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="routeTemplate">Die Routenvorlage für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Ordnet die angegebene Routenvorlage zu und legt Standardroutenwerte und -einschränkungen fest.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="routeTemplate">Die Routenvorlage für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <param name="constraints">Ein Satz von Ausdrücken, die Werte für <paramref name="routeTemplate" /> angeben.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary>Ordnet die angegebene Routenvorlage zu und legt Routenstandardwerte, Einschränkungen sowie den Endpunktnachrichtenhandler fest.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="routeTemplate">Die Routenvorlage für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <param name="constraints">Ein Satz von Ausdrücken, die Werte für <paramref name="routeTemplate" /> angeben.</param>
      <param name="handler">Der Handler, an den die Anforderung verteilt wird.</param>
    </member>
    <member name="T:System.Web.Http.HttpServer">
      <summary> Definiert eine Implementierung eines <see cref="T:System.Net.Http.HttpMessageHandler" />, der eine eingehende <see cref="T:System.Net.Http.HttpRequestMessage" /> versendet und als Ergebnis eine <see cref="T:System.Net.Http.HttpResponseMessage" /> erstellt. </summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor">
      <summary>Initialisiert mithilfe der Standardkonfiguration und des -verteilers eine neue Instanz der <see cref="T:System.Web.Http.HttpServer" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpServer" />-Klasse mit einem angegebenen Verteiler. </summary>
      <param name="dispatcher">Der für die Verarbeitung eingehender Anforderungen verantwortliche HTTP-Verteiler.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpServer" />-Klasse mit einer angegebenen Konfiguration.</summary>
      <param name="configuration">Die <see cref="T:System.Web.Http.HttpConfiguration" />, die zum Konfigurieren dieser Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.HttpServer" />-Klasse mit einer angegebenen Konfiguration und einem angegebenen Verteiler.</summary>
      <param name="configuration">Die <see cref="T:System.Web.Http.HttpConfiguration" />, die zum Konfigurieren dieser Instanz verwendet wird.</param>
      <param name="dispatcher">Der für die Verarbeitung eingehender Anforderungen verantwortliche HTTP-Verteiler.</param>
    </member>
    <member name="P:System.Web.Http.HttpServer.Configuration">
      <summary>Ruft die <see cref="T:System.Web.Http.HttpConfiguration" /> ab, die zum Konfigurieren dieser Instanz verwendet wird.</summary>
      <returns>Die <see cref="T:System.Web.Http.HttpConfiguration" />, die zum Konfigurieren dieser Instanz verwendet wird.</returns>
    </member>
    <member name="P:System.Web.Http.HttpServer.Dispatcher">
      <summary>Ruft den für die Verarbeitung eingehender Anforderungen verantwortlichen HTTP-Verteiler ab.</summary>
      <returns>Der für die Verarbeitung eingehender Anforderungen verantwortliche HTTP-Verteiler.</returns>
    </member>
    <member name="M:System.Web.Http.HttpServer.Dispose(System.Boolean)">
      <summary>Gibt die von dem Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. false, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.Initialize">
      <summary>Bereitet den Server auf den Betrieb vor.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Verteilt eine eingehende <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns> Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
      <param name="request">Die zu verteilende Anforderung.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
    </member>
    <member name="T:System.Web.Http.IHttpActionResult">
      <summary>Defines a command that asynchronously creates an <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Web.Http.IHttpActionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> asynchronously.</summary>
      <returns>A task that, when completed, contains the <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.Http.IncludeErrorDetailPolicy">
      <summary>Gibt an, ob Fehlerdetails wie Ausnahmemeldungen und Stapelüberwachungen in Fehlermeldungen aufgenommen werden sollen.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Always">
      <summary>Immer Fehlerdetails einschließen.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Default">
      <summary>Verwendet das Standardverhalten für die Hostumgebung.Verwendet für ASP.NET-Hosting den Wert aus dem Element customErrors in der Datei Web.config.Verwendet für Selbsthosting den Wert <see cref="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly" />.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly">
      <summary>Fehlerdetails nur einschließen, wenn auf eine lokale Anforderung geantwortet wird. </summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Never">
      <summary>Nie Fehlerdetails einschließen. </summary>
    </member>
    <member name="T:System.Web.Http.NonActionAttribute">
      <summary>Stellt ein Attribut dar, mit dem angegeben wird, dass eine Controllermethode keine Aktionsmethode ist.</summary>
    </member>
    <member name="M:System.Web.Http.NonActionAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.NonActionAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Http.OverrideActionFiltersAttribute">
      <summary>Represents a filter attribute that overrides action filters defined at a higher level.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideActionFiltersAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OverrideActionFiltersAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.AllowMultiple">
      <summary>Gets a value indicating whether the action filter allows multiple attribute.</summary>
      <returns>true if the action filter allows multiple attribute; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>Gets the type of filters to override.</summary>
      <returns>The type of filters to override.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideAuthenticationAttribute">
      <summary>Represents a filter attribute that overrides authentication filters defined at a higher level.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthenticationAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.OverrideAuthorizationAttribute">
      <summary>Represents a filter attribute that overrides authorization filters defined at a higher level.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthorizationAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OverrideAuthorizationAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.AllowMultiple">
      <summary>Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</summary>
      <returns>true if more than one instance is allowed to be specified; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>Gets the type to filters override attributes.</summary>
      <returns>The type to filters override attributes.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideExceptionFiltersAttribute">
      <summary>Represents a filter attribute that overrides exception filters defined at a higher level.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideExceptionFiltersAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.ParameterBindingAttribute">
      <summary>Ein Attribut für einen Parameter oder Typ, der eine <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> generiert.Wenn das Attribut für eine Typdeklaration gilt, verhält es sich so, als wäre dieses Attribut für alle Aktionsparameter dieses Typs vorhanden.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ParameterBindingAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Ruft die Parameterbindung ab.</summary>
      <returns>Die Parameterbindung.</returns>
      <param name="parameter">Die Parameterbeschreibung.</param>
    </member>
    <member name="T:System.Web.Http.RouteAttribute">
      <summary>Place on an action to expose it directly via a route.</summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.RouteAttribute" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.RouteAttribute" /> class. </summary>
      <param name="template">The route template describing the URI pattern to match against.</param>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Name">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Order">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Template">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.RouteParameter">
      <summary>Mithilfe der <see cref="T:System.Web.Http.RouteParameter" />-Klasse können Eigenschaften eines Routenparameters angezeigt werden (Literalwerte und Platzhalter, die sich in Segmenten einer <see cref="M:IHttpRoute.RouteTemplate" /> befinden).Beispielsweise kann damit angezeigt werden, dass ein Routenparameter optional ist.</summary>
    </member>
    <member name="F:System.Web.Http.RouteParameter.Optional">
      <summary>Ein optionaler Parameter.</summary>
    </member>
    <member name="M:System.Web.Http.RouteParameter.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die diese Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.String" />, die diese Instanz darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.RoutePrefixAttribute">
      <summary> Annotates a controller with a route prefix that applies to all actions within the controller. </summary>
    </member>
    <member name="M:System.Web.Http.RoutePrefixAttribute.#ctor(System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.RoutePrefixAttribute" /> class. </summary>
      <param name="prefix">The route prefix for the controller.</param>
    </member>
    <member name="P:System.Web.Http.RoutePrefixAttribute.Prefix">
      <summary> Gets the route prefix. </summary>
    </member>
    <member name="T:System.Web.Http.ServicesExtensions">
      <summary>Stellt typsichere Accessors für Dienste bereit, die aus einem <see cref="T:System.Web.Http.Controllers.ServicesContainer" />-Objekt abgerufen werden.</summary>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionInvoker(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionValueBinder(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetApiExplorer(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Description.IApiExplorer" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Description.IApiExplorer" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetAssembliesResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetBodyModelValidator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetContentNegotiator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetDocumentationProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Description.IDocumentationProvider" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Description.IDocumentationProvider" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetFilterProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft die <see cref="T:System.Web.Http.Filters.IFilterProvider" />-Auflistung ab.</summary>
      <returns>Gibt eine Auflistung von <see cref="T:System.Web.Http.Filters.IFilterProvider" />-Objekten zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHostBufferPolicySelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHostPrincipalService(System.Web.Http.Controllers.ServicesContainer)"></member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerActivator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />-Instanz oder null zurück, wenn keine Instanz registriert wurde.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerTypeResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelBinderProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft die <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />-Auflistung ab.</summary>
      <returns>Gibt eine Auflistung von <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />-Objekten zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelMetadataProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelValidatorProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft die <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />-Auflistung ab.</summary>
      <returns>Gibt eine Auflistung von <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />-Objekten zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceManager(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Tracing.ITraceManager" />-Dienst ab.</summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Tracing.ITraceManager" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceWriter(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft den <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Dienst ab. </summary>
      <returns>Gibt eine <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Instanz zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetValueProviderFactories(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ruft die <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />-Auflistung ab.</summary>
      <returns>Gibt eine Auflistung von <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />-Objekten zurück.</returns>
      <param name="services">Der Dienstecontainer.</param>
    </member>
    <member name="T:System.Web.Http.Batch.BatchExecutionOrder">
      <summary> Defines the order of execution for batch requests. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.NonSequential">
      <summary> Executes the batch requests non-sequentially. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.Sequential">
      <summary> Executes the batch requests sequentially. </summary>
    </member>
    <member name="T:System.Web.Http.Batch.BatchHttpRequestMessageExtensions">
      <summary> Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.Batch.BatchHttpRequestMessageExtensions.CopyBatchRequestProperties(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpRequestMessage)">
      <summary> Copies the properties from another <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="subRequest">The sub-request.</param>
      <param name="batchRequest">The batch request that contains the properties to copy.</param>
    </member>
    <member name="T:System.Web.Http.Batch.DefaultHttpBatchHandler">
      <summary>Represents the default implementation of <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> that encodes the HTTP request/response messages as MIME multipart.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Batch.DefaultHttpBatchHandler" /> class.</summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IList{System.Net.Http.HttpResponseMessage},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Creates the batch response message.</summary>
      <returns>The batch response message.</returns>
      <param name="responses">The responses for the batch requests.</param>
      <param name="request">The original request containing all the batch requests.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{System.Net.Http.HttpRequestMessage},System.Threading.CancellationToken)">
      <summary>Executes the batch request messages.</summary>
      <returns>A collection of <see cref="T:System.Net.Http.HttpResponseMessage" /> for the batch requests.</returns>
      <param name="requests">The collection of batch request messages.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecutionOrder">
      <summary>Gets or sets the execution order for the batch requests. The default execution order is sequential.</summary>
      <returns>The execution order for the batch requests. The default execution order is sequential.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ParseBatchRequestsAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Converts the incoming batch request into a collection of request messages.</summary>
      <returns>A collection of <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The request containing the batch request messages.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Processes the batch requests.</summary>
      <returns>The result of the operation.</returns>
      <param name="request">The batch request.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.SupportedContentTypes">
      <summary>Gets the supported content types for the batch request.</summary>
      <returns>The supported content types for the batch request.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary>Validates the incoming request that contains the batch request messages.</summary>
      <param name="request">The request containing the batch request messages.</param>
    </member>
    <member name="T:System.Web.Http.Batch.HttpBatchHandler">
      <summary>Bestimmt die Abstraktion für die Verarbeitung von HTTP-Batchanforderungen.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Batch.HttpBatchHandler" />-Klasse.</summary>
      <param name="httpServer">Der <see cref="T:System.Web.Http.HttpServer" /> für die Verarbeitung von einzelnen Batchanforderungen.</param>
    </member>
    <member name="P:System.Web.Http.Batch.HttpBatchHandler.Invoker">
      <summary>Ruft die aufrufende Instanz ab, um die Batchanforderungen an den <see cref="T:System.Web.Http.HttpServer" /> zu senden.</summary>
      <returns>Die aufrufende Instanz, um die Batchanforderungen an den <see cref="T:System.Web.Http.HttpServer" /> zu senden.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Verarbeitet die eingehende Batchanforderung als eine einzelne <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>Die Batchantwort.</returns>
      <param name="request">Die Batchanforderung.</param>
      <param name="cancellationToken">Das Abbruchtoken.</param>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sendet den Batchhandler asynchron.</summary>
      <returns>Das Ergebnis des Vorgangs.</returns>
      <param name="request">Die Sendeanforderung.</param>
      <param name="cancellationToken">Das Stornierungstoken.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionInvoker">
      <summary>Ruft die Aktionsmethoden eines Controllers auf.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Ruft die angegebene Aktion asynchron auf, indem der angegebene Controllerkontext verwendet wird.</summary>
      <returns>Die aufgerufene Aktion.</returns>
      <param name="actionContext">Der Controllerkontext.</param>
      <param name="cancellationToken">Das Abbruchtoken.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionSelector">
      <summary>Stellt einen reflektionsbasierten Aktionsselektor dar.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Ruft die Aktionszuordnungen für den <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" /> ab.</summary>
      <returns>Die Aktionszuordnungen.</returns>
      <param name="controllerDescriptor">Die Informationen, die einen Controller beschreiben.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Wählt eine Aktion für den <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" /> aus.</summary>
      <returns>Die ausgewählte Aktion.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ControllerServices">
      <summary> Stellt einen Container für Dienste dar, der für einen Controller spezifisch sein kann.  Dies schattet die Dienste von ihrem übergeordneten <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> ab. Ein Controller kann einen Dienst hier festlegen oder die globalere Sammlung von Diensten verwenden.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.#ctor(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.ControllerServices" />-Klasse.</summary>
      <param name="parent">Der übergeordnete Dienstecontainer.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ClearSingle(System.Type)">
      <summary>Entfernt einen Diensttyp mit einer Instanz aus den Standarddiensten.</summary>
      <param name="serviceType">Der Typ des Diensts.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetService(System.Type)">
      <summary>Ruft einen Dienst des angegebenen Typs ab.</summary>
      <returns>Die erste Instanz de Diensts oder null, wenn der Dienst nicht gefunden wurde.</returns>
      <param name="serviceType">Der Typ des Diensts.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServiceInstances(System.Type)">
      <summary>Ruft die Liste der Dienstobjekte für einen angegebenen Diensttyp ab und überprüft den Diensttyp.</summary>
      <returns>Liste der Dienstobjekte für den angegebenen Typ.</returns>
      <param name="serviceType">Der Diensttyp.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServices(System.Type)">
      <summary>Ruft die Liste der Dienstobjekte für einen angegebenen Diensttyp ab.</summary>
      <returns>Liste der Dienstobjekte des angegebenen Typs oder eine leere Liste, wenn der Dienst nicht gefunden wurde.</returns>
      <param name="serviceType">Der Typ des Diensts.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.IsSingleService(System.Type)">
      <summary>Fragt ab, ob ein Dienst eine Instanz verwendet.</summary>
      <returns>true, wenn der Diensttyp höchstens eine Instanz besitzt, oder false, wenn der Diensttyp mehrere Instanzen unterstützt.</returns>
      <param name="serviceType">Der Diensttyp.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Ersetzt ein Dienstobjekt mit einer Instanz.</summary>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="service">Das Dienstobjekt, das die vorherige Instanz ersetzt.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionBinding">
      <summary>Beschreibt, *wie* die Bindung erfolgt, aber eine tatsächliche Bindung erfolgt nicht.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Controllers.HttpParameterBinding[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />-Klasse.</summary>
      <param name="actionDescriptor">Der Rückzeiger auf die Aktion, für die diese Bindung ist.  </param>
      <param name="bindings">Die synchronen Bindungen für jeden Parameter.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ActionDescriptor">
      <summary>Ruft den Rückzeiger auf die Aktion, für die diese Bindung ist, ab oder legt diesen fest.  </summary>
      <returns>Der Rückzeiger auf die Aktion, für die diese Bindung ist.  </returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.ExecuteBindingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Führt die Bindung für den angegebenen Anforderungskontext asynchron aus.</summary>
      <returns>Aufgabe, die signalisiert wird, wenn die Bindung abgeschlossen ist. </returns>
      <param name="actionContext">Der Aktionskontext für die Bindung. Dieser enthält das Parameterwörterbuch, das aufgefüllt wird.</param>
      <param name="cancellationToken">Das Abbruchtoken für das Abbrechen des Bindungsvorgangs. Oder ein Binder kann auch einen Parameter daran binden.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ParameterBindings">
      <summary>Ruft die synchronen Bindungen für jeden Parameter ab oder legt diese fest. </summary>
      <returns>Die synchronen Bindungen für jeden Parameter.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContext">
      <summary>Enthält Informationen für die ausführende Aktion.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpActionContext" />-Klasse. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor(System.Web.Http.Controllers.HttpControllerContext,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpActionContext" />-Klasse.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionArguments">
      <summary>Ruft eine Liste von Aktionsargumenten ab.</summary>
      <returns>Eine Liste von Aktionsargumenten.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionDescriptor">
      <summary>Ruft den Aktionsdeskriptor für den Aktionskontext ab oder legt diesen fest.</summary>
      <returns>Der Aktionsdeskriptor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ControllerContext">
      <summary>Ruft den Controllerkontext ab bzw. legt ihn fest.</summary>
      <returns>Der Controllerkontext.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ModelState">
      <summary>Ruft das Modellzustandswörterbuch für den Kontext ab.</summary>
      <returns>Das Modellzustandswörterbuch.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Request">
      <summary>Ruft die Anforderungsnachricht für den Aktionskontext ab.</summary>
      <returns>Die Anforderungsnachricht für den Aktionskontext.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Response">
      <summary>Ruft die Antwortnachricht für den Aktionskontext ab oder legt diese fest.</summary>
      <returns>Die Antwortnachricht für den Aktionskontext.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContextExtensions">
      <summary>Enthält Erweiterungsmethoden für <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetMetadataProvider(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidatorProviders(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidators(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Metadata.ModelMetadata)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.TryBindStrongModel``1(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.String,System.Web.Http.Metadata.ModelMetadataProvider,``0@)">
      <typeparam name="TModel"></typeparam>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionDescriptor">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor)"></member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionBinding"></member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionName"></member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Configuration"></member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ControllerDescriptor"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary> Ruft die benutzerdefinierten Attribute für die Aktion ab. </summary>
      <returns>Die Auflistung benutzerdefinierter Attribute, die auf diese Aktion angewendet werden.</returns>
      <param name="inherit">true, um die Vererbungskette dieser Aktion nach den Attributen zu durchsuchen, andernfalls false.</param>
      <typeparam name="T">Der Attributtyp, nach dem gesucht werden soll.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilterPipeline"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilters"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetParameters"></member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Properties"></member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ResultConverter"></member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ReturnType"></member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.SupportedHttpMethods"></member>
    <member name="T:System.Web.Http.Controllers.HttpControllerContext">
      <summary>Enthält Informationen für einen einzelnen HTTP-Vorgang.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.Controllers.HttpRequestContext,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Controllers.IHttpController)"></member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IHttpRouteData,System.Net.Http.HttpRequestMessage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />-Klasse.</summary>
      <param name="configuration">Die Konfiguration.</param>
      <param name="routeData">Die Routendaten.</param>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Configuration">
      <summary>Ruft die Konfiguration ab oder legt diese fest.</summary>
      <returns>Die Konfiguration.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Controller">
      <summary>Ruft den HTTP-Controller ab oder legt diesen fest.</summary>
      <returns>Der HTTP-Controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.ControllerDescriptor">
      <summary>Ruft den Controllerdeskriptor ab oder legt diesen fest.</summary>
      <returns>Der Controllerdeskriptor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Request">
      <summary>Ruft die Anforderung ab oder legt diese fest.</summary>
      <returns>Die Anforderung.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RequestContext"></member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RouteData">
      <summary>Ruft die Routendaten ab oder legt diese fest.</summary>
      <returns>Die Routendaten.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerDescriptor">
      <summary> Beschreibung und Konfiguration für einen Controller. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor"></member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor(System.Web.Http.HttpConfiguration,System.String,System.Type)"></member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Configuration"></member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerName"></member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerType"></member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary> Gibt eine Auflistung von Attributen zurück, die &lt;typeparamref name="T" /&gt; für den Controller dieses Deskriptors zugewiesen werden können. </summary>
      <returns>Eine Auflistung von Attributen, die diesem Controller zugeordnet sind.</returns>
      <param name="inherit">true, um die Vererbungskette dieses Controllers nach den Attributen zu durchsuchen, andernfalls false.</param>
      <typeparam name="T">Wird zum Filtern der Auflistung der Attribute verwendet.Verwenden Sie den Wert <see cref="T:System.Object" />, um alle Attribute abzurufen.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetFilters"></member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Properties"></member>
    <member name="T:System.Web.Http.Controllers.HttpControllerSettings">
      <summary>Enthält Einstellungen für einen HTTP-Controller.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerSettings.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpControllerSettings" />-Klasse.</summary>
      <param name="configuration">Das Konfigurationsobjekt, das zum Initialisieren der Instanz verwendet wird.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Formatters">
      <summary>Ruft die Auflistung von <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />-Instanzen für den Controller ab.</summary>
      <returns>Die Auflistung von <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />-Instanzen.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.ParameterBindingRules">
      <summary>Ruft die Auflistung von Parameterbindungsfunktionen für den Controller ab.</summary>
      <returns>Die Auflistung von Parameterbindungsfunktionen.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Services">
      <summary>Ruft die Auflistung von Dienstinstanzen für den Controller ab.</summary>
      <returns>Die Auflistung der Dienstinstanzen.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterBinding">
      <summary> Beschreibt, wie ein Parameter gebunden wird. Die Bindung sollte statisch sein (alleine auf dem Deskriptor basierend), und sie kann von mehreren Anforderungen gemeinsam verwendet werden.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />-Klasse.</summary>
      <param name="descriptor">Ein <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />, der die Parameter beschreibt.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.Descriptor">
      <summary>Ruft den <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> ab, die zum Initialisieren dieser Instanz verwendet wurde.</summary>
      <returns>Die <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />-Instanz.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.ErrorMessage">
      <summary>Wenn die Bindung gültig ist, wird eine Fehlermeldung abgerufen, die den Bindungsfehler beschreibt.</summary>
      <returns>Eine Fehlermeldung. Wenn die Bindung erfolgreich war, ist der Wert null.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Führt die Bindung für die angegebene Anforderung asynchron aus.</summary>
      <returns>Ein Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <param name="metadataProvider">Der Metadatenanbieter, der für die Überprüfung verwendet werden soll.</param>
      <param name="actionContext">Der Aktionskontext für die Bindung. Der Aktionskontext enthält das Parameterwörterbuch, das mit dem Parameter aufgefüllt wird.</param>
      <param name="cancellationToken">Abbruchtoken für das Abbrechen des Bindungsvorgangs.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.GetValue(System.Web.Http.Controllers.HttpActionContext)">
      <summary> Ruft den Parameterwert aus dem Argumentwörterbuch des Aktionskontexts ab.</summary>
      <returns>Der Wert für diesen Parameter im angegebenen Aktionskontext oder null, wenn der Parameter noch nicht festgelegt wurde.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.IsValid">
      <summary>Ruft einen Wert ab, der angibt, ob die Bindung erfolgreich war.</summary>
      <returns>true, wenn die Bindung erfolgreich war, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.SetValue(System.Web.Http.Controllers.HttpActionContext,System.Object)">
      <summary>Legt das Ergebnis dieser Parameterbindung im Argumentwörterbuch des Aktionskontexts fest.  </summary>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="value">Der Parameterwert.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.WillReadBody">
      <summary>Gibt einen Wert zurück, der angibt, ob diese <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />-Instanz den Entitätsnachrichtentext der HTTP-Nachricht liest.</summary>
      <returns>true, wenn diese <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> den Entitätsnachrichtentext liest, andernfalls false.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterDescriptor">
      <summary>Stellt den HTTP-Parameterdeskriptor dar.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />-Klasse.</summary>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ActionDescriptor">
      <summary>Ruft den Aktionsdeskriptor ab bzw. legt ihn fest.</summary>
      <returns>Der Aktionsdeskriptor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Configuration">
      <summary>Ruft die <see cref="T:System.Web.Http.HttpConfiguration" /> für das <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />-Objekt ab oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.Web.Http.HttpConfiguration" /> für den <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.DefaultValue">
      <summary>Ruft den Standardwert des Parameters ab.</summary>
      <returns>Der Standardwert des Parameters.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Ruft eine Auflistung der benutzerdefinierten Attribute aus dem Parameter ab.</summary>
      <returns>Eine Auflistung der benutzerdefinierten Attribute aus dem Parameter.</returns>
      <typeparam name="T">Der Typ der benutzerdefinierten Attribute.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.IsOptional">
      <summary>Ruft einen Wert ab, der angibt, ob der Parameter optional ist.</summary>
      <returns>true, wenn der Parameter optional ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterBinderAttribute">
      <summary>Ruft das Parameterbindungsattribut ab oder legt dieses fest.</summary>
      <returns>Das Parameterbindungsattribut.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterName">
      <summary>Ruft den Namen des Parameters ab.</summary>
      <returns>Der Name des Parameters.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterType">
      <summary>Ruft den Typ des Parameters ab.</summary>
      <returns>Der Typ des Parameters.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Prefix">
      <summary>Ruft das Präfix dieses Parameters ab.</summary>
      <returns>Das Präfix dieses Parameters.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Properties">
      <summary>Ruft die Eigenschaften dieses Parameters ab.</summary>
      <returns>Die Eigenschaften dieses Parameters.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpRequestContext">
      <summary>Represents the context associated with a request.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpRequestContext.#ctor"></member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.ClientCertificate">
      <summary>Gets or sets the client certificate.</summary>
      <returns>Returns <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Configuration">
      <summary>Gets or sets the configuration.</summary>
      <returns>Returns <see cref="T:System.Web.Http.HttpConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IncludeErrorDetail">
      <summary>Gets or sets a value indicating whether error details, such as exception messages and stack traces, should be included in the response for this request.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IsLocal">
      <summary>Gets or sets a value indicating whether the request originates from a local address.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Principal">
      <summary>.Gets or sets the principal</summary>
      <returns>Returns <see cref="T:System.Security.Principal.IPrincipal" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.RouteData">
      <summary>Gets or sets the route data.</summary>
      <returns>Returns <see cref="T:System.Web.Http.Routing.IHttpRouteData" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Url">
      <summary>Gets or sets the factory used to generate URLs to other APIs.</summary>
      <returns>Returns <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.VirtualPathRoot">
      <summary>Gets or sets the virtual path root.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionHttpMethodProvider"></member>
    <member name="P:System.Web.Http.Controllers.IActionHttpMethodProvider.HttpMethods"></member>
    <member name="T:System.Web.Http.Controllers.IActionResultConverter">
      <summary> Ein Vertrag für eine Konvertierungsroutine, die das Ergebnis einer Aktion annehmen kann, die von &lt;siehe cref="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})" /&gt; zurückgegeben wird, und dieses in eine Instanz von <see cref="T:System.Net.Http.HttpResponseMessage" /> konvertiert. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Konvertiert das angegebene <see cref="T:System.Web.Http.Controllers.IActionResultConverter" />-Objekt in ein anderes Objekt.</summary>
      <returns>Das konvertierte Objekt.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionResult">Das Aktionsergebnis.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionValueBinder">
      <summary>Bestimmt die Methode für den Abruf der dem Parameterwert zugeordneten Aktionsbindung.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Ruft die <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> ab.</summary>
      <returns>Ein <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />-Objekt.</returns>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IControllerConfiguration">
      <summary> Wenn ein Controller mit einem Attribut mit dieser Schnittstelle versehen ist, wird sie aufgerufen, um die Controllereinstellungen zu initialisieren.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IControllerConfiguration.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> Ein Rückruf, der aufgerufen wird, um Außerkraftsetzungen pro Controller für diesen controllerDescriptor festzulegen. </summary>
      <param name="controllerSettings">Die zu initialisierenden Controllereinstellungen.</param>
      <param name="controllerDescriptor">Der Controllerdeskriptor. Beachten Sie, dass der <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dem abgeleiteten Controllertyp zugeordnet werden kann, wenn <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> vererbt wurde.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionInvoker">
      <summary>Enthält eine Methode, die zum Aufrufen eines HTTP-Vorgangs verwendet wird.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Führt den HTTP-Vorgang asynchron aus.</summary>
      <returns>Die neu gestartete Aufgabe.</returns>
      <param name="actionContext">Der Ausführungskontext.</param>
      <param name="cancellationToken">Das Abbruchtoken, das für den HTTP-Vorgang zugewiesen ist.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionSelector">
      <summary>Enthält die Logik zum Auswählen einer Aktionsmethode.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Gibt, nach Aktionszeichenfolgen gegliedert, eine Zuordnung aller <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> zurück, die vom Selektor ausgewählt werden können.Diese wird primär von <see cref="T:System.Web.Http.Description.IApiExplorer" /> aufgerufen, um alle möglichen Aktionen im Controller zu ermitteln.</summary>
      <returns>Eine Zuordnung von <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, die vom Selektor ausgewählt werden können, oder "null", wenn der Selektor keine wohldefinierte Zuordnung von <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> besitzt.</returns>
      <param name="controllerDescriptor">Der Controllerdeskriptor.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Wählt die Aktion für den Controller aus.</summary>
      <returns>Die Aktion für den Controller.</returns>
      <param name="controllerContext">Der Kontext des Controllers.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpController">
      <summary>Stellt einen HTTP-Controller dar.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Führt den Controller für die Synchronisierung aus.</summary>
      <returns>Der Controller.</returns>
      <param name="controllerContext">Der aktuelle Kontext für einen Testcontroller.</param>
      <param name="cancellationToken">Die Benachrichtigung, die den Vorgang abbricht.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ParameterBindingExtensions">
      <summary>Definiert Erweiterungsmethoden für <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindAsError(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Bindet Parameter, die als Ergebnis einen Fehler ergeben. </summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
      <param name="message">Die Fehlermeldung, die die Ursache für den Bindungsfehler beschreibt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithAttribute(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ParameterBindingAttribute)">
      <summary>Bindet den Parameter so, als würde er das angegebene Attribut für die Deklaration aufweisen.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameter, für den eine Bindung bereitgestellt werden soll.</param>
      <param name="attribute">Das Attribut, das die Bindung beschreibt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Bindet Parameter durch Analysieren des HTTP-Nachrichtentextinhalts.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Bindet Parameter durch Analysieren des HTTP-Nachrichtentextinhalts.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
      <param name="formatters">Die Liste der Formatierer, die die Auswahl eines geeigneten Formatierers zum Serialisieren des Parameters in ein Objekt zur Verfügung stellt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Bindet Parameter durch Analysieren des HTTP-Nachrichtentextinhalts.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
      <param name="formatters">Die Liste der Formatierer, die die Auswahl eines geeigneten Formatierers zum Serialisieren des Parameters in ein Objekt zur Verfügung stellt.</param>
      <param name="bodyModelValidator">Der Nachrichtentextmodell-Validierungssteuerelement, das zum Überprüfen des Parameters verwendet wird.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Net.Http.Formatting.MediaTypeFormatter[])">
      <summary>Bindet Parameter durch Analysieren des HTTP-Nachrichtentextinhalts.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
      <param name="formatters">Die Liste der Formatierer, die die Auswahl eines geeigneten Formatierers zum Serialisieren des Parameters in ein Objekt zur Verfügung stellt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Bindet Parameter durch Analysieren der Abfragezeichenfolge.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Bindet Parameter durch Analysieren der Abfragezeichenfolge.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
      <param name="valueProviderFactories">Die Wertanbieterfactorys, die Abfragezeichenfolge-Parameterdaten zur Verfügung stellen.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Bindet Parameter durch Analysieren der Abfragezeichenfolge.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
      <param name="binder">Die Modellbindung, die für die Assemblierung des Parameters in ein Objekt verwendet werden.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Bindet Parameter durch Analysieren der Abfragezeichenfolge.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
      <param name="binder">Die Modellbindung, die für die Assemblierung des Parameters in ein Objekt verwendet werden.</param>
      <param name="valueProviderFactories">Die Wertanbieterfactorys, die Abfragezeichenfolge-Parameterdaten zur Verfügung stellen.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ValueProviders.ValueProviderFactory[])">
      <summary>Bindet Parameter durch Analysieren der Abfragezeichenfolge.</summary>
      <returns>Das HTTP-Parameterbindungsobjekt.</returns>
      <param name="parameter">Der Parameterdeskriptor, der den zu bindenden Parameter beschreibt.</param>
      <param name="valueProviderFactories">Die Wertanbieterfactorys, die Abfragezeichenfolge-Parameterdaten zur Verfügung stellen.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor">
      <summary> Ein Aktionsdeskriptor, der eine reflektierte synchrone oder asynchrone Aktionsmethode darstellt. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor,System.Reflection.MethodInfo)"></member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionName"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.Equals(System.Object)"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetFilters"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetHashCode"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetParameters"></member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ReturnType"></member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.SupportedHttpMethods"></member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor">
      <summary>Stellt den reflektierten HTTP-Parameterdeskriptor dar.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Reflection.ParameterInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />-Klasse.</summary>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
      <param name="parameterInfo">Die Parameterinformationen.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.DefaultValue">
      <summary>Ruft den Standardwert für den Parameter ab.</summary>
      <returns>Der Standardwert für den Parameter.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Ruft eine Auflistung der benutzerdefinierten Attribute aus dem Parameter ab.</summary>
      <returns>Eine Auflistung der benutzerdefinierten Attribute aus dem Parameter.</returns>
      <typeparam name="TAttribute">Der Typ der benutzerdefinierten Attribute.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.IsOptional">
      <summary>Ruft einen Wert ab, der angibt, ob der Parameter optional ist.</summary>
      <returns>true, wenn der Parameter optional ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterInfo">
      <summary>Ruft die Parameterinformationen ab bzw. legt diese fest.</summary>
      <returns>Die Parameterinformationen.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterName">
      <summary>Ruft den Namen des Parameters ab.</summary>
      <returns>Der Name des Parameters.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterType">
      <summary>Ruft den Typ des Parameters ab.</summary>
      <returns>Der Typ des Parameters.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ResponseMessageResultConverter">
      <summary>Stellt einen Konverter für Aktionen mit einem Rückgabetyp von <see cref="T:System.Net.Http.HttpResponseMessage" /> dar. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Konvertiert ein <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" />-Objekt in ein anderes Objekt.</summary>
      <returns>Das konvertierte Objekt.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionResult">Das Aktionsergebnis.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ServicesContainer">
      <summary>Eine abstrakte Klasse, die einen Container für Dienste bereitstellt, die von der ASP.NET Web-API verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.ServicesContainer" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Add(System.Type,System.Object)">
      <summary> Fügt am Ende der Dienstliste für den angegebenen Diensttyp einen Dienst hinzu.  </summary>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="service">Die Dienstinstanz.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.AddRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Fügt am Ende der Dienstliste für den angegebenen Diensttyp die Dienste der angegebenen Auflistung hinzu. </summary>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="services">Die hinzuzufügenden Dienste.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Clear(System.Type)">
      <summary> Entfernt alle Dienstinstanzen des angegebenen Diensttyps.  </summary>
      <param name="serviceType">Der Diensttyp, der aus der Diensteliste entfernt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearMultiple(System.Type)">
      <summary>Entfernt alle Instanzen eines Diensttyps mit mehreren Instanzen.</summary>
      <param name="serviceType">Der zu entfernende Diensttyp.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearSingle(System.Type)">
      <summary>Entfernt einen Diensttyp mit einer Instanz.</summary>
      <param name="serviceType">Der zu entfernende Diensttyp.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Dispose">
      <summary>Führt anwendungsdefinierte Aufgaben aus, die sich auf das Freigeben und Zurücksetzen nicht verwalteter Ressourcen beziehen.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.FindIndex(System.Type,System.Predicate{System.Object})">
      <summary> Sucht nach einem Dienst, der mit den Bedingungen übereinstimmt, die durch das angegebene Prädikat definiert werden, und gibt den auf null basierenden Index des ersten Vorkommens zurück. </summary>
      <returns>Bei Erfolg der auf null basierende Index des ersten Vorkommens, andernfalls -1.</returns>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="match">Der Delegat, der die Bedingungen des Elements definiert, nach dem gesucht werden soll. </param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetService(System.Type)">
      <summary>Ruft die Dienstinstanz des angegebenen Typs ab.</summary>
      <param name="serviceType">Der Diensttyp.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServiceInstances(System.Type)">
      <summary>Ruft eine änderbare Liste der Dienstinstanz des angegebenen Typs ab.</summary>
      <returns>Eine änderbare Liste der Dienstinstanzen.</returns>
      <param name="serviceType">Der Diensttyp.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServices(System.Type)">
      <summary>Ruft eine Auflistung der Dienstinstanzen des angegebenen Typs ab.</summary>
      <returns>Eine Auflistung der Dienstinstanzen.</returns>
      <param name="serviceType">Der Diensttyp.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Insert(System.Type,System.Int32,System.Object)">
      <summary> Fügt einen Dienst in die Auflistung am angegebenen Index ein. </summary>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="index">Der auf nullbasierte Index, an dem der Dienst eingefügt werden soll. Wenn <see cref="F:System.Int32.MaxValue" /> übergeben wird, wird sichergestellt, dass das Element am Ende hinzugefügt wird.</param>
      <param name="service">Der einzufügende Dienst.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.InsertRange(System.Type,System.Int32,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Fügt die Elemente der Auflistung in die Dienstliste am angegebenen Index ein. </summary>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="index">Der nullbasierte Index, an dem die neuen Elemente eingefügt werden sollen. Wenn <see cref="F:System.Int32.MaxValue" /> übergeben wird, wird sichergestellt, dass die Elemente am Ende hinzugefügt werden.</param>
      <param name="services">Die Auflistung der einzufügenden Dienste.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.IsSingleService(System.Type)">
      <summary> Ermittelt, ob der Diensttyp mit GetService oder GetServices abgerufen werden soll.  </summary>
      <returns>true, wenn der Dienst einzeln ist. </returns>
      <param name="serviceType">Der Typ des abzufragenden Diensts.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Remove(System.Type,System.Object)">
      <summary> Entfernt das erste Vorkommen des angegebenen Diensts aus der Dienstliste für den angegebenen Diensttyp. </summary>
      <returns>true, wenn das Element erfolgreich entfernt wurde, andernfalls false.</returns>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="service">Die zu entfernende Dienstinstanz.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAll(System.Type,System.Predicate{System.Object})">
      <summary> Entfernt alle Elemente, die mit den Bedingungen übereinstimmen, die durch das angegebene Prädikat definiert werden. </summary>
      <returns>Die Anzahl der Elemente, die aus der Liste entfernt wurden.</returns>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="match">Der Delegat, der die Bedingungen der Elemente definiert, die entfernt werden sollen.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAt(System.Type,System.Int32)">
      <summary> Entfernt den Dienst am angegebenen Index. </summary>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="index">Der nullbasierte Index des zu entfernenden Diensts.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Replace(System.Type,System.Object)">
      <summary> Ersetzt alle vorhandenen Dienste für den angegebenen Diensttyp durch die angegebene Dienstinstanz. Dies funktioniert für einzelne und Mehrfachdienste.  </summary>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="service">Die Dienstinstanz.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceMultiple(System.Type,System.Object)">
      <summary>Ersetzt alle Instanzen eines Diensts mit mehreren Instanzen durch eine neue Instanz.</summary>
      <param name="serviceType">Der Typ des Diensts.</param>
      <param name="service">Die Dienstinstanz, die die aktuellen Dienste dieses Typs ersetzt.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Ersetzt alle vorhandenen Dienste für den angegebenen Diensttyp durch die angegebenen Dienstinstanzen. </summary>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="services">Die Dienstinstanzen.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceSingle(System.Type,System.Object)">
      <summary>Ersetzt einen Dienst mit einer Instanz eines angegebenen Typs.</summary>
      <param name="serviceType">Der Diensttyp. </param>
      <param name="service">Die Dienstinstanz.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ResetCache(System.Type)">
      <summary>Entfernt die zwischengespeicherten Werte für einen einzelnen Diensttyp.</summary>
      <param name="serviceType">Der Diensttyp.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ValueResultConverter`1">
      <summary> Ein Konverter zum Erstellen von Antworten aus Aktionen, die einen beliebigen <paramref name="T" />-Wert zurückgeben. </summary>
      <typeparam name="T">Der deklarierte Rückgabetyp einer Aktion.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.ValueResultConverter`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Konvertiert das Ergebnis einer Aktion mit beliebigem <paramref name="T" />-Rückgabetyp in eine Instanz von <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Das neu erstellte <see cref="T:System.Net.Http.HttpResponseMessage" />-Objekt.</returns>
      <param name="controllerContext">Der Aktionscontrollerkontext.</param>
      <param name="actionResult">Das Ausführungsergebnis.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.VoidResultConverter">
      <summary>Stellt einen Konverter zum Erstellen einer Antwort aus Aktionen dar, die keinen Wert zurückgeben.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Controllers.VoidResultConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Konvertiert die erstellte Antwort aus Aktionen, die keinen Wert zurückgeben.</summary>
      <returns>Die konvertierte Antwort.</returns>
      <param name="controllerContext">Der Kontext des Controllers.</param>
      <param name="actionResult">Das Ergebnis der Aktion.</param>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyResolver">
      <summary>Stellt einen Abhängigkeitseinschleusungscontainer dar.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyResolver.BeginScope">
      <summary> Startet einen Auflösungsbereich. </summary>
      <returns>Der Abhängigkeitsbereich.</returns>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyScope">
      <summary>Stellt eine Schnittstelle für den Bereich der Abhängigkeiten dar.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)">
      <summary>Ruft einen Dienst aus dem Bereich ab.</summary>
      <returns>Der abgerufene Dienst.</returns>
      <param name="serviceType">Der abzurufende Dienst.</param>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)">
      <summary>Ruft eine Auflistung von Diensten aus dem Bereich ab.</summary>
      <returns>Die abgerufene Auflistung von Diensten.</returns>
      <param name="serviceType">Die abzurufende Auflistung von Diensten.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiDescription">
      <summary> Beschreibt eine API, die durch einen relativen URI-Pfad und eine HTTP-Methode definiert ist. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiDescription.#ctor">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Description.ApiDescription" />-Klasse. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ActionDescriptor">
      <summary> Ruft den Aktionsdeskriptor ab, von dem die API verarbeitet wird, oder legt diesen fest. </summary>
      <returns> Der Aktionsdeskriptor. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Documentation">
      <summary> Ruft die Dokumentation der API ab oder legt diese fest. </summary>
      <returns> Die Dokumentation. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.HttpMethod">
      <summary> Ruft die HTTP-Methode ab oder legt diese fest. </summary>
      <returns> Die HTTP-Methode. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ID">
      <summary> Ruft die ID ab. Die ID ist innerhalb von <see cref="T:System.Web.Http.HttpServer" /> eindeutig. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ParameterDescriptions">
      <summary> Ruft die Parameterbeschreibungen ab. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.RelativePath">
      <summary> Ruft den relativen Pfad ab oder legt diesen fest. </summary>
      <returns> Der relative Pfad. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ResponseDescription"></member>
    <member name="P:System.Web.Http.Description.ApiDescription.Route">
      <summary> Ruft die registrierte Route für die API ab oder legt diese fest. </summary>
      <returns> Die Route. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedRequestBodyFormatters">
      <summary> Ruft die unterstützten Anforderungstextformatierer ab. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedResponseFormatters">
      <summary> Ruft die unterstützten Antwortformatierer ab. </summary>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorer">
      <summary> Durchsucht den URI-Raum des Diensts auf Grundlage von Routen, Controllern und Aktionen, die im System verfügbar sind. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Description.ApiExplorer" />-Klasse. </summary>
      <param name="configuration">Die Konfiguration.</param>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions">
      <summary> Ruft die API-Beschreibungen ab. Die Beschreibungen werden beim ersten Zugriff initialisiert. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.DocumentationProvider">
      <summary> Ruft den Dokumentationsanbieter ab oder legt diesen fest. Der Anbieter ist für die Dokumentierung der API verantwortlich. </summary>
      <returns> Der Dokumentationsanbieter. </returns>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.GetHttpMethodsSupportedByAction(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Ruft eine Auflistung von HttpMethods ab, die von der Aktion unterstützt werden. Wird aufgerufen,, wenn die <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> initialisiert werden. </summary>
      <returns>Eine Auflistung von HttpMethods, die von der Aktion unterstützt werden.</returns>
      <param name="route">Die Route.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreAction(System.String,System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Bestimmt, ob die Aktion für die Generierung von <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> berücksichtigt werden soll. Wird aufgerufen,, wenn die <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> initialisiert werden. </summary>
      <returns>True, wenn die Aktion für die Generierung von <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> berücksichtigt werden soll, andernfalls False.</returns>
      <param name="actionVariableValue">Der Aktionsvariablenwert der Route.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
      <param name="route">Die Route.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreController(System.String,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Bestimmt, ob der Controller für die Generierung von <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> berücksichtigt werden soll. Wird aufgerufen,, wenn die <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> initialisiert werden. </summary>
      <returns>True, wenn der Controller für die Generierung von <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> berücksichtigt werden soll, andernfalls False.</returns>
      <param name="controllerVariableValue">Der Controllervariablenwert der Route.</param>
      <param name="controllerDescriptor">Der Controllerdeskriptor.</param>
      <param name="route">Die Route.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorerSettingsAttribute">
      <summary> Dieses Attribut kann mit den Controllern und Aktionen verwendet werden, um das Verhalten von <see cref="T:System.Web.Http.Description.ApiExplorer" /> zu beeinflussen. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorerSettingsAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Description.ApiExplorerSettingsAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorerSettingsAttribute.IgnoreApi">
      <summary> Ruft einen Wert ab, der angibt, ob der Controller oder die Aktion aus den von <see cref="T:System.Web.Http.Description.ApiExplorer" /> generierten <see cref="T:System.Web.Http.Description.ApiDescription" />-Instanzen ausgeschlossen werden soll. </summary>
      <returns>true, wenn der Controller oder die Aktion ignoriert werden soll, andernfalls false.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterDescription">
      <summary> Beschreibt einen Parameter der API, die durch einen relativen URI-Pfad und eine HTTP-Methode definiert ist. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiParameterDescription.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Description.ApiParameterDescription" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Documentation">
      <summary> Ruft die Dokumentation ab oder legt diese fest. </summary>
      <returns> Die Dokumentation. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Name">
      <summary> Ruft den Namen ab oder legt diesen fest. </summary>
      <returns> Der Name. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.ParameterDescriptor">
      <summary> Ruft den Parameterdeskriptor ab bzw. legt ihn fest. </summary>
      <returns> Der Parameterdeskriptor. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Source">
      <summary> Ruft die Quelle des Parameters ab oder legt diese fest. Sie kann vom Anforderungs-URI, dem Anforderungstext oder anderen Stellen stammen. </summary>
      <returns> Die Quelle. </returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterSource">
      <summary> Beschreibt, wo der Parameter herstammt. </summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromBody">
      <summary>Der Parameter aus dem Nachrichtentext.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromUri">
      <summary>Der Parameter aus dem URI.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.Unknown">
      <summary>Der Speicherort ist unbekannt.</summary>
    </member>
    <member name="T:System.Web.Http.Description.IApiExplorer">
      <summary> Definiert die Schnittstelle für das Abrufen einer Auflistung von <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.IApiExplorer.ApiDescriptions">
      <summary> Ruft die API-Beschreibungen ab. </summary>
    </member>
    <member name="T:System.Web.Http.Description.IDocumentationProvider">
      <summary> Definiert den Anbieter, der für die Dokumentierung des Diensts verantwortlich ist. </summary>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Ruft die Dokumentation auf Grundlage von <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> ab. </summary>
      <returns>Die Dokumentation für den Controller.</returns>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)"></member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Ruft die Dokumentation auf Grundlage von <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> ab. </summary>
      <returns>Die Dokumentation für den Controller.</returns>
      <param name="parameterDescriptor">Der Parameterdeskriptor.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetResponseDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)"></member>
    <member name="T:System.Web.Http.Description.ResponseDescription">
      <summary>Describes the API response.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Description.ResponseDescription" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.DeclaredType">
      <summary>Gets or sets the declared response type.</summary>
      <returns>The declared response type.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.Documentation">
      <summary>Gets or sets the response documentation.</summary>
      <returns>The response documentation.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.ResponseType">
      <summary>Gets or sets the actual response type.</summary>
      <returns>The actual response type.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ResponseTypeAttribute">
      <summary>Use this to specify the entity type returned by an action when the declared return type is <see cref="T:System.Net.Http.HttpResponseMessage" /> or <see cref="T:System.Web.Http.IHttpActionResult" />. The <see cref="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType" /> will be read by <see cref="T:System.Web.Http.Description.ApiExplorer" /> when generating <see cref="T:System.Web.Http.Description.ApiDescription" />.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Description.ResponseTypeAttribute" /> class.</summary>
      <param name="responseType">The response type.</param>
    </member>
    <member name="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType">
      <summary>Gets the response type.</summary>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver">
      <summary> Stellt eine Implementierung von <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> ohne externe Abhängigkeiten zur Verfügung. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.GetAssemblies">
      <summary> Gibt eine Liste der für die Anwendung verfügbaren Assemblys zurück. </summary>
      <returns>Eine &lt;siehe cref="T:System.Collections.ObjectModel.Collection`1" /&gt; von Assemblys.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator">
      <summary>Stellt eine Standardimplementierung eines <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />s dar. Eine andere Implementierung kann mithilfe der <see cref="T:System.Web.Http.Services.DependencyResolver" /> registriert werden. Eine Optimierung erfolgt für den Fall, dass eine <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />-Instanz pro <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />-Instanz vorhanden ist, es können aber ebenfalls die Fälle unterstützt werden, in denen viele <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />-Instanzen für einen <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" /> vorhanden sind. Im letzten Fall wird der Nachschlagevorgang ein wenig langsamer, weil dabei das <see cref="P:HttpControllerDescriptor.Properties" />-Wörterbuch durchsucht wird. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary> Erstellt den durch den <paramref name="controllerType" /> angegebenen <see cref="T:System.Web.Http.Controllers.IHttpController" /> unter Verwendung der angegebenen <paramref name="request" />.</summary>
      <returns>Eine Instanz vom Typ <paramref name="controllerType" />.</returns>
      <param name="request">Die Anforderungsnachricht.</param>
      <param name="controllerDescriptor">Der Controllerdeskriptor.</param>
      <param name="controllerType">Der Typ des Controllers.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector">
      <summary>Stellt eine <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />-Standardinstanz zum Auswählen eines <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />s bei gegebener <see cref="T:System.Net.Http.HttpRequestMessage" /> dar. Eine andere Implementierung kann mithilfe der <see cref="P:System.Web.Http.HttpConfiguration.Services" /> registriert werden. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" />-Klasse.</summary>
      <param name="configuration">Die Konfiguration.</param>
    </member>
    <member name="F:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.ControllerSuffix">
      <summary>Gibt die Suffixzeichenfolge im Controllernamen an.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerMapping">
      <summary>Gibt eine nach Controllerzeichenfolge aufgeschlüsselte Zuordnung aller <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> zurück, die der Selektor auswählen kann. </summary>
      <returns>Eine Zuordnung aller <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, die der Selektor auswählen kann, oder null, wenn der Selektor über keine wohldefinierte Zuordnung von <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> verfügt.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
      <summary>Ruft den Namen des Controllers für die angegebene <see cref="T:System.Net.Http.HttpRequestMessage" /> ab.</summary>
      <returns>Der Name des Controllers für die angegebene <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary>Wählt einen <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> für die angegebene <see cref="T:System.Net.Http.HttpRequestMessage" /> aus.</summary>
      <returns>Die <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />-Instanz für die angegebene <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver">
      <summary> Stellt eine Implementierung von <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> ohne externe Abhängigkeiten zur Verfügung. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor(System.Predicate{System.Type})">
      <summary>Initialisiert mithilfe eines Prädikats zum Filtern der Controllertypen eine neue <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" />-Instanz. </summary>
      <param name="predicate">Das Prädikat.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Gibt eine Liste der für die Anwendung verfügbaren Controller zurück. </summary>
      <returns>Eine &lt;siehe cref="T:System.Collections.Generic.ICollection`1" /&gt; von Controllern.</returns>
      <param name="assembliesResolver">Der Assemblykonfliktlöser.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.IsControllerTypePredicate">
      <summary>Ruft einen Wert ab, der angibt, ob der Konfliktlösertyp ein Controllertypprädikat ist.</summary>
      <returns>true, wenn der Konfliktlösertyp ein Controllertypprädikat ist, andernfalls false.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpControllerDispatcher">
      <summary>Verteilt eine eingehende <see cref="T:System.Net.Http.HttpRequestMessage" /> an eine <see cref="T:System.Web.Http.Controllers.IHttpController" />-Implementierung zur Verarbeitung.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" />-Klasse mit der angegebenen Konfiguration.</summary>
      <param name="configuration">Die HTTP-Konfiguration.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.HttpControllerDispatcher.Configuration">
      <summary>Ruft die HTTP-Konfiguration ab.</summary>
      <returns>Die HTTP-Konfiguration.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Verteilt eine eingehende <see cref="T:System.Net.Http.HttpRequestMessage" /> an einen <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task`1" />, die den in Ausführung befindlichen Vorgang darstellt.</returns>
      <param name="request">Die zu verteilende Anforderung.</param>
      <param name="cancellationToken">Das Abbruchtoken.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher">
      <summary> Diese Klasse ist der Endpunkt-Standardnachrichtenhandler, der die <see cref="T:System.Web.Http.Routing.IHttpRoute" /> der übereinstimmenden Route untersucht und den aufzurufenden Nachrichtenhandler auswählt. Wenn <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" /> null ist, wird an <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> delegiert. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" />-Klasse mithilfe der bereitgestellten <see cref="T:System.Web.Http.HttpConfiguration" /> und mit <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> als Standardhandler. </summary>
      <param name="configuration">Die Serverkonfiguration.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary> Initialisiert mithilfe der bereitgestellten <see cref="T:System.Web.Http.HttpConfiguration" />- und <see cref="T:System.Net.Http.HttpMessageHandler" />- Objekte eine neue Instanz der <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" />-Klasse. </summary>
      <param name="configuration">Die Serverkonfiguration.</param>
      <param name="defaultHandler">Der Standardhandler, der verwendet werden soll, wenn die <see cref="T:System.Web.Http.Routing.IHttpRoute" /> keinen <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" /> besitzt.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sendet eine HTTP-Anforderung als einen asynchronen Vorgang.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
      <param name="request">Die zu sendende HTTP-Anforderungsnachricht.</param>
      <param name="cancellationToken">Das Abbruchtoken zum Abbrechen des Vorgangs.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IAssembliesResolver">
      <summary> Stellt eine Abstraktion zum Verwalten der Assemblys einer Anwendung zur Verfügung. Eine andere Implementierung kann mithilfe der <see cref="T:System.Web.Http.Services.DependencyResolver" /> registriert werden. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IAssembliesResolver.GetAssemblies">
      <summary> Gibt eine Liste der für die Anwendung verfügbaren Assemblys zurück. </summary>
      <returns>Eine &lt;siehe cref="T:System.Collections.Generic.ICollection`1" /&gt; von Assemblys.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerActivator">
      <summary>Definiert die Methoden, die für einen <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary>Erstellt ein <see cref="T:System.Web.Http.Controllers.IHttpController" />-Objekt.</summary>
      <returns>Ein <see cref="T:System.Web.Http.Controllers.IHttpController" />-Objekt.</returns>
      <param name="request">Die Nachrichtenanforderung.</param>
      <param name="controllerDescriptor">Der HTTP-Controllerdeskriptor.</param>
      <param name="controllerType">Der Typ des Controllers.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerSelector">
      <summary> Definiert die Methoden, die für eine <see cref="T:System.Web.Http.Controllers.IHttpController" />-Factory erforderlich sind. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.GetControllerMapping">
      <summary> Gibt eine nach Controllerzeichenfolge aufgeschlüsselte Zuordnung aller <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> zurück, die der Selektor auswählen kann.  Diese wird primär von <see cref="T:System.Web.Http.Description.IApiExplorer" /> aufgerufen, um alle möglichen Aktionen im Controller zu ermitteln. </summary>
      <returns>Eine Zuordnung aller <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, die der Selektor auswählen kann, oder null, wenn der Selektor über keine wohldefinierte Zuordnung von <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> verfügt.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary> Wählt einen <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> für die angegebene <see cref="T:System.Net.Http.HttpRequestMessage" /> aus. </summary>
      <returns>Eine <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />-Instanz.</returns>
      <param name="request">Die Anforderungsnachricht.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver">
      <summary> Stellt eine Abstraktion zum Verwalten der Controllertypen einer Anwendung zur Verfügung. Eine andere Implementierung kann mithilfe von DependencyResolver registriert werden.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Gibt eine Liste der für die Anwendung verfügbaren Controller zurück. </summary>
      <returns>Eine &lt;siehe cref="T:System.Collections.Generic.ICollection`1" /&gt; von Controllern.</returns>
      <param name="assembliesResolver">Der Konfliktlöser für fehlerhafte Assemblys.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionDescriptorFilterProvider">
      <summary>Stellt Informationen zu einer Aktionsmethode bereit, z. B. Name, Controller, Parameter, Attribute und Filter.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.ActionDescriptorFilterProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Gibt die Filter zurück, die dieser Aktionsmethode zugeordnet sind.</summary>
      <returns>Die Filter, die dieser Aktionsmethode zugeordnet sind.</returns>
      <param name="configuration">Die Konfiguration.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionFilterAttribute">
      <summary>Stellt die Basisklasse für alle Aktionsfilterattribute dar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.ActionFilterAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Tritt nach dem Aufrufen der Aktionsmethode auf.</summary>
      <param name="actionExecutedContext">Der Kontext nach der Ausführung der Aktion.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Tritt vor dem Aufrufen der Aktionsmethode auf.</summary>
      <param name="actionContext">Der Aktionskontext.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.System#Web#Http#Filters#IActionFilter#ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Führt die Filteraktion asynchron aus.</summary>
      <returns>Die für diesen Vorgang neu erstelle Aufgabe.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="cancellationToken">Das Abbruchtoken, das für diese Aufgabe zugewiesen ist.</param>
      <param name="continuation">Die Delegierungsfunktion, die nach dem Aufrufen der Aktionsmethode fortgesetzt werden soll.</param>
    </member>
    <member name="T:System.Web.Http.Filters.AuthorizationFilterAttribute">
      <summary>Stellt Details für den Autorisierungsfilter bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Wird aufgerufen, wenn ein Prozess Autorisierung anfordert.</summary>
      <param name="actionContext">Der Aktionskontext, der Informationen für die Verwendung von <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" /> kapselt.</param>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.System#Web#Http#Filters#IAuthorizationFilter#ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Führt den Autorisierungsfilter während der Synchronisierung aus.</summary>
      <returns>Der Autorisierungsfilter während der Synchronisierung.</returns>
      <param name="actionContext">Der Aktionskontext, der Informationen für die Verwendung von <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" /> kapselt.</param>
      <param name="cancellationToken">Das Abbruchtoken, das den Vorgang abbricht.</param>
      <param name="continuation">Eine Fortsetzung des Vorgangs.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ConfigurationFilterProvider">
      <summary>Stellt den Konfigurationsfilteranbieter dar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.ConfigurationFilterProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Gibt die Filter zurück, die dieser Konfigurationsmethode zugeordnet sind.</summary>
      <returns>Die Filter, die dieser Konfigurationsmethode zugeordnet sind.</returns>
      <param name="configuration">Die Konfiguration.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ExceptionFilterAttribute">
      <summary>Stellt die Attribute für den Ausnahmefilter dar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.ExceptionFilterAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Löst das Ausnahmeereignis aus..</summary>
      <param name="actionExecutedContext">Der Kontext für die Aktion.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.System#Web#Http#Filters#IExceptionFilter#ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Führt den Ausnahmefilter asynchron aus.</summary>
      <returns>Das Ergebnis der Ausführung.</returns>
      <param name="actionExecutedContext">Der Kontext für die Aktion.</param>
      <param name="cancellationToken">Der Abbruchkontext.</param>
    </member>
    <member name="T:System.Web.Http.Filters.FilterAttribute">
      <summary>Stellt die Basisklasse für Aktionsfilterattribute dar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.FilterAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.FilterAttribute.AllowMultiple">
      <summary>Ruft einen Wert ab, der angibt, ob mehrere Filter zulässig sind.</summary>
      <returns>True, wenn mehrere Filter zulässig sind, andernfalls False.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterInfo">
      <summary>Stellt Informationen zu den verfügbaren Aktionsfiltern zur Verfügung.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterInfo.#ctor(System.Web.Http.Filters.IFilter,System.Web.Http.Filters.FilterScope)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.FilterInfo" />-Klasse.</summary>
      <param name="instance">Die Instanz dieser Klasse.</param>
      <param name="scope">Der Bereich dieser Klasse.</param>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Instance">
      <summary>Ruft eine Instanz des <see cref="T:System.Web.Http.Filters.FilterInfo" />-Objekts ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Web.Http.Filters.FilterInfo" />-Objekt.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Scope">
      <summary>Ruft die den Bereich von <see cref="T:System.Web.Http.Filters.FilterInfo" /> ab bzw. legt diesen fest.</summary>
      <returns>Der Bereich von FilterInfo.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterScope">
      <summary>Definiert Werte, die die Reihenfolge angeben, in der Filter innerhalb desselben Filtertyps und derselben Filterreihenfolge ausgeführt werden.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Action">
      <summary>Gibt eine Reihenfolge nach Controller an. </summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Controller">
      <summary>Gibt eine Reihenfolge vor Action und nach Global an.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Global">
      <summary>Gibt eine Aktion vor Controller an.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpActionExecutedContext">
      <summary>Stellt die Aktion des HTTP-ausgeführten Kontexts dar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />-Klasse.</summary>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="exception">Die Ausnahme.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.ActionContext">
      <summary>Ruft den HTTP-Aktionskontext ab oder legt diesen fest.</summary>
      <returns>Der HTTP-Aktionskontext.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Exception">
      <summary>Ruft die Ausnahme, die während der Ausführung ausgelöst wurde, ab oder legt diese fest.</summary>
      <returns>Die Ausnahme, die während der Ausführung ausgelöst wurde.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Request">
      <summary>Ruft das <see cref="T:System.Net.Http.HttpRequestMessage" />-Objekt für den Kontext ab.</summary>
      <returns>Das <see cref="T:System.Net.Http.HttpRequestMessage" />-Objekt für den Kontext.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Response">
      <summary>Ruft die <see cref="T:System.Net.Http.HttpResponseMessage" /> für den Kontext ab oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.Net.Http.HttpResponseMessage" /> für den Kontext.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext">
      <summary>Represents an authentication challenge context containing information for executing an authentication challenge.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationChallengeContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.IHttpActionResult)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext" /> class.</summary>
      <param name="actionContext">The action context.</param>
      <param name="result">The current action result.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.ActionContext">
      <summary>Gets the action context.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Request">
      <summary>Gets the request message.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Result">
      <summary>Gets or sets the action result to execute.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationContext">
      <summary>Represents an authentication context containing information for performing authentication.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Security.Principal.IPrincipal)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.HttpAuthenticationContext" /> class.</summary>
      <param name="actionContext">The action context.</param>
      <param name="principal">The current principal.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ActionContext">
      <summary>Gets the action context.</summary>
      <returns>The action context.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ErrorResult">
      <summary>Gets or sets an action result that will produce an error response (if authentication failed; otherwise, null).</summary>
      <returns>An action result that will produce an error response.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Principal">
      <summary>Gets or sets the authenticated principal.</summary>
      <returns>The authenticated principal.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Request">
      <summary>Gets the request message.</summary>
      <returns>The request message.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpFilterCollection">
      <summary>Stellt eine Auflistung von HTTP-Filtern dar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Filters.HttpFilterCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Add(System.Web.Http.Filters.IFilter)">
      <summary>Fügt am Ende der Auflistung ein Element hinzu.</summary>
      <param name="filter">Das Element, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Clear">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Contains(System.Web.Http.Filters.IFilter)">
      <summary>Bestimmt, ob die Auflistung das angegebene Element enthält.</summary>
      <returns>True, wenn die Auflistung das angegebene Element enthält, andernfalls False.</returns>
      <param name="filter">Das zu prüfende Element.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpFilterCollection.Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.GetEnumerator">
      <summary>Ruft einen Enumerator ab, der die Auflistung durchläuft.</summary>
      <returns>Ein Enumeratorobjekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Remove(System.Web.Http.Filters.IFilter)">
      <summary>Entfernt das angegebene Element aus der Auflistung.</summary>
      <param name="filter">Das Element, das aus der Auflistung entfernt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ruft einen Enumerator ab, der die Auflistung durchläuft.</summary>
      <returns>Ein Enumeratorobjekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IActionFilter">
      <summary>Definiert die Methoden, die in einem Aktionsfilter verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Führt die Filteraktion asynchron aus.</summary>
      <returns>Die für diesen Vorgang neu erstelle Aufgabe.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="cancellationToken">Das Abbruchtoken, das für diese Aufgabe zugewiesen ist.</param>
      <param name="continuation">Die Delegierungsfunktion, die nach dem Aufrufen der Aktionsmethode fortgesetzt werden soll.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IAuthenticationFilter"></member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.Http.Filters.IAuthorizationFilter">
      <summary>Definiert die Methoden, die für einen Autorisierungsfilter erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthorizationFilter.ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Führt den zu synchronisierenden Autorisierungsfilter aus.</summary>
      <returns>Der zu synchronisierende Autorisierungsfilter.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="cancellationToken">Das dem Filter zugeordnete Abbruchtoken.</param>
      <param name="continuation">Die Fortsetzung.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IExceptionFilter">
      <summary>Definiert die Methoden, die für einen Ausnahmefilter erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IExceptionFilter.ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Führt einen asynchronen Ausnahmefilter aus.</summary>
      <returns>Ein asynchroner Ausnahmefilter.</returns>
      <param name="actionExecutedContext">Der Kontext nach der Ausführung der Aktion.</param>
      <param name="cancellationToken">Das Abbruchtoken.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IFilter">
      <summary>Gibt eine serverseitige Komponente an, die vom Indizierungssystem zum Indizieren von Dokumenten verwendet wird, die das dem IFilter zugeordnete Dateiformat besitzen.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.IFilter.AllowMultiple">
      <summary>Ruft einen Wert ab, der angibt, ob mehr als eine Instanz des angegebenen Attributs für ein einzelnes Programmelement angegeben werden kann, oder legt diesen fest.</summary>
      <returns>True, wenn mehr als eine Instanz angegeben werden kann, andernfalls False. Der Standardwert lautet False.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IFilterProvider">
      <summary>Stellt Filterinformationen bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Gibt eine Enumeration von Filtern zurück.</summary>
      <returns>Eine Enumeration von Filtern.</returns>
      <param name="configuration">Die HTTP-Konfiguration.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IOverrideFilter"></member>
    <member name="P:System.Web.Http.Filters.IOverrideFilter.FiltersToOverride"></member>
    <member name="T:System.Web.Http.Hosting.HttpPropertyKeys">
      <summary> Stellt allgemeine Schlüssel für Eigenschaften bereit, die in den <see cref="P:System.Net.Http.HttpRequestMessage.Properties" /> gespeichert sind.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.ClientCertificateKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DependencyScope"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DisposableRequestResourcesKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpActionDescriptorKey">
      <summary> Stellt einen Schlüssel für den <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> zur Verfügung, der dieser Anforderung zugeordnet ist. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpConfigurationKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpRouteDataKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IncludeErrorDetailKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsBatchRequest">
      <summary> Stellt einen Schlüssel zur Verfügung, der angibt, ob die Anforderung eine Batchanforderung ist. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsLocalKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.NoRouteMatched">
      <summary> Stellt einen Schlüssel zur Verfügung, der angibt, ob ein Fehler der Anforderung hinsichtlich der Übereinstimmung mit einer Route vorliegt. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestContextKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestCorrelationKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestQueryNameValuePairsKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RetrieveClientCertificateDelegateKey"></member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.SynchronizationContextKey"></member>
    <member name="T:System.Web.Http.Hosting.IHostBufferPolicySelector">
      <summary> Eine Schnittstelle zum Steuern der Verwendung von Pufferanforderungen und -antworten im Host. Wenn ein Host Unterstützung für Pufferanforderungen und/oder -antworten bereitstellt, kann er diese Schnittstelle verwenden, um die Richtlinie zu ermitteln, die besagt, wann Pufferung verwendet werden soll.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>Bestimmt, ob der Host <see cref="T:System.Net.Http.HttpRequestMessage" />-Entitätsnachrichtentext puffern soll.</summary>
      <returns>true, wenn Pufferung verwendet werden soll, andernfalls sollte eine gestreamte Anforderung verwendet werden.</returns>
      <param name="hostContext">Der Hostkontext.</param>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>Bestimmt, ob der Host <see cref="T.System.Net.Http.HttpResponseMessage" />-Entitätsnachrichtentext puffern soll.</summary>
      <returns>true, wenn Pufferung verwendet werden soll, andernfalls sollte eine gestreamte Antwort verwendet werden.</returns>
      <param name="response">Die HTTP-Antwortnachricht.</param>
    </member>
    <member name="T:System.Web.Http.Hosting.IHostPrincipalService">
      <summary>Defines a service for accessing the principal at the host layer.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostPrincipalService.GetCurrentPrincipal(System.Net.Http.HttpRequestMessage)">
      <summary>Get the principal at the host layer.</summary>
      <returns>The principal at the host layer.</returns>
      <param name="request">The request associated with the host context.</param>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostPrincipalService.SetCurrentPrincipal(System.Security.Principal.IPrincipal,System.Net.Http.HttpRequestMessage)">
      <summary>Sets the principal at the host layer.</summary>
      <param name="principal">The principal.</param>
      <param name="request">The request associated with the host context.</param>
    </member>
    <member name="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler">
      <summary>Represents a message handler that suppresses host authentication results.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.#ctor(System.Web.Http.Hosting.IHostPrincipalService)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler" /> class.</summary>
      <param name="principalService">The host principal service to use to access the current principal.</param>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler" /> class.</summary>
      <param name="configuration">The configuration from which to use services.</param>
    </member>
    <member name="P:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.HostPrincipalService">
      <summary>Gets the host principal service to use to access the current principal.</summary>
      <returns>The host principal service to use to access the current principal.</returns>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Asynchronously sends a request message.</summary>
      <returns>That task that completes the asynchronous operation.</returns>
      <param name="request">The request message to send.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="T:System.Web.Http.Hosting.ThreadPrincipalService">
      <summary>Represents a host principal of <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.ThreadPrincipalService.#ctor"></member>
    <member name="M:System.Web.Http.Hosting.ThreadPrincipalService.GetCurrentPrincipal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Web.Http.Hosting.ThreadPrincipalService.SetCurrentPrincipal(System.Security.Principal.IPrincipal,System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Web.Http.Metadata.ModelMetadata">
      <summary>Stellt die Metadatenklasse von ModelMetadata dar.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.ModelMetadata" />-Klasse.</summary>
      <param name="provider">Der Anbieter.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="propertyName">Der Name der Eigenschaft.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.AdditionalValues">
      <summary>Ruft ein Wörterbuch ab, das zusätzliche Metadaten zum Modell enthält.</summary>
      <returns>Ein Wörterbuch, das zusätzliche Metadaten zum Modell enthält.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ContainerType">
      <summary>Ruft den Typ des Containers für das Modell ab oder legt ihn fest.</summary>
      <returns>Der Typ des Containers für das Modell.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Ruft einen Wert ab, der angibt, ob leere Zeichenfolgen, die in Formularen zurückgesendet werden, in "null" konvertiert werden sollen, oder legt diesen fest.</summary>
      <returns>true, wenn leere Zeichenfolgen, die in Formularen zurückgesendet werden, in null konvertiert werden sollen, andernfalls false.Der Standardwert ist True.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Description">
      <summary>Ruft die Beschreibung des Modells ab oder legt sie fest.</summary>
      <returns>Die Beschreibung des Modells.Der Standardwert ist "null".</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetDisplayName">
      <summary>Ruft den Anzeigenamen für das Modell ab.</summary>
      <returns>Der Anzeigename für das Modell.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetValidators(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Ruft eine Liste der Validierungssteuerelemente für das Modell ab.</summary>
      <returns>Eine Liste der Validierungssteuerelemente für das Modell.</returns>
      <param name="validatorProviders">Die Validierungssteuerelement-Anbieter für das Modell.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsComplexType">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Modell ein komplexer Typ ist.</summary>
      <returns>Ein Wert, der angibt, ob das Modell als komplexer Typ betrachtet wird.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsNullableValueType">
      <summary>Ruft einen Wert ab, der angibt, ob der Typ auf null gesetzt werden kann.</summary>
      <returns>True, wenn der Typ auf null gesetzt werden kann, andernfalls False.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsReadOnly">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Modell schreibgeschützt ist.</summary>
      <returns>true, wenn das Modell schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Model">
      <summary>Ruft den Wert des Modells ab.</summary>
      <returns>Der Modellwert kann "null" sein.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ModelType">
      <summary>Ruft den Typ des Modells ab.</summary>
      <returns>Der Typ des Modells.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Properties">
      <summary>Ruft eine Auflistung von Modellmetadatenobjekten ab, die die Eigenschaften des Modells beschreiben.</summary>
      <returns>Eine Auflistung von Modellmetadatenobjekten, die die Eigenschaften des Modells beschreiben.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.PropertyName">
      <summary>Ruft den Eigenschaftennamen ab.</summary>
      <returns>Der Eigenschaftenname.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Provider">
      <summary>Ruft den Anbieter ab bzw. legt ihn fest.</summary>
      <returns>Der Anbieter.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadataProvider">
      <summary>Stellt eine abstrakte Basisklasse für einen benutzerdefinierten Metadatenanbieter bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Ruft ein ModelMetadata-Objekt für jede Eigenschaft eines Modells ab.</summary>
      <returns>Ein ModelMetadata-Objekt für jede Eigenschaft eines Modells.</returns>
      <param name="container">Der Container.</param>
      <param name="containerType">Der Typ des Containers.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Ruft Metadaten für die angegebene Eigenschaft ab.</summary>
      <returns>Das Metadatenmodell für die angegebene Eigenschaft.</returns>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="propertyName">Die Eigenschaft, für die das Metadatenmodell abgerufen werden soll.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Ruft die Metadaten für den angegebenen Modellaccessor und Modelltyp ab.</summary>
      <returns>Die Metadaten.</returns>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1">
      <summary>Stellt eine abstrakte Klasse zur Implementierung eines Metadatenanbieters bereit.</summary>
      <typeparam name="TModelMetadata">Der Typ der Modellmetadaten.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Erstellt bei Außerkraftsetzung in einer abgeleiteten Klasse die Modellmetadaten für die Eigenschaft mithilfe des angegebenen Prototyps.</summary>
      <returns>Die Modellmetadaten für die Eigenschaft.</returns>
      <param name="prototype">Der Prototyp, aus dem die Modellmetadaten erstellt werden sollen.</param>
      <param name="modelAccessor">Der Modellaccessor.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Erstellt beim Überschreiben in eine abgeleitete Klasse die Modellmetadaten für die Eigenschaft.</summary>
      <returns>Die Modellmetadaten für die Eigenschaft.</returns>
      <param name="attributes">Der Satz von Attributen.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="propertyName">Der Name der Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Ruft eine Liste von Eigenschaften für das Modell ab.</summary>
      <returns>Die Liste von Eigenschaften für das Modell.</returns>
      <param name="container">Der Modellcontainer.</param>
      <param name="containerType">Der Typ des Containers.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Ruft die Metadaten für die angegebene Eigenschaft mithilfe des Containertyps und des Eigenschaftennamens ab.</summary>
      <returns>Die Metadaten für die angegebene Eigenschaft.</returns>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="propertyName">Der Name der Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Gibt die Metadaten für die angegebene Eigenschaft mit dem Typ des Modells zurück.</summary>
      <returns>Die Metadaten für die angegebene Eigenschaft.</returns>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="modelType">Der Typ des Containers.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes">
      <summary>Stellt Prototypencachedaten für <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" /> bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes" />-Klasse.</summary>
      <param name="attributes">Die Attribute, die Daten für die Initialisierung bereitstellen.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Ruft das Attribut für die Metadatenanzeige ab oder legt dieses fest.</summary>
      <returns>Das Attribut für die Metadatenanzeige.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Ruft das Attribut für das Metadatenanzeigeformat ab oder legt dieses fest.</summary>
      <returns>Das Attribut für das Metadatenanzeigeformat.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Ruft das Attribut für die Bearbeitbarkeit von Metadaten ab oder legt dieses fest.</summary>
      <returns>Das Attribut für die Bearbeitbarkeit von Metadaten.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Ruft das Schreibschutzattribut für Metadaten ab oder legt dieses fest.</summary>
      <returns>Das Schreibschutzattribut für Metadaten.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata">
      <summary>Stellt einen Container für allgemeine Metadaten für die <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" />-Klasse für ein Datenmodell bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />-Klasse.</summary>
      <param name="prototype">Der für die Initialisierung der Modellmetadaten verwendete Prototyp.</param>
      <param name="modelAccessor">Der Modellaccessor.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />-Klasse.</summary>
      <param name="provider">Der Metadatenanbieter.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="propertyName">Der Name der Eigenschaft.</param>
      <param name="attributes">Die Attribute, die Daten für die Initialisierung bereitstellen.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Ruft einen Wert ab, der angibt, ob leere Zeichenfolgen, die in Formularen zurückgesendet werden, in "null" konvertiert werden sollen.</summary>
      <returns>True, wenn leere Zeichenfolgen, die in Formularen zurückgesendet werden, in null konvertiert werden sollen, andernfalls False.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Ruft die Beschreibung des Modells ab.</summary>
      <returns>Die Beschreibung des Modells.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das Modell schreibgeschützt ist.</summary>
      <returns>True, wenn das Modell schreibgeschützt ist, andernfalls False.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1">
      <summary>Stellt Prototypencachedaten für <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" /> bereit.</summary>
      <typeparam name="TPrototypeCache">Der Typ des Prototypcaches.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />-Klasse.</summary>
      <param name="prototype">Der Prototyp.</param>
      <param name="modelAccessor">Der Modellaccessor.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />-Klasse.</summary>
      <param name="provider">Der Anbieter.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="propertyName">Der Name der Eigenschaft.</param>
      <param name="prototypeCache">Der Prototypcache.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Gibt an, ob leere Zeichenfolgen, die in Formularen zurückgesendet werden, berechnet und in null konvertiert werden sollen.</summary>
      <returns>true, wenn leere Zeichenfolgen, die in Formularen zurückgesendet werden, berechnet und in null konvertiert werden sollen, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeDescription">
      <summary>Gibt den Berechnungswert an.</summary>
      <returns>Der Berechnungswert.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsComplexType">
      <summary>Ruft einen Wert ab, der angibt, ob das Modell ein komplexer Typ ist.</summary>
      <returns>Ein Wert, der angibt, ob das Modell vom Web-API-Framework als komplexer Typ behandelt wird.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das zu berechnende Modell schreibgeschützt ist.</summary>
      <returns>true, wenn das zu berechnende Modell schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Ruft einen Wert ab, der angibt, ob leere Zeichenfolgen, die in Formularen zurückgesendet werden, in "null" konvertiert werden sollen, oder legt diesen fest.</summary>
      <returns>true, wenn leere Zeichenfolgen, die in Formularen zurückgesendet werden, in null konvertiert werden sollen, andernfalls false.Der Standardwert ist True.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.Description">
      <summary>Ruft die Beschreibung des Modells ab oder legt sie fest.</summary>
      <returns>Die Beschreibung des Modells.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsComplexType">
      <summary>Ruft einen Wert ab, der angibt, ob das Modell ein komplexer Typ ist.</summary>
      <returns>Ein Wert, der angibt, ob das Modell vom Web-API-Framework als komplexer Typ behandelt wird.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsReadOnly">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Modell schreibgeschützt ist.</summary>
      <returns>true, wenn das Modell schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.PrototypeCache">
      <summary>Ruft einen Wert ab, der angibt, ob der Prototypcache aktualisiert wird, oder legt diesen fest.</summary>
      <returns>true, wenn der Prototypcache aktualisiert wird, andernfalls false.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider">
      <summary>Implementiert den Metadatenanbieter für das Standardmodell.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Erstellt die Metadaten aus dem Prototyp für die angegebene Eigenschaft.</summary>
      <returns>Die Metadaten für die Eigenschaft.</returns>
      <param name="prototype">Der Prototyp.</param>
      <param name="modelAccessor">Der Modellaccessor.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Erstellt die Metadaten für die angegebene Eigenschaft.</summary>
      <returns>Die Metadaten für die Eigenschaft.</returns>
      <param name="attributes">Die Attribute.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="propertyName">Der Name der Eigenschaft.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider">
      <summary>Stellt einen leeren Metadatenanbieter für Modelle dar.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.ModelMetadata,System.Func{System.Object})">
      <summary>Erstellt Metadaten aus dem Prototyp.</summary>
      <returns>Die Metadaten.</returns>
      <param name="prototype">Der Modellmetadatenprototyp.</param>
      <param name="modelAccessor">Der Modellaccessor.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Erstellt einen Prototyp des Metadatenanbieters des <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />-Objekts.</summary>
      <returns>Ein Prototyp des Metadatenanbieters.</returns>
      <param name="attributes">Die Attribute.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="propertyName">Der Name der Eigenschaft.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding">
      <summary>Stellt die direkte Bindung an das Abbruchtoken dar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding" />-Klasse.</summary>
      <param name="descriptor">Der Bindungsdeskriptor.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Führt die Bindung während der Synchronisierung aus.</summary>
      <returns>Die Bindung während der Synchronisierung.</returns>
      <param name="metadataProvider">Der Metadatenanbieter.</param>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="cancellationToken">Die Benachrichtigung nach dem Abbruch der Vorgänge.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute">
      <summary>Stellt ein Attribut dar, das einen benutzerdefinierten Modellbinder aufruft.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.GetBinder">
      <summary>Ruft den zugeordneten Modellbinder ab.</summary>
      <returns>Ein Verweis auf ein Objekt, das die <see cref="T:System.Web.Http.ModelBinding.IModelBinder" />-Schnittstelle implementiert.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.DefaultActionValueBinder">
      <summary>Stellt den Standardaktionswert der Bindung dar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Die Standardimplementierung der <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />-Schnittstelle.Diese Schnittstelle ist der primäre Einstiegspunkt für Bindungsaktionsparameter.</summary>
      <returns>Das <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />-Objekt, das der <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" /> zugeordnet ist.</returns>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetParameterBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Ruft das <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />-Objekt ab, das der <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" /> zugeordnet ist.</summary>
      <returns>Das <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />-Objekt, das der <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" /> zugeordnet ist.</returns>
      <param name="parameter">Der Parameterdeskriptor.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ErrorParameterBinding">
      <summary>Definiert einen Bindungsfehler.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ErrorParameterBinding" />-Klasse.</summary>
      <param name="descriptor">Der Fehlerdeskriptor.</param>
      <param name="message">Die Nachricht.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ErrorParameterBinding.ErrorMessage">
      <summary>Ruft die Fehlermeldung ab.</summary>
      <returns>Die Fehlermeldung.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Führt die Bindungsmethode während der Synchronisierung aus.</summary>
      <param name="metadataProvider">Der Metadatenanbieter.</param>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="cancellationToken">Der Wert des Abbruchtokens.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormatterParameterBinding">
      <summary>Stellt die Parameterbindung dar, die aus dem Textteil liest und die Formatierer aufruft.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />-Klasse.</summary>
      <param name="descriptor">Der Deskriptor.</param>
      <param name="formatters">Der Formatierer.</param>
      <param name="bodyModelValidator">Das Validierungssteuerelement für das Textmodell.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.BodyModelValidator">
      <summary>Ruft eine Schnittstelle für das Validierungssteuerelement des Textmodells ab oder legt diese fest.</summary>
      <returns>Eine Schnittstelle für das Validierungssteuerelement des Textmodells.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.ErrorMessage">
      <summary>Ruft die Fehlermeldung ab.</summary>
      <returns>Die Fehlermeldung.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Führt die Bindung von <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> asynchron aus.</summary>
      <returns>Das Ergebnis der Aktion.</returns>
      <param name="metadataProvider">Der Metadatenanbieter.</param>
      <param name="actionContext">Der der Aktion zugeordnete Kontext.</param>
      <param name="cancellationToken">Das Abbruchtoken.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.Formatters">
      <summary>Ruft ein aufzählbares Objekt ab, das den Formatierer für die Parameterbindung darstellt, oder legt dieses fest.</summary>
      <returns>Ein aufzählbares Objekt ab, das den Formatierer für die Parameterbindung darstellt.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ReadContentAsync(System.Net.Http.HttpRequestMessage,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Liest asynchron den Inhalt von <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <returns>Das Ergebnis der Aktion.</returns>
      <param name="request">Die Anforderung.</param>
      <param name="type">Der Typ.</param>
      <param name="formatters">Der Formatierer.</param>
      <param name="formatterLogger">Die Formatprotokollierung.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.WillReadBody">
      <summary>Ruft ab, ob die <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> den Textteil liest.</summary>
      <returns>True, wenn die <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> den Textteil liest, andernfalls False.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormDataCollectionExtensions">
      <summary>Inhalte werden hier nicht aktualisiert. Bitte hier kein Material hinzufügen.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Web.Http.Controllers.HttpActionContext)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.Web.Http.Controllers.HttpActionContext)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehavior">
      <summary>Listet das Verhalten der HTTP-Bindung auf.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Never">
      <summary>Nie HTTP-Bindung verwenden.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Optional">
      <summary>Das optionale Bindungsverhalten.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Required">
      <summary>HTTP-Bindung ist erforderlich.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute">
      <summary>Stellt eine Basisklasse für Verhaltensattribute der Modellbindung bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.#ctor(System.Web.Http.ModelBinding.HttpBindingBehavior)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute" />-Klasse.</summary>
      <param name="behavior">Das Verhalten.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.Behavior">
      <summary>Ruft die Verhaltenskategorie ab oder legt diese fest.</summary>
      <returns>Die Verhaltenskategorie.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.TypeId">
      <summary>Ruft den eindeutigen Bezeichner für dieses Attribut ab.</summary>
      <returns>Die ID für dieses Attribut.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding">
      <summary>Der Parameter bindet an die Anforderung.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding" />-Klasse.</summary>
      <param name="descriptor">Der Parameterdeskriptor.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Führt die Parameterbindung asynchron aus.</summary>
      <returns>Der gebundene Parameter.</returns>
      <param name="metadataProvider">Der Metadatenanbieter.</param>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="cancellationToken">Das Abbruchtoken.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IModelBinder">
      <summary>Definiert die Methoden, die für einen Modellbinder erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Bindet das Modell an einen Wert, indem der angegebene Controllerkontext und der Bindungskontext verwendet werden.</summary>
      <returns>Der gebundene Wert.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IValueProviderParameterBinding">
      <summary>Stellt einen Wertanbieter für die Parameterbindung dar.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.IValueProviderParameterBinding.ValueProviderFactories">
      <summary>Ruft die <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />-Instanzen ab, die von dieser Parameterbindung verwendet werden.</summary>
      <returns>Die <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />-Instanzen, die von dieser Parameterbindung verwendet werden.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter">
      <summary>Stellt die <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />-Klasse für die Verarbeitung von HTML-Formulardaten mit URL-Endung, auch als application/x-www-form-urlencoded bezeichnet, dar.  </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.CanReadType(System.Type)">
      <summary> Bestimmt, ob dieser <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" /> Objekte des angegebenen <paramref name="type" /> lesen kann. </summary>
      <returns>True, wenn Objekte dieses Typs gelesen werden können, andernfalls False.</returns>
      <param name="type">Der Objekttyp, der gelesen wird.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Liest ein Objekt des angegebenen <paramref name="type" /> aus dem angegebenen Datenstrom. Diese Methode wird während der Deserialisierung aufgerufen.</summary>
      <returns>Ein <see cref="T:System.Threading.Tasks.Task" />, dessen Ergebnis die gelesene Objektinstanz ist.</returns>
      <param name="type">Der Typ des zu lesenden Objekts</param>
      <param name="readStream">Der <see cref="T:System.IO.Stream" />, aus dem gelesen werden soll.</param>
      <param name="content">Der Inhalt, der gelesen wird.</param>
      <param name="formatterLogger">Die <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, in der Ereignisse protokolliert werden sollen.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderAttribute">
      <summary>Geben Sie diesen Parameter für einen Modellbinder an.Dieser kann optional den speziellen Modellbinder und die Wertanbieter, von denen dieser Modellbinder versorgt wird, angeben.Abgeleitete Attribute können bequeme Einstellungen für den Modellbinder oder Wertanbieter bereitstellen.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />-Klasse.</summary>
      <param name="binderType">Der Typ der Modellbindung.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
      <summary>Ruft den Typ der Modellbindung ab bzw. legt diesen fest.</summary>
      <returns>Der Typ der Modellbindung. </returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Ruft die Bindung für einen Parameter ab.</summary>
      <returns>Das <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />-Objekt, das die Bindung enthält.</returns>
      <param name="parameter">Der zu bindende Parameter.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary> Ruft das IModelBinder-Objekt für diesen Typ ab. </summary>
      <returns> Eine Modellbindung ungleich null.</returns>
      <param name="configuration">Die Konfiguration.</param>
      <param name="modelType">Der Modelltyp, den die Bindung binden soll.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
      <summary>Ruft den Modellbindungsanbieter ab.</summary>
      <returns>Die <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />-Instanz.</returns>
      <param name="configuration">Das <see cref="T:System.Web.Http.HttpConfiguration" />-Konfigurationsobjekt.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary> Ruft die Wertanbieter ab, die in die Modellbindung eingelesen werden. </summary>
      <returns>Eine Auflistung von <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />-Instanzen.</returns>
      <param name="configuration">Das <see cref="T:System.Web.Http.HttpConfiguration" />-Konfigurationsobjekt.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
      <summary>Ruft den Namen ab, der als Parametername während der Modellbindung berücksichtigt werden soll, oder legt diesen fest.</summary>
      <returns>Der zu berücksichtigende Parametername.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
      <summary>Ruft einen Wert ab, der angibt, ob die Präfixprüfung unterdrückt werden soll, oder legt diesen fest.</summary>
      <returns>True, wenn die Präfixprüfung unterdrückt werden soll, andernfalls False.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderConfig">
      <summary>Stellt einen Container für die Modellbindungskonfiguration bereit.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ResourceClassKey">
      <summary>Ruft den Namen der Ressourcendatei (Klassenschlüssel) ab (bzw. legt diesen fest), die lokalisierte Zeichenfolgenwerte enthält.</summary>
      <returns>Der Name der Ressourcendatei (Klassenschlüssel).</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.TypeConversionErrorMessageProvider">
      <summary>Ruft den aktuellen Anbieter für die Typkonvertierungs-Fehlermeldung ab bzw. legt diesen fest.</summary>
      <returns>Der aktuelle Anbieter für die Typkonvertierungs-Fehlermeldung.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ValueRequiredErrorMessageProvider">
      <summary>Ruft den aktuellen Anbieter für Fehlermeldungen ab, die Werte erfordern, bzw. legt diesen fest.</summary>
      <returns>Der Fehlermeldungsanbieter.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderErrorMessageProvider">
      <summary>Stellt einen Container für Modellbindungs-Fehlermeldungsanbieter bereit.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding">
      <summary> Beschreibt einen Parameter, der mittels ModelBinding gebunden wird.   </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding" />-Klasse.</summary>
      <param name="descriptor">Der Parameterdeskriptor.</param>
      <param name="modelBinder">Der Modellbinder.</param>
      <param name="valueProviderFactories">Die Auflistung der Wertanbieterfactory.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.Binder">
      <summary>Ruft den Modellbinder ab.</summary>
      <returns>Der Modellbinder.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Führt die Parameterbindung über die Modellbindung asynchron aus.</summary>
      <returns>Die Aufgabe, die signalisiert wird, wenn die Bindung abgeschlossen ist.</returns>
      <param name="metadataProvider">Der Metadatenanbieter, der für die Überprüfung verwendet werden soll.</param>
      <param name="actionContext">Der Aktionskontext für die Bindung.</param>
      <param name="cancellationToken">Das Abbruchtoken, das für diese Aufgabe für das Abbrechen des Bindungsvorgangs zugewiesen wurde.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ValueProviderFactories">
      <summary>Ruft die Auflistung der Wertanbieterfactory ab.</summary>
      <returns>Die Auflistung der Wertanbieterfactory.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderProvider">
      <summary>Stellt eine abstrakte Basisklasse für Modellbinderanbieter bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Sucht einen Binder für den angegebenen Typ.</summary>
      <returns>Ein Binder, der versuchen kann, diesen Typ zu binden. Oder "null", wenn der Binder statisch weiß, dass er diesen Typ niemals binden kann.</returns>
      <param name="configuration">Ein Konfigurationsobjekt.</param>
      <param name="modelType">Der Typ des Modells, an das gebunden werden soll.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBindingContext">
      <summary>Stellt den Kontext bereit, in dem ein Modellbinder funktioniert.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor(System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />-Klasse.</summary>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob der Binder ein leeres Präfix verwenden soll.</summary>
      <returns>True, wenn der Binder ein leeres Präfix verwenden soll, andernfalls False.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.Model">
      <summary>Ruft das Modell ab bzw. legt es fest.</summary>
      <returns>Das Modell.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelMetadata">
      <summary>Ruft die Modellmetadaten ab oder legt diese fest.</summary>
      <returns>Die Modellmetadaten.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelName">
      <summary>Ruft den Namen des Modells ab oder legt diesen fest.</summary>
      <returns>Der Name des Modells.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelState">
      <summary>Ruft den Zustand des Modells ab bzw. legt diesen fest.</summary>
      <returns>Der Zustand des Modells.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelType">
      <summary>Ruft den Typ des Modells ab bzw. legt diesen fest.</summary>
      <returns>Der Typ des Modells.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.PropertyMetadata">
      <summary>Ruft die Eigenschaftenmetadaten ab.</summary>
      <returns>Die Eigenschaftenmetadaten.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValidationNode">
      <summary>Ruft den Validierungsknoten ab oder legt diesen fest.</summary>
      <returns>Der Validierungsknoten.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValueProvider">
      <summary>Ruft den Wertanbieter ab bzw. legt diesen fest.</summary>
      <returns>Der Wertanbieter.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelError">
      <summary>Stellt einen Fehler dar, der während der Modellbindung auftritt.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelError" />-Klasse unter Verwendung der angegebenen Ausnahme.</summary>
      <param name="exception">Die Ausnahme.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelError" />-Klasse, indem die angegebene Ausnahme und die Fehlermeldung verwendet werden.</summary>
      <param name="exception">Die Ausnahme.</param>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelError" />-Klasse unter Verwendung der angegebenen Fehlermeldung.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.ErrorMessage">
      <summary>Ruft die Fehlermeldung ab bzw. legt diese fest.</summary>
      <returns>Die Fehlermeldung.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.Exception">
      <summary>Ruft das Ausnahmeobjekt ab bzw. legt es fest.</summary>
      <returns>das Ausnahmeobjekt.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelErrorCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.Web.Http.ModelBinding.ModelError" />-Instanzen dar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.Exception)">
      <summary>Fügt der Modellfehlerauflistung das angegebene Ausnahme-Objekt hinzu.</summary>
      <param name="exception">Die Ausnahme.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.String)">
      <summary>Fügt der Modellfehlerauflistung die angegebene Fehlermeldung hinzu.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelState">
      <summary>Kapselt den Zustand der Modellbindung an eine Eigenschaft eines Aktionsmethodenarguments bzw. an das Argument selbst.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelState.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelState" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Errors">
      <summary>Ruft ein <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" />-Objekt ab, das alle Fehler enthält, die während der Modellbindung aufgetreten sind.</summary>
      <returns>Die Modellzustandsfehler.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Value">
      <summary>Ruft ein <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />-Objekt ab, das den Wert kapselt, der während der Modellbindung gebunden wurde.</summary>
      <returns>Der Modellzustandswert.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelStateDictionary">
      <summary>Stellt den Zustand eines Versuchs dar, ein bereitgestelltes Formular an eine Aktionsmethode zu binden, die Validierungsinformationen enthält.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />-Klasse, indem Werte verwendet werden, die aus dem angegebenen Modellzustandswörterbuch kopiert werden.</summary>
      <param name="dictionary">Das Wörterbuch.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Fügt dem Modellzustandswörterbuch das angegebene Element hinzu.</summary>
      <param name="item">Das Objekt, das dem Modellzustandswörterbuch hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.String,System.Web.Http.ModelBinding.ModelState)">
      <summary>Fügt ein Element, das über den angegebenen Schlüssel und Wert verfügt, dem Modellzustandswörterbuch hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Fügt der Fehlerauflistung für das Modellzustandswörterbuch, das dem angegebenen Schlüssel zugeordnet ist, den angegebenen Modellfehler hinzu.</summary>
      <param name="key">Der Schlüssel.</param>
      <param name="exception">Die Ausnahme.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Fügt der Fehlerauflistung für das Modellzustandswörterbuch, das dem angegebenen Schlüssel zugeordnet ist, die angegebene Fehlermeldung hinzu.</summary>
      <param name="key">Der Schlüssel.</param>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Clear">
      <summary>Entfernt alle Elemente aus dem Modellzustandswörterbuch.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Bestimmt, ob das Modellzustandswörterbuch einen bestimmten Wert enthält.</summary>
      <returns>True, wenn das Element im Modellzustandswörterbuch gefunden wurde, andernfalls False.</returns>
      <param name="item">Das Objekt, nach dem im Modellzustandswörterbuch gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Bestimmt, ob das Modellzustandswörterbuch den angegebenen Schlüssel enthält.</summary>
      <returns>True, wenn das Modellzustandswörterbuch den angegebenen Schlüssel enthält, andernfalls False.</returns>
      <param name="key">Der Schlüssel, nach dem im Modellzustandswörterbuch gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState}[],System.Int32)">
      <summary>Kopiert die Elemente des Modellzustandswörterbuchs in ein Array, wobei mit einem angegebenen Index begonnen wird.</summary>
      <param name="array">Das Array. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im Array, ab dem kopiert wird.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Count">
      <summary>Ruft die Anzahl der Schlüssel-Wert-Paare in der Auflistung ab.</summary>
      <returns>Die Anzahl der Schlüssel-Wert-Paare in der Auflistung.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem die Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>True, wenn die Auflistung schreibgeschützt ist, andernfalls False.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsValid">
      <summary>Ruft einen Wert ab, der angibt, ob diese Instanz des Modellzustandswörterbuchs gültig ist.</summary>
      <returns>True, wenn diese Instanz gültig ist, andernfalls False.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.IsValidField(System.String)">
      <summary>Bestimmt, ob <see cref="T:System.Web.Http.ModelBinding.ModelError" />-Objekte vorhanden sind, die dem angegebenen Schlüssel zugeordnet oder diesen als Präfix aufweisen.</summary>
      <returns>True, wenn das Modellzustandswörterbuch einen Wert enthält, der dem angegebenen Schlüssel zugeordnet ist, andernfalls False.</returns>
      <param name="key">Der Schlüssel.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Item(System.String)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</summary>
      <returns>Das Modellzustandselement.</returns>
      <param name="key">Der Schlüssel.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Keys">
      <summary>Ruft eine Auflistung ab, die die Schlüssel im Wörterbuch enthält.</summary>
      <returns>Eine Auflistung, die die Schlüssel im Modellzustandswörterbuch enthält.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Merge(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Kopiert die Werte aus dem angegebenen <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />-Objekt in dieses Wörterbuch, wobei vorhandene Werte überschrieben werden, falls die Schlüssel identisch sind.</summary>
      <param name="dictionary">Das Wörterbuch.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Entfernt das erste Vorkommen des angegebenen Objekts aus dem Modellzustandswörterbuch.</summary>
      <returns>True, wenn das Element erfolgreich aus dem Modellzustandswörterbuch entfernt wurde, andernfalls False. Diese Methode gibt auch dann False zurück, wenn das Element nicht im Modellzustandswörterbuch gefunden wird.</returns>
      <param name="item">Das Objekt, das aus dem Modellzustandswörterbuch entfernt werden soll.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.String)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem Modellzustandswörterbuch.</summary>
      <returns>True, wenn das Element erfolgreich entfernt wurde, andernfalls False. Diese Methode gibt auch dann False zurück, wenn der Schlüssel nicht im Modellzustandswörterbuch gefunden wird.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Web.Http.ValueProviders.ValueProviderResult)">
      <summary>Legt den Wert für den angegebenen Schlüssel fest, indem das Wörterbuch mit den angegebenen Wertanbietern verwendet wird.</summary>
      <param name="key">Der Schlüssel.</param>
      <param name="value">Der Wert.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein IEnumerator-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.TryGetValue(System.String,System.Web.Http.ModelBinding.ModelState@)">
      <summary>Versucht, den Wert abzurufen, der dem angegebenen Schlüssel zugeordnet ist.</summary>
      <returns>True, wenn das Objekt ein Element enthält, das den angegebenen Schlüssel besitzt, andernfalls False.</returns>
      <param name="key">Der Schlüssel des abzurufenden Werts.</param>
      <param name="value">Der Wert, der dem angegebenen Schlüssel zugeordnet ist.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Values">
      <summary>Ruft eine Auflistung ab, die die Werte im Wörterbuch enthält.</summary>
      <returns>Eine Auflistung, die die Werte des Modellzustandswörterbuchs enthält.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection">
      <summary> Eine Auflistung von Funktionen, die eine Parameterbindung für einen angegebenen Parameter generieren können.    </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Add(System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Fügt eine Funktion am Ende der Auflistung hinzu.  Die hinzugefügte Funktion ist ein Wrapper um funcInner, der überprüft, ob parameterType mit typeMatch übereinstimmt. </summary>
      <param name="typeMatch">Der Typ, der mit HttpParameterDescriptor.ParameterType verglichen werden soll.</param>
      <param name="funcInner">Die interne Funktion, die aufgerufen wird, wenn die Typübereinstimmung erfolgreich ist.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Insert(System.Int32,System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Fügt eine Funktion am angegebenen Index in die Auflistung ein. /// Die hinzugefügte Funktion ist ein Wrapper um funcInner, der überprüft, ob parameterType mit typeMatch übereinstimmt. </summary>
      <param name="index">Der Index, an dem der Einfügevorgang stattfinden soll.</param>
      <param name="typeMatch">Der Typ, der mit HttpParameterDescriptor.ParameterType verglichen werden soll.</param>
      <param name="funcInner">Die interne Funktion, die aufgerufen wird, wenn die Typübereinstimmung erfolgreich ist.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.LookupBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Führt jede Bindungsfunktion in der entsprechenden Reihenfolge aus, bis eine der Funktionen eine Bindung ungleich null zurückgibt.  </summary>
      <returns>Die erste Bindung ungleich null, die für den Parameter generiert wird. Gibt null zurück, wenn keine Bindung generiert wird.</returns>
      <param name="parameter">Der zu bindende Parameter.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1">
      <summary>Ordnet einem Array eine Browseranforderung zu.</summary>
      <typeparam name="TElement">Der Typ des Arrays.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Gibt an, ob das Modell gebunden ist.</summary>
      <returns>True, wenn das angegebene Modell gebunden ist, andernfalls False.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Konvertiert die Auflistung in ein Array.</summary>
      <returns>true in allen Fällen.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
      <param name="newCollection">Die neue Auflistung.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider">
      <summary>Stellt einen Modellbinder für Arrays bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Gibt einen Modellbinder für Arrays zurück.</summary>
      <returns>Ein Modellbinderobjekt oder "null", wenn der Versuch zum Abrufen eines Modellbinders nicht erfolgreich ist.</returns>
      <param name="configuration">Die Konfiguration.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1">
      <summary>Ordnet einer Auflistung eine Browseranforderung zu.</summary>
      <typeparam name="TElement">Der Typ der Auflistung.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Bindet das Modell, indem der angegebene Ausführungskontext und Bindungskontext verwendet werden.</summary>
      <returns>True, wenn die Modellbindung erfolgreich ist, andernfalls False.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Stellt eine Möglichkeit bereit, damit abgeleitete Klassen die Auflistung bearbeiten können, bevor sie vom Binder zurückgegeben wird.</summary>
      <returns>True in allen Fällen.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
      <param name="newCollection">Die neue Auflistung.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider">
      <summary>Stellt einen Modellbinder für eine Auflistung bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Ruft einen Modellbinder für eine Auflistung ab.</summary>
      <returns>Der Modellbinder.</returns>
      <param name="configuration">Die Konfiguration des Modells.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto">
      <summary>Stellt ein Datenübertragungsobjekt (DTO) für ein komplexes Modell dar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDto.#ctor(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Metadata.ModelMetadata})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />-Klasse.</summary>
      <param name="modelMetadata">Die Modellmetadaten.</param>
      <param name="propertyMetadata">Die Auflistung der Eigenschaftenmetadaten.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.ModelMetadata">
      <summary>Ruft die Modellmetadaten des <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> ab oder legt diese fest.</summary>
      <returns>Die Modellmetadaten des <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.PropertyMetadata">
      <summary>Ruft die Auflistung der Eigenschaftenmetadaten des <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> ab oder legt diese fest.</summary>
      <returns>Die Auflistung der Eigenschaftenmetadaten des <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.Results">
      <summary>Ruft die Ergebnisse des <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> ab oder legt sie fest.</summary>
      <returns>Die Ergebnisse des <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder">
      <summary>Stellt eine Modellbindung für das <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />-Objekt dar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Bestimmt, ob das angegebene Modell gebunden ist.</summary>
      <returns>True, wenn das angegebene Modell gebunden ist, andernfalls False.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider">
      <summary>Stellt ein komplexes Modell dar, das einen Modellbindungsanbieter aufruft.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Ruft den zugeordneten Modellbinder ab.</summary>
      <returns>Der Modellbinder.</returns>
      <param name="configuration">Die Konfiguration.</param>
      <param name="modelType">Der Typ des abzurufenden Modells.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult">
      <summary>Stellt das Ergebnis für das <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />-Objekt dar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.#ctor(System.Object,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult" />-Klasse.</summary>
      <param name="model">Das Objektmodell.</param>
      <param name="validationNode">Der Validierungsknoten.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.Model">
      <summary>Ruft das Modell für dieses Objekt ab oder legt es fest.</summary>
      <returns>Das Modell für dieses Objekt.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.ValidationNode">
      <summary>Ruft den <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> für dieses Objekt ab oder legt ihn fest.</summary>
      <returns>Der <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> für dieses Objekt.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder">
      <summary>Stellt eine <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> dar, die an eine der Auflistungen von <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />-Instanzen delegiert.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />-Klasse.</summary>
      <param name="binders">Eine Enumeration von Bindern.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Web.Http.ModelBinding.IModelBinder[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />-Klasse.</summary>
      <param name="binders">Ein Array von Bindern.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Gibt an, ob das angegebene Modell gebunden ist.</summary>
      <returns>True, wenn das Modell gebunden ist, andernfalls False.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider">
      <summary>Stellt die Klasse für zusammengesetzte Modellbinderanbieter dar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.ModelBinderProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />-Klasse.</summary>
      <param name="providers">Eine Auflistung von <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />-Objekten.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Ruft den Binder für das Modell ab.</summary>
      <returns>Der Binder für das Modell.</returns>
      <param name="configuration">Die Binderkonfiguration.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.Providers">
      <summary>Ruft die Anbieter für zusammengesetzte Modellbinder ab.</summary>
      <returns>Die Auflistung von Anbietern.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2">
      <summary>Ordnet einem Wörterbuch-Datenobjekt eine Browseranforderung zu.</summary>
      <typeparam name="TKey">Der Typ des Schlüssels.</typeparam>
      <typeparam name="TValue">Der Typ des Werts.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{`0,`1}})">
      <summary>Konvertiert die Auflistung in ein Wörterbuch.</summary>
      <returns>True in allen Fällen.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
      <param name="newCollection">Die neue Auflistung.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider">
      <summary>Stellt einen Modellbinder für ein Wörterbuch bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Ruft den zugeordneten Modellbinder ab.</summary>
      <returns>Der zugeordnete Modellbinder.</returns>
      <param name="configuration">Die zu verwendende Konfiguration.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2">
      <summary>Ordnet einem Schlüssel-Wert-Paar-Datenobjekt eine Browseranforderung zu.</summary>
      <typeparam name="TKey">Der Typ des Schlüssels.</typeparam>
      <typeparam name="TValue">Der Typ des Werts.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Bindet das Modell, indem der angegebene Ausführungskontext und Bindungskontext verwendet werden.</summary>
      <returns>True, wenn die Modellbindung erfolgreich ist, andernfalls False.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider">
      <summary>Stellt einen Modellbinder für eine Auflistung von Schlüssel-Wert-Paaren bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Ruft den zugeordneten Modellbinder ab.</summary>
      <returns>Der zugeordnete Modellbinder.</returns>
      <param name="configuration">Die Konfiguration.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder">
      <summary>Ordnet einem änderbaren Datenobjekt eine Browseranforderung zu.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Bindet das Modell, indem der angegebene Aktionskontext und Bindungskontext verwendet werden.</summary>
      <returns>true, wenn die Bindung erfolgreich ist, andernfalls false.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CanUpdateProperty(System.Web.Http.Metadata.ModelMetadata)">
      <summary>Ruft einen Wert ab, der angibt, ob eine Eigenschaft aktualisiert werden kann.</summary>
      <returns>True, wenn der Eigenschaft aktualisiert werden kann, andernfalls False.</returns>
      <param name="propertyMetadata">Die Metadaten für die auszuwertende Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CreateModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Erstellt eine Instanz des Modells.</summary>
      <returns>Das neu erstellte Modellobjekt.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.EnsureModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Erstellt eine Modellinstanz, falls im Bindungskontext noch keine Instanz vorhanden ist.</summary>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.GetMetadataForProperties(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Ruft Metadaten für Eigenschaften des Modells ab.</summary>
      <returns>Die Metadaten für Eigenschaften des Modells.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.SetProperty(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Web.Http.Metadata.ModelMetadata,System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult,System.Web.Http.Validation.ModelValidator)">
      <summary>Legt den Wert einer angegebenen Eigenschaft fest.</summary>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
      <param name="propertyMetadata">Die Metadaten für die festzulegende Eigenschaft.</param>
      <param name="dtoResult">Die Überprüfungsinformationen zur Eigenschaft.</param>
      <param name="requiredValidator">Das Validierungssteuerelement für das Modell.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider">
      <summary>Stellt einen Modellbinder für änderbare Objekte bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Ruft den Modellbinder für den angegebenen Typ ab.</summary>
      <returns>Der Modellbinder.</returns>
      <param name="configuration">Die Konfiguration.</param>
      <param name="modelType">Der Typ des abzurufenden Modells.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider">
      <summary>Stellt einen einfachen Modellbinder für diese Modellbindungsklasse bereit.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Func{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" />-Klasse.</summary>
      <param name="modelType">Der Modelltyp.</param>
      <param name="modelBinderFactory">Die Modellbinderfactory.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" />-Klasse, indem der angegebene Modelltyp und der Modellbinder verwendet werden.</summary>
      <param name="modelType">Der Modelltyp.</param>
      <param name="modelBinder">Der Modellbinder.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Gibt einen Modellbinder zurück, indem der angegebene Aktions- und Bindungskontext verwendet werden.</summary>
      <returns>Der Modellbinder oder "null", wenn der Versuch zum Abrufen eines Modellbinders nicht erfolgreich ist.</returns>
      <param name="configuration">Die Konfiguration.</param>
      <param name="modelType">Der Modelltyp.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.ModelType">
      <summary>Ruft den Typ des Modells ab.</summary>
      <returns>Der Typ des Modells.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.SuppressPrefixCheck">
      <summary>Ruft einen Wert ab, der angibt, ob die Präfixprüfung unterdrückt werden soll, oder legt diesen fest.</summary>
      <returns>True, wenn die Präfixprüfung unterdrückt werden soll, andernfalls False.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder">
      <summary>Ordnet einem Datenobjekt eine Browseranforderung zu. Dieser Typ wird verwendet, wenn die Modellbindung Typkonvertierungen unter Verwendung eines .NET Framework-Typkonverters erfordert.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Bindet das Modell, indem der angegebene Controllerkontext und Bindungskontext verwendet werden.</summary>
      <returns>True, wenn die Modellbindung erfolgreich ist, andernfalls False.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider">
      <summary>Stellt einen Modellbinder für ein Modell bereit, das Typkonvertierung erfordert.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Abrufen eines Modellbinders für ein Modell, das Typkonvertierung erfordert.</summary>
      <returns>Der Modellbinder oder Nothing, wenn der Typ nicht konvertiert werden kann oder kein zu konvertierender Wert vorhanden ist.</returns>
      <param name="configuration">Die Konfiguration des Binders.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder">
      <summary>Ordnet einem Datenobjekt eine Browseranforderung zu. Diese Klasse wird verwendet, wenn die Modellbindung keine Typkonvertierung erfordert.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Bindet das Modell, indem der angegebene Ausführungskontext und Bindungskontext verwendet werden.</summary>
      <returns>True, wenn die Modellbindung erfolgreich ist, andernfalls False.</returns>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider">
      <summary>Stellt einen Modellbinder für ein Modell bereit, das keine Typkonvertierung erfordert.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Ruft den zugeordneten Modellbinder ab.</summary>
      <returns>Der zugeordnete Modellbinder.</returns>
      <param name="configuration">Die Konfiguration.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="T:System.Web.Http.Results.BadRequestErrorMessageResult">
      <summary>Represents an action result that returns <see cref="F:System.Net.HttpStatusCode.BadRequest" /> response and performs content negotiation on an see <see cref="T:System.Web.Http.HttpError" /> with  <see cref="P:System.Web.Http.HttpError.Message" />. </summary>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.#ctor(System.String,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.BadRequestErrorMessageResult" /> class.</summary>
      <param name="message">The user-visible error message.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.#ctor(System.String,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.BadRequestErrorMessageResult" /> class. </summary>
      <param name="message">The user-visible error message.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
      <returns>Returns <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Message">
      <summary>Gets the user-visible error message.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>Returns <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.BadRequestResult">
      <summary>Represents an action result that returns an empty <see cref="F:System.Net.HttpStatusCode.BadRequest" /> response.</summary>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.BadRequestResult" /> class.</summary>
      <param name="request">The request message which led to this result.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.#ctor(System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.BadRequestResult" /> class.</summary>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Asynchronously executes the request.</summary>
      <returns>The task that completes the execute operation.</returns>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestResult.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>The request message which led to this result.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ConflictResult">
      <summary>Represents an action result that performs conflict result and returns a specified value.</summary>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.ConflictResult" /> class.</summary>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.#ctor(System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.ConflictResult" /> class.</summary>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Executes asynchronously the operation of the conflict result.</summary>
      <returns>Asynchronously executes the specified task.</returns>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="P:System.Web.Http.Results.ConflictResult.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>The HTTP request message which led to this result.</returns>
    </member>
    <member name="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1">
      <summary>Represents an action result that performs route generation and content negotiation and returns a <see cref="F:System.Net.HttpStatusCode.Created" /> response when content negotiation succeeds.</summary>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> class with the values provided.</summary>
      <param name="routeName">The name of the route to use for generating the URL.</param>
      <param name="routeValues">The route data to use for generating the URL.</param>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},`0,System.Web.Http.Routing.UrlHelper,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> class with the values provided.</summary>
      <param name="routeName">The name of the route to use for generating the URL.</param>
      <param name="routeValues">The route data to use for generating the URL.</param>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <param name="urlFactory">The factory to use to generate the route URL.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Content">
      <summary>Gets the content value to negotiate and format in the entity body.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.RouteName">
      <summary>Gets the name of the route to use for generating the URL.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.RouteValues">
      <summary>Gets the route data to use for generating the URL.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.UrlFactory">
      <summary>Gets the factory to use to generate the route URL.</summary>
    </member>
    <member name="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1">
      <summary>Represents an action result that performs content negotiation and returns a <see cref="F:System.Net.HttpStatusCode.Created" /> response when it succeeds.</summary>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.#ctor(System.Uri,`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> class with the values provided.</summary>
      <param name="location">The content value to negotiate and format in the entity body.</param>
      <param name="content">The location at which the content has been created.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.#ctor(System.Uri,`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> class with the values provided.</summary>
      <param name="location">The location at which the content has been created.</param>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Content">
      <summary>Gets the content value to negotiate and format in the entity body.</summary>
      <returns>The content value to negotiate and format in the entity body.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
      <returns>The content negotiator to handle content negotiation.</returns>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Executes asynchronously the operation of the created negotiated content result.</summary>
      <returns>Asynchronously executes a return value.</returns>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
      <returns>The formatters to use to negotiate and format the content.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Location">
      <summary>Gets the location at which the content has been created.</summary>
      <returns>The location at which the content has been created.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>The HTTP request message which led to this result.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ExceptionResult">
      <summary>Represents an action result that returns a <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> response and performs content negotiation on an <see cref="T:System.Web.Http.HttpError" />  based on an <see cref="P:System.Web.Http.Results.ExceptionResult.Exception" />. </summary>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.#ctor(System.Exception,System.Boolean,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.ExceptionResult" /> class.</summary>
      <param name="exception">The exception to include in the error.</param>
      <param name="includeErrorDetail">true if the error should include exception messages; otherwise, false . </param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.#ctor(System.Exception,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.ExceptionResult" /> class. </summary>
      <param name="exception">The exception to include in the error.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
      <returns>Returns <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Exception">
      <summary>Gets the exception to include in the error.</summary>
      <returns>Returns <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.IncludeErrorDetail">
      <summary>Gets a value indicating whether the error should include exception messages.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>Returns <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.FormattedContentResult`1">
      <summary>Represents an action result that returns formatted content.</summary>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.FormattedContentResult`1" /> class with the values provided.</summary>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="content">The content value to format in the entity body.</param>
      <param name="formatter">The formatter to use to format the content.</param>
      <param name="mediaType">The value for the Content-Type header, or <see cref="null" /> to have the formatter pick a default value.</param>
      <param name="request">The request message which led to this result.</param>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.FormattedContentResult`1" /> class with the values provided.</summary>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="content">The content value to format in the entity body.</param>
      <param name="formatter">The formatter to use to format the content.</param>
      <param name="mediaType">The value for the Content-Type header, or <see cref="null" /> to have the formatter pick a default value.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Content">
      <summary>Gets the content value to format in the entity body.</summary>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Formatter">
      <summary>Gets the formatter to use to format the content.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.MediaType">
      <summary>Gets the value for the Content-Type header, or <see cref="null" /> to have the formatter pick a default value.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.StatusCode">
      <summary>Gets the HTTP status code for the response message.</summary>
    </member>
    <member name="T:System.Web.Http.Results.InternalServerErrorResult">
      <summary>Represents an action result that returns an empty <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> response.</summary>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.InternalServerErrorResult" /> class. </summary>
      <param name="request">The request message which led to this result.</param>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.#ctor(System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.InternalServerErrorResult" /> class. </summary>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InternalServerErrorResult.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>Returns <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.InvalidModelStateResult">
      <summary>Represents an action result that returns a <see cref="F:System.Net.HttpStatusCode.BadRequest" /> response and performs content negotiation on an <see cref="T:System.Web.Http.HttpError" /> based on a <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> class.</summary>
      <param name="modelState">The model state to include in the error.</param>
      <param name="includeErrorDetail">true if the error should include exception messages; otherwise,  false.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> class.</summary>
      <param name="modelState">The model state to include in the error.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
      <returns>The content negotiator to handle content negotiation.</returns>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Creates a response message asynchronously.</summary>
      <returns>A task that, when completed, contains the response message.</returns>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
      <returns>The formatters to use to negotiate and format the content.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.IncludeErrorDetail">
      <summary>Gets a value indicating whether the error should include exception messages.</summary>
      <returns>true if the error should include exception messages; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.ModelState">
      <summary>Gets the model state to include in the error.</summary>
      <returns>The model state to include in the error.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>The request message which led to this result.</returns>
    </member>
    <member name="T:System.Web.Http.Results.JsonResult`1">
      <summary>Represents an action result that returns an <see cref="F:System.Net.HttpStatusCode.OK" /> response with JSON data.</summary>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.#ctor(`0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding,System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.JsonResult`1" /> class with the values provided.</summary>
      <param name="content">The content value to serialize in the entity body.</param>
      <param name="serializerSettings">The serializer settings.</param>
      <param name="encoding">The content encoding.</param>
      <param name="request">The request message which led to this result.</param>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.#ctor(`0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.JsonResult`1" /> class with the values provided.</summary>
      <param name="content">The content value to serialize in the entity body.</param>
      <param name="serializerSettings">The serializer settings.</param>
      <param name="encoding">The content encoding.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Content">
      <summary>Gets the content value to serialize in the entity body.</summary>
      <returns>The content value to serialize in the entity body.</returns>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Encoding">
      <summary>Gets the content encoding.</summary>
      <returns>The content encoding.</returns>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Creates a response message asynchronously.</summary>
      <returns>A task that, when completed, contains the response message.</returns>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>The request message which led to this result.</returns>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.SerializerSettings">
      <summary>Gets the serializer settings.</summary>
      <returns>The serializer settings.</returns>
    </member>
    <member name="T:System.Web.Http.Results.NegotiatedContentResult`1">
      <summary>Represents an action result that performs content negotiation.</summary>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.NegotiatedContentResult`1" /> class with the values provided.</summary>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.NegotiatedContentResult`1" /> class with the values provided.</summary>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Content">
      <summary>Gets the content value to negotiate and format in the entity body.</summary>
      <returns>The content value to negotiate and format in the entity body.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
      <returns>The content negotiator to handle content negotiation.</returns>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Executes asynchronously an HTTP negotiated content results.</summary>
      <returns>Asynchronously executes an HTTP negotiated content results.</returns>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
      <returns>The formatters to use to negotiate and format the content.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>The HTTP request message which led to this result.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.StatusCode">
      <summary>Gets the HTTP status code for the response message.</summary>
      <returns>The HTTP status code for the response message.</returns>
    </member>
    <member name="T:System.Web.Http.Results.NotFoundResult">
      <summary>Represents an action result that returns an empty <see cref="F:System.Net.HttpStatusCode.NotFound" /> response.</summary>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.NotFoundResult" /> class.</summary>
      <param name="request">The request message which led to this result.</param>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.#ctor(System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.NotFoundResult" /> class.</summary>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.NotFoundResult.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="T:System.Web.Http.Results.OkNegotiatedContentResult`1">
      <summary>Represents an action result that performs content negotiation.</summary>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> class with the values provided.</summary>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> class with the values provided.</summary>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Content">
      <summary>Gets the content value to negotiate and format in the entity body.</summary>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="T:System.Web.Http.Results.OkResult">
      <summary>Provides the web an HTTP request message ok results.</summary>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.OkResult" /> class.</summary>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.#ctor(System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.NotFoundResult" /> class.</summary>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Executes asynchronously the HTTP results.</summary>
      <returns>Returns the task.</returns>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="P:System.Web.Http.Results.OkResult.Request">
      <summary>Gets a HTTP request message for the results.</summary>
      <returns>A HTTP request message for the results.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ResponseMessageResult">
      <summary>Represents an action result that returns a specified response message.</summary>
    </member>
    <member name="M:System.Web.Http.Results.ResponseMessageResult.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> class.</summary>
      <param name="response">The response message.</param>
    </member>
    <member name="M:System.Web.Http.Results.ResponseMessageResult.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.ResponseMessageResult.Response">
      <summary>Gets the response message.</summary>
    </member>
    <member name="T:System.Web.Http.Results.StatusCodeResult">
      <summary>Represents an action result that returns a specified HTTP status code.</summary>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.#ctor(System.Net.HttpStatusCode,System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.StatusCodeResult" /> class.</summary>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="request">The request message which led to this result.</param>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.#ctor(System.Net.HttpStatusCode,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.StatusCodeResult" /> class.</summary>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Creates a response message asynchronously.</summary>
      <returns>A task that, when completed, contains the response message.</returns>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="P:System.Web.Http.Results.StatusCodeResult.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>The request message which led to this result.</returns>
    </member>
    <member name="P:System.Web.Http.Results.StatusCodeResult.StatusCode">
      <summary>Gets the HTTP status code for the response message.</summary>
      <returns>The HTTP status code for the response message.</returns>
    </member>
    <member name="T:System.Web.Http.Results.UnauthorizedResult">
      <summary>Represents an action result that returns an <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> response. </summary>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Results.StatusCodeResult" /> class. </summary>
      <param name="challenges">The WWW-Authenticate challenges.</param>
      <param name="request">The request message which led to this result.</param>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the<see cref="T:System.Web.Http.Results.StatusCodeResult" /> class. </summary>
      <param name="challenges">The WWW-Authenticate challenges.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.Results.UnauthorizedResult.Challenges">
      <summary>Gets the WWW-Authenticate challenges.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.UnauthorizedResult.Request">
      <summary>Gets the request message which led to this result.</summary>
      <returns>Returns <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.DefaultInlineConstraintResolver">
      <summary> The default implementation of <see cref="T:System.Web.Http.Routing.IInlineConstraintResolver" />. Resolves constraints by parsing a constraint key and constraint arguments, using a map to resolve the constraint type, and calling an appropriate constructor for the constraint type. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultInlineConstraintResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.DefaultInlineConstraintResolver" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary> Gets the mutable dictionary that maps constraint keys to a particular constraint type. </summary>
      <returns>The mutable dictionary that maps constraint keys to a particular constraint type.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>Resolves the inline constraint.</summary>
      <returns>The <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> the inline constraint was resolved to.</returns>
      <param name="inlineConstraint">The inline constraint to resolve.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpDirectRoute">
      <summary>Represents a route that is able to directly select the actions that can be reached.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpDirectRoute.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.ReflectedHttpActionDescriptor})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.HttpDirectRoute" /> class. </summary>
      <param name="routeTemplate">The route template.</param>
      <param name="actions">The actions that are reachable via this route.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpDirectRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.ReflectedHttpActionDescriptor})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.HttpDirectRoute" /> class. </summary>
      <param name="routeTemplate">The route template.</param>
      <param name="defaults">The default values.</param>
      <param name="constraints">The route constraints.</param>
      <param name="actions">The actions that are reachable via this route.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpDirectRoute.Actions">
      <summary>Gets the actions that are reachable via this route.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IReadOnlyList`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpDirectRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <returns>Returns <see cref="T:System.Web.Http.Routing.IHttpRouteData" />.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpMethodConstraint">
      <summary>Ermöglicht Ihnen das Definieren der zulässigen HTTP-Verben, wenn mittels ASP.NET-Routing bestimmt wird, ob eine URL einer Route entspricht.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.#ctor(System.Net.Http.HttpMethod[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpMethodConstraint" />-Klasse, indem die für die Route zulässigen HTTP-Verben verwendet werden.</summary>
      <param name="allowedMethods">Die für die Route gültigen HTTP-Verben.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpMethodConstraint.AllowedMethods">
      <summary>Ruft die Auflistung der für die Route zulässigen HTTP-Verben ab oder legt sie fest.</summary>
      <returns>Eine Auflistung der für die Route zulässigen HTTP-Verben.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bestimmt, ob die Anforderung mit einem HTTP-Verb gestellt wurde, das zu den zulässigen Verben für die Route gehört.</summary>
      <returns>Bei Verarbeitung einer Anforderung durch das ASP.NET-Routing True, falls die Anforderung mit einem zulässigen HTTP-Verb gestellt wurde, andernfalls False. Bei Generierung einer URL durch das ASP.NET-Routing True, falls die angegebenen Werte ein HTTP-Verb enthalten, das mit einem der zulässigen HTTP-Verben übereinstimmt, andernfalls False. Der Standardwert ist True.</returns>
      <param name="request">Die Anforderung, die überprüft wird, um zu bestimmen, ob sie der URL entspricht.</param>
      <param name="route">Das Objekt, das überprüft wird, um zu bestimmen, ob es der URL entspricht.</param>
      <param name="parameterName">Der Name des Parameters, der überprüft wird.</param>
      <param name="values">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="routeDirection">Ein Objekt, das angibt, ob die Einschränkungsprüfung ausgeführt wird, wenn eine eingehende Anforderung verarbeitet oder eine URL generiert wird.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.System#Web#Http#Routing#IHttpRouteConstraint#Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bestimmt, ob die Anforderung mit einem HTTP-Verb gestellt wurde, das zu den zulässigen Verben für die Route gehört.</summary>
      <returns>Bei Verarbeitung einer Anforderung durch das ASP.NET-Routing True, falls die Anforderung mit einem zulässigen HTTP-Verb gestellt wurde, andernfalls False. Bei Generierung einer URL durch das ASP.NET-Routing True, falls die angegebenen Werte ein HTTP-Verb enthalten, das mit einem der zulässigen HTTP-Verben übereinstimmt, andernfalls False. Der Standardwert ist True.</returns>
      <param name="request">Die Anforderung, die überprüft wird, um zu bestimmen, ob sie der URL entspricht.</param>
      <param name="route">Das Objekt, das überprüft wird, um zu bestimmen, ob es der URL entspricht.</param>
      <param name="parameterName">Der Name des Parameters, der überprüft wird.</param>
      <param name="values">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="routeDirection">Ein Objekt, das angibt, ob die Einschränkungsprüfung ausgeführt wird, wenn eine eingehende Anforderung verarbeitet oder eine URL generiert wird.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRoute">
      <summary>Stellt eine Routenklasse für Selbsthosting (d. h. außerhalb von ASP.NET gehostet) dar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRoute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRoute" />-Klasse.</summary>
      <param name="routeTemplate">Die Routenvorlage.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRoute" />-Klasse.</summary>
      <param name="routeTemplate">Die Routenvorlage.</param>
      <param name="defaults">Die Standardwerte für die Routenparameter.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRoute" />-Klasse.</summary>
      <param name="routeTemplate">Die Routenvorlage.</param>
      <param name="defaults">Die Standardwerte für die Routenparameter.</param>
      <param name="constraints">Die Einschränkungen für die Routenparameter.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRoute" />-Klasse.</summary>
      <param name="routeTemplate">Die Routenvorlage.</param>
      <param name="defaults">Die Standardwerte für die Routenparameter.</param>
      <param name="constraints">Die Einschränkungen für die Routenparameter.</param>
      <param name="dataTokens">Zusätzliche Token für die Routenparameter.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRoute" />-Klasse.</summary>
      <param name="routeTemplate">Die Routenvorlage.</param>
      <param name="defaults">Die Standardwerte für die Routenparameter.</param>
      <param name="constraints">Die Einschränkungen für die Routenparameter.</param>
      <param name="dataTokens">Zusätzliche Token für die Routenparameter.</param>
      <param name="handler">Der Nachrichtenhandler, der der Empfänger der Anforderung ist.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Constraints">
      <summary>Ruft die Einschränkungen für die Routenparameter ab.</summary>
      <returns>Die Einschränkungen für die Routenparameter.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.DataTokens">
      <summary>Ruft alle zusätzlichen Datentoken ab, die nicht direkt verwendet werden, um zu bestimmen, ob eine Route einer eingehenden <see cref="T:System.Net.Http.HttpRequestMessage" /> entspricht.</summary>
      <returns>Alle zusätzlichen Datentoken, die nicht direkt verwendet werden, um zu bestimmen, ob eine Route einer eingehenden <see cref="T:System.Net.Http.HttpRequestMessage" /> entspricht.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Defaults">
      <summary>Ruft die Standardwerte für Routenparameter ab, wenn sie nicht von der eingehenden <see cref="T:System.Net.Http.HttpRequestMessage" /> bereitgestellt werden.</summary>
      <returns>Die Standardwerte für Routenparameter, wenn sie nicht von der eingehenden <see cref="T:System.Net.Http.HttpRequestMessage" /> bereitgestellt werden.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary>Bestimmt, ob diese Route eine Übereinstimmung für die eingehende Anforderung ist, indem <see cref="T:System.Web.Http.Routing.HttpRouteData" /> für die Route nachgeschlagen wird.</summary>
      <returns>Die <see cref="T:System.Web.Http.Routing.HttpRouteData" /> für eine Route, wenn eine Übereinstimmung vorliegt, andernfalls null.</returns>
      <param name="virtualPathRoot">Der virtuelle Pfadstamm.</param>
      <param name="request">Die HTTP-Anforderung.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Versucht, einen URI zu generieren, der die empfangenen Werte darstellt, auf Grundlage der aktuellen Werte aus den <see cref="T:System.Web.Http.Routing.HttpRouteData" /> und neuer Werte unter Verwendung der angegebenen <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <returns>Eine <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" />-Instanz oder "null", wenn der URI nicht generiert werden kann.</returns>
      <param name="request">Die HTTP-Anforderungsnachricht.</param>
      <param name="values">Die Routenwerte.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Handler">
      <summary>Ruft den HTTP-Routenhandler ab oder legt diesen fest.</summary>
      <returns>Der HTTP-Routenhandler.</returns>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRoute.HttpRouteKey"></member>
    <member name="M:System.Web.Http.Routing.HttpRoute.ProcessConstraint(System.Net.Http.HttpRequestMessage,System.Object,System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Ermittelt, ob diese Instanz einer angegebenen Route entspricht.</summary>
      <returns>true, wenn diese Instanz mit einer angegebenen Route identisch ist, andernfalls false.</returns>
      <param name="request">Die HTTP-Anforderung.</param>
      <param name="constraint">Die Einschränkungen für die Routenparameter.</param>
      <param name="parameterName">Der Name des Parameters.</param>
      <param name="values">Eine Liste der Parameterwerte.</param>
      <param name="routeDirection">Einer der Enumerationswerte der Enumeration <see cref="System.Web.Http.Routing.HttpRouteDirection" />.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.RouteTemplate">
      <summary>Ruft die Routenvorlage ab, die das URI-Muster beschreibt, mit dem abgeglichen wird.</summary>
      <returns>Die Routenvorlage, die das URI-Muster beschreibt, mit dem abgeglichen wird.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteBuilder">
      <summary> Builds <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instances based on route information. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteBuilder.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.Routing.HttpRouteBuilder" /> class using the default inline constraint resolver. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteBuilder.#ctor(System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.Routing.HttpRouteBuilder" /> class. </summary>
      <param name="constraintResolver">The <see cref="T:System.Web.Http.Routing.IInlineConstraintResolver" /> to use for resolving inline constraints.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteBuilder.BuildHttpRoute(System.String,System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.ReflectedHttpActionDescriptor})"></member>
    <member name="M:System.Web.Http.Routing.HttpRouteBuilder.BuildHttpRoute(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Collections.Generic.IEnumerable{System.Web.Http.Controllers.ReflectedHttpActionDescriptor})"></member>
    <member name="P:System.Web.Http.Routing.HttpRouteBuilder.ConstraintResolver"></member>
    <member name="T:System.Web.Http.Routing.HttpRouteData">
      <summary>Kapselt Informationen über die HTTP-Route.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRouteData" />-Klasse.</summary>
      <param name="route">Ein Objekt, das die Route definiert.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRouteData" />-Klasse.</summary>
      <param name="route">Ein Objekt, das die Route definiert.</param>
      <param name="values">Der Wert.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Route">
      <summary>Ruft das Objekt ab, das die Route darstellt.</summary>
      <returns>Das Objekt ab, das die Route darstellt.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Values">
      <summary>Ruft eine Auflistung von URL-Parameterwerten und Standardwerten für die Route ab.</summary>
      <returns>Ein Objekt, das Werte enthält, die aus der URL und aus Standardwerten analysiert wurden.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteDirection">
      <summary>Gibt eine Enumeration der Routenrichtung an.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriGeneration">
      <summary>Die UriGeneration-Richtung.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriResolution">
      <summary>Die UriResolution-Richtung.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteValueDictionary">
      <summary>Stellt eine Routenklasse für Selbsthosting angegebener Schlüssel-Wert-Paare dar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />-Klasse.</summary>
      <param name="dictionary">Das Wörterbuch.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />-Klasse.</summary>
      <param name="values">Der Schlüsselwert.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpVirtualPathData">
      <summary>Stellt die Daten hinsichtlich des virtuellen HTTP-Pfads dar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpVirtualPathData.#ctor(System.Web.Http.Routing.IHttpRoute,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" />-Klasse.</summary>
      <param name="route">Die Route des virtuellen Pfads.</param>
      <param name="virtualPath">Die URL, die aus der Routendefinition erstellt wurde.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.Route">
      <summary>Ruft die Route des virtuellen Pfads ab bzw. legt diese fest.</summary>
      <returns>Die Route des virtuellen Pfads.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.VirtualPath">
      <summary>Ruft die URL ab, die aus der Routendefinition erstellt wurde, oder legt diese fest.</summary>
      <returns>Die URL, die aus der Routendefinition erstellt wurde.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRoute">
      <summary>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> definiert die Schnittstelle für eine Route, die ausdrückt, wie eine eingehende <see cref="T:System.Net.Http.HttpRequestMessage" /> einem bestimmten Controller und einer Aktion zugeordnet wird. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Constraints">
      <summary> Ruft die Einschränkungen für die Routenparameter ab. </summary>
      <returns>Die Einschränkungen für die Routenparameter.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.DataTokens">
      <summary> Ruft alle zusätzlichen Datentoken ab, die nicht direkt verwendet werden, um zu bestimmen, ob eine Route einer eingehenden <see cref="T:System.Net.Http.HttpRequestMessage" /> entspricht. </summary>
      <returns>Die zusätzlichen Datentoken.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Defaults">
      <summary> Ruft die Standardwerte für Routenparameter ab, wenn sie nicht von der eingehenden <see cref="T:System.Net.Http.HttpRequestMessage" /> bereitgestellt werden. </summary>
      <returns>Die Standardwerte für Routenparameter.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary> Bestimmt, ob diese Route eine Übereinstimmung für die eingehende Anforderung ist, indem &lt;see cref="!:IRouteData" /&gt; für die Route nachgeschlagen wird. </summary>
      <returns>&lt;see cref="!:RouteData" /&gt; für eine Route, wenn eine Übereinstimmung vorliegt, andernfalls null.</returns>
      <param name="virtualPathRoot">Der virtuelle Pfadstamm.</param>
      <param name="request">Die Anforderung.</param>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ruft Daten eines virtuellen Pfads auf Grundlage der angegebenen Route und der angegebenen Werte ab.</summary>
      <returns>Die Daten des virtuellen Pfads.</returns>
      <param name="request">Die Anforderungsnachricht.</param>
      <param name="values">Die Werte.</param>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Handler">
      <summary>Ruft den Nachrichtenhandler ab, der der Empfänger der Anforderung ist.</summary>
      <returns>Der Nachrichtenhandler.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.RouteTemplate">
      <summary> Ruft die Routenvorlage ab, die das URI-Muster beschreibt, mit dem abgeglichen wird.  </summary>
      <returns>Die Routenvorlage.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteConstraint">
      <summary>Stellt eine Basisklassen-Routeneinschränkung dar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Ermittelt, ob diese Instanz einer angegebenen Route entspricht.</summary>
      <returns>true, wenn diese Instanz mit einer angegebenen Route identisch ist, andernfalls false.</returns>
      <param name="request">Die Anforderung.</param>
      <param name="route">Die zu vergleichende Route.</param>
      <param name="parameterName">Der Name des Parameters.</param>
      <param name="values">Eine Liste der Parameterwerte.</param>
      <param name="routeDirection">Die Routenrichtung.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteData">
      <summary>Stellt Informationen zu einer Route zur Verfügung.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Route">
      <summary>Ruft das Objekt ab, das die Route darstellt.</summary>
      <returns>Das Objekt, die die Route darstellt.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Values">
      <summary>Ruft eine Auflistung von URL-Parameterwerten und Standardwerten für die Route ab.</summary>
      <returns>Die Werte, die aus der URL und aus Standardwerten analysiert werden.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteInfoProvider">
      <summary> Provides information for defining a route. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Name"></member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Order"></member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Template"></member>
    <member name="T:System.Web.Http.Routing.IHttpVirtualPathData">
      <summary>Definiert die Eigenschaften für die HTTP-Route.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.Route">
      <summary>Ruft die HTTP-Route ab.</summary>
      <returns>Die HTTP-Route.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.VirtualPath">
      <summary>Ruft den URI ab, der den virtuellen Pfad der aktuellen HTTP-Route darstellt.</summary>
      <returns>Der URI, der den virtuellen Pfad der aktuellen HTTP-Route darstellt.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IInlineConstraintResolver">
      <summary> Defines an abstraction for resolving inline constraints as instances of <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary> Resolves the inline constraint. </summary>
      <returns>The <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> the inline constraint was resolved to.</returns>
      <param name="inlineConstraint">The inline constraint to resolve.</param>
    </member>
    <member name="T:System.Web.Http.Routing.UrlHelper">
      <summary>Stellt eine Factory zum Erstellen von URLs dar. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor">
      <summary> Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.UrlHelper" />-Klasse. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Routing.UrlHelper" />-Klasse.</summary>
      <param name="request">Der HTTP-Anforderung für diese Instanz.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Content(System.String)"></member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt einen Link für die angegebene Route zurück.</summary>
      <returns>Ein Link für die angegebene Route.</returns>
      <param name="routeName">Der Name der Route.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Object)">
      <summary>Gibt einen Link für die angegebene Route zurück.</summary>
      <returns>Ein Link für die angegebene Route.</returns>
      <param name="routeName">Der Name der Route.</param>
      <param name="routeValues">Ein Routenwert.</param>
    </member>
    <member name="P:System.Web.Http.Routing.UrlHelper.Request">
      <summary>Ruft die HTTP-Anforderungsnachricht der aktuellen Url-Hilfsprogramminstanz ab bzw. legt diese fest.</summary>
      <returns>Die HTTP-Anforderungsnachricht der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt die Route für den <see cref="T:System.Web.Http.Routing.UrlHelper" /> zurück.</summary>
      <returns>Die Route für den <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">Der Name der Route.</param>
      <param name="routeValues">Eine Liste mit Routenwerten.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Object)">
      <summary>Gibt die Route für den <see cref="T:System.Web.Http.Routing.UrlHelper" /> zurück.</summary>
      <returns>Die Route für den <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">Der Name der Route.</param>
      <param name="routeValues">Die Routenwerte.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.AlphaRouteConstraint">
      <summary>Constrains a route parameter to contain only lowercase or uppercase letters A through Z in the English alphabet.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.AlphaRouteConstraint" /> class.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.BoolRouteConstraint">
      <summary>Constrains a route parameter to represent only Boolean values.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.BoolRouteConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.BoolRouteConstraint" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.BoolRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.CompoundRouteConstraint">
      <summary>Constrains a route by several child constraints.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Http.Routing.IHttpRouteConstraint})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.CompoundRouteConstraint" /> class.</summary>
      <param name="constraints">The child constraints that must match for this constraint to match.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>Gets the child constraints that must match for this constraint to match.</summary>
      <returns>The child constraints that must match for this constraint to match.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint">
      <summary>Constrains a route parameter to represent only <see cref="T:System.DateTime" /> values.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route of direction.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DecimalRouteConstraint">
      <summary>Constrains a route parameter to represent only decimal values.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.DecimalRouteConstraint" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DecimalRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DoubleRouteConstraint">
      <summary>Constrains a route parameter to represent only 64-bit floating-point values.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DoubleRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.DoubleRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.FloatRouteConstraint">
      <summary>Constrains a route parameter to represent only 32-bit floating-point values.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.FloatRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.GuidRouteConstraint">
      <summary>Constrains a route parameter to represent only <see cref="T:System.Guid" /> values.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.GuidRouteConstraint" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.GuidRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.IntRouteConstraint">
      <summary>Constrains a route parameter to represent only 32-bit integer values.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.IntRouteConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.IntRouteConstraint" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.IntRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.LengthRouteConstraint">
      <summary>Constrains a route parameter to be a string of a given length or within a given range of lengths.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.LengthRouteConstraint" /> class that constrains a route parameter to be a string of a given length.</summary>
      <param name="minLength">The minimum length of the route parameter.</param>
      <param name="maxLength">The maximum length of the route parameter.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>Gets the length of the route parameter, if one is set.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>Gets the maximum length of the route parameter, if one is set.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>Gets the minimum length of the route parameter, if one is set.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.LongRouteConstraint">
      <summary>Constrains a route parameter to represent only 64-bit integer values.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LongRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.LongRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>Constrains a route parameter to be a string with a maximum length.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint" /> class.</summary>
      <param name="maxLength">The maximum length.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>Gets the maximum length of the route parameter.</summary>
      <returns>The maximum length of the route parameter.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MaxRouteConstraint">
      <summary>Constrains a route parameter to be an integer with a maximum value.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)"></member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.Http.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>Gets the maximum value of the route parameter.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint">
      <summary>Constrains a route parameter to be a string with a maximum length.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint" /> class.</summary>
      <param name="minLength">The minimum length.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>Gets the minimum length of the route parameter.</summary>
      <returns>The minimum length of the route parameter.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MinRouteConstraint">
      <summary>Constrains a route parameter to be a long with a minimum value.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.MinRouteConstraint" /> class.</summary>
      <param name="min">The minimum value of the route parameter.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MinRouteConstraint.Min">
      <summary>Gets the minimum value of the route parameter.</summary>
      <returns>The minimum value of the route parameter.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.OptionalRouteConstraint">
      <summary>Constrains a route by an inner constraint that doesn't fail when an optional parameter is set to its default value.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Http.Routing.IHttpRouteConstraint)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.OptionalRouteConstraint" /> class.</summary>
      <param name="innerConstraint">The inner constraint to match if the parameter is not an optional parameter without a value</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>Gets the inner constraint to match if the parameter is not an optional parameter without a value.</summary>
      <returns>The inner constraint to match if the parameter is not an optional parameter without a value.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.RangeRouteConstraint">
      <summary>Constraints a route parameter to be an integer within a given range of values.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.RangeRouteConstraint" /> class.</summary>
      <param name="min">The minimum value.</param>
      <param name="max">The maximum value.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>Gets the maximum value of the route parameter.</summary>
      <returns>The maximum value of the route parameter.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>Gets the minimum value of the route parameter.</summary>
      <returns>The minimum value of the route parameter.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.RegexRouteConstraint">
      <summary>Constrains a route parameter to match a regular expression.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Routing.Constraints.RegexRouteConstraint" /> class.</summary>
      <param name="pattern">The pattern.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RegexRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determines whether this instance equals a specified route.</summary>
      <returns>true if this instance equals a specified route; otherwise, false.</returns>
      <param name="request">The request.</param>
      <param name="route">The route to compare.</param>
      <param name="parameterName">The name of the parameter.</param>
      <param name="values">A list of parameter values.</param>
      <param name="routeDirection">The route direction.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>Gets the regular expression pattern to match.</summary>
      <returns>The regular expression pattern to match.</returns>
    </member>
    <member name="T:System.Web.Http.Services.Decorator">
      <summary> Provides a method for retrieving the innermost object of an object that might be wrapped by an &lt;see cref="T:System.Web.Http.Services.IDecorator`1" /&gt;. </summary>
    </member>
    <member name="M:System.Web.Http.Services.Decorator.GetInner``1(``0)">
      <summary> Gets the innermost object which does not implement &lt;see cref="T:System.Web.Http.Services.IDecorator`1" /&gt;. </summary>
      <param name="outer">Object which needs to be unwrapped.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.Services.DefaultServices">
      <summary>Stellt einen Container für Dienstinstanzen dar, der von <see cref="T:System.Web.Http.HttpConfiguration" /> verwendet wird.Beachten Sie, dass dieser Container nur bekannte Typen unterstützt. Außerdem lösen Methoden zum Abrufen oder Festlegen beliebiger Diensttypen bei ihrem Aufruf <see cref="T:System.ArgumentException" /> aus.Verwenden Sie zum Erstellen beliebiger Diensttypen stattdessen <see cref="T:System.Web.Http.Dependencies.IDependencyResolver" />.Die folgenden Typen werden für diesen Container unterstützt:        <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /><see cref="T:System.Web.Http.Description.IApiExplorer" /><see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /><see cref="T:System.Web.Http.Validation.IBodyModelValidator" /><see cref="T:System.Net.Http.Formatting.IContentNegotiator" /><see cref="T:System.Web.Http.Description.IDocumentationProvider" /><see cref="T:System.Web.Http.Filters.IFilterProvider" /><see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" /><see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /><see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /><see cref="T:System.Web.Http.Tracing.ITraceManager" /><see cref="T:System.Web.Http.Tracing.ITraceWriter" /><see cref="T:System.Web.Http.Query.IStructuredQueryBuilder" /><see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /><see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /><see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /><see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />. Das Übergeben eines beliebigen Typs, der hier nicht aufgeführt ist, an eine beliebige Methode für diese Schnittstelle bewirkt, dass eine Ausnahme <see cref="T:System.ArgumentException" /> ausgelöst wird.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Services.DefaultServices" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Services.DefaultServices" />-Klasse mit einem angegebenen <see cref="T:System.Web.Http.HttpConfiguration" />-Objekt.</summary>
      <param name="configuration">Das <see cref="T:System.Web.Http.HttpConfiguration" />-Objekt.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ClearSingle(System.Type)">
      <summary>Entfernt einen Diensttyp mit einer Instanz aus den Standarddiensten.</summary>
      <param name="serviceType">Der Typ des Diensts.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetService(System.Type)">
      <summary>Ruft einen Dienst des angegebenen Typs ab.</summary>
      <returns>Die erste Instanz de Diensts oder null, wenn der Dienst nicht gefunden wurde.</returns>
      <param name="serviceType">Der Typ des Diensts.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServiceInstances(System.Type)">
      <summary>Ruft die Liste der Dienstobjekte für einen angegebenen Diensttyp ab und überprüft den Diensttyp.</summary>
      <returns>Liste der Dienstobjekte für den angegebenen Typ.</returns>
      <param name="serviceType">Der Diensttyp.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServices(System.Type)">
      <summary>Ruft die Liste der Dienstobjekte für einen angegebenen Diensttyp ab.</summary>
      <returns>Liste der Dienstobjekte des angegebenen Typs oder eine leere Liste, wenn der Dienst nicht gefunden wurde.</returns>
      <param name="serviceType">Der Typ des Diensts.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.IsSingleService(System.Type)">
      <summary>Fragt ab, ob ein Dienst eine Instanz verwendet.</summary>
      <returns>true, wenn der Diensttyp höchstens eine Instanz besitzt, oder false, wenn der Diensttyp mehrere Instanzen unterstützt.</returns>
      <param name="serviceType">Der Diensttyp.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Ersetzt ein Dienstobjekt mit einer Instanz.</summary>
      <param name="serviceType">Der Diensttyp.</param>
      <param name="service">Das Dienstobjekt, das die vorherige Instanz ersetzt.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ResetCache(System.Type)">
      <summary>Entfernt die zwischengespeicherten Werte für einen einzelnen Diensttyp.</summary>
      <param name="serviceType">Der Diensttyp.</param>
    </member>
    <member name="T:System.Web.Http.Services.IDecorator`1">
      <summary> Defines a decorator that exposes the inner decorated object. </summary>
      <typeparam name="T">Dieser Typparameter ist kovariant. Das heißt, es kann entweder der angegebene Typ oder ein abgeleiteterer Typ verwendet werden. Weitere Informationen zu Kovarianz und Kontravarianz finden Sie unter .</typeparam>
    </member>
    <member name="P:System.Web.Http.Services.IDecorator`1.Inner">
      <summary> Gets the inner object. </summary>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceManager">
      <summary>Stellt eine Leistungsablaufverfolgungs-Klasse zum Protokollieren des Aufrufs und Abschlusses der Methode und ihrer Dauer dar.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceManager.Initialize(System.Web.Http.HttpConfiguration)">
      <summary>Initialisiert die <see cref="T:System.Web.Http.Tracing.ITraceManager" />-Klasse mit einer angegebenen Konfiguration.</summary>
      <param name="configuration">Die Konfiguration.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriter">
      <summary>Stellt den Ablaufverfolgungswriter dar.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriter.Trace(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Ruft die angegebene traceAction nur auf, um das Festlegen von Werten in einem neuen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> zu ermöglichen, wenn die Ablaufverfolgung für die angegebene Kategorie (category) und Stufe (level) zugelassen ist. </summary>
      <param name="request">Die aktuelle <see cref="T:System.Net.Http.HttpRequestMessage" />.Kann null sein, aber dadurch wird die nachfolgende Ablaufverfolgungsanalyse an der Korrelierung der Ablaufverfolgung mit einer bestimmten Anforderung gehindert.</param>
      <param name="category">Die logische Kategorie für die Ablaufverfolgung.Benutzer können eigene definieren.</param>
      <param name="level">Die <see cref="T:System.Web.Http.Tracing.TraceLevel" />, auf der diese Ablaufverfolgung geschrieben werden soll.</param>
      <param name="traceAction">Die aufzurufende Aktion, wenn die Ablaufverfolgung aktiviert ist.Der Aufrufer soll die Felder des angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> in dieser Aktion ausfüllen.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriterExtensions">
      <summary>Stellt Erweiterungsmethoden für <see cref="T:System.Web.Http.Tracing.ITraceWriter" /> zur Verfügung. </summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Stellt eine Sammlung von Methoden und Eigenschaften zur Verfügung, die Sie beim Debuggen Ihres Codes mit dem angegebenen Writer, der Anforderung, der Kategorie und der Ausnahme unterstützen.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Der Fehler ist während der Ausführung aufgetreten.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Stellt eine Sammlung von Methoden und Eigenschaften zur Verfügung, die Sie beim Debuggen Ihres Codes mit dem angegebenen Writer, der Anforderung, der Kategorie, der Ausnahme, dem Nachrichtenformat und dem Argument unterstützen.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Der Fehler ist während der Ausführung aufgetreten.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Stellt eine Sammlung von Methoden und Eigenschaften zur Verfügung, die Sie beim Debuggen Ihres Codes mit dem angegebenen Writer, der Anforderung, der Kategorie, der Ausnahme, dem Nachrichtenformat und dem Argument unterstützen.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Zeigt eine Fehlermeldung in der Liste mit dem angegebenen Writer, der Anforderung, der Kategorie und der Ausnahme an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Der Fehler ist während der Ausführung aufgetreten.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Zeigt eine Fehlermeldung in der Liste mit dem angegebenen Writer, der Anforderung, der Kategorie, der Ausnahme, dem Nachrichtenformat und dem Argument an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Die Ausnahme.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Argument in der Nachricht.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Zeigt eine Fehlermeldung in der Liste mit dem angegebenen Writer, der Anforderung, der Kategorie, dem Nachrichtenformat und dem Argument an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Argument in der Nachricht.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Zeigt eine Fehlermeldung in der <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" />-Klasse mit dem angegebenen Writer, der Anforderung, der Kategorie und der Ausnahme an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Die Ausnahme, die während der Ausführung angezeigt wird.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Zeigt eine Fehlermeldung in der <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" />-Klasse mit dem angegebenen Writer, der Anforderung, der Kategorie und der Ausnahme, dem Nachrichtenformat und dem Argument an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Die Ausnahme.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Zeigt eine Fehlermeldung in der <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" />-Klasse mit dem angegebenen Writer, der Anforderung, der Kategorie und dem Nachrichtenformat und dem Argument an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Zeigt die Details in den <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" /> an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Der Fehler ist während der Ausführung aufgetreten.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Zeigt die Details in den <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" /> an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Der Fehler ist während der Ausführung aufgetreten.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Zeigt die Details in den <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" /> an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception)">
      <summary>Gibt die Ablaufverfolgungslistener in der Listenerauflistung an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="level">Die Ablaufverfolgungsstufe.</param>
      <param name="exception">Der Fehler ist während der Ausführung aufgetreten.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception,System.String,System.Object[])">
      <summary>Gibt die Ablaufverfolgungslistener in der Listenerauflistung an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="level">Die Ablaufverfolgungsstufe.</param>
      <param name="exception">Der Fehler ist während der Ausführung aufgetreten.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.Object[])">
      <summary>Gibt die Ablaufverfolgungslistener in der Listenerauflistung an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="level">Die <see cref="T:System.Web.Http.Tracing.TraceLevel" /> der Ablaufverfolgung.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEnd(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary>Verfolgt beides, sowohl eine Begin- als auch eine End-Ablaufverfolgung, die einen angegebenen Vorgang einschließen.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="level">Die <see cref="T:System.Web.Http.Tracing.TraceLevel" /> der Ablaufverfolgung.</param>
      <param name="operatorName">Der Name des Objekts, von dem der Vorgang ausgeführt wird.Sie kann "null" sein.</param>
      <param name="operationName">Der Name des ausgeführten Vorgangs.Sie kann "null" sein.</param>
      <param name="beginTrace">Die <see cref="T:System.Action" />, die vor der Ausführung des Vorgangs aufgerufen werden soll und es ermöglicht, den angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> auszufüllen.Sie kann "null" sein.</param>
      <param name="execute">Eine &lt;siehe cref="T:System.Func`1" /&gt;, die den <see cref="T:System.Threading.Tasks.Task" /> zurückgibt, der den Vorgang ausführt.</param>
      <param name="endTrace">Die <see cref="T:System.Action" />, die nach der erfolgreichen Ausführung des Vorgangs aufgerufen werden soll und es ermöglicht, den angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> auszufüllen.Sie kann "null" sein.</param>
      <param name="errorTrace">Die <see cref="T:System.Action" />, die aufgerufen werden soll, wenn während der Ausführung des Vorgangs ein Fehler aufgetreten ist, und die es ermöglicht, den angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> auszufüllen.Sie kann "null" sein.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync``1(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task{``0}},System.Action{System.Web.Http.Tracing.TraceRecord,``0},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Verfolgt beides, sowohl eine Begin- als auch eine End-Ablaufverfolgung, die einen angegebenen Vorgang einschließen. </summary>
      <returns>Der vom Vorgang zurückgegebene <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="level">Die <see cref="T:System.Web.Http.Tracing.TraceLevel" /> der Ablaufverfolgung.</param>
      <param name="operatorName">Der Name des Objekts, von dem der Vorgang ausgeführt wird.Sie kann "null" sein.</param>
      <param name="operationName">Der Name des ausgeführten Vorgangs.Sie kann "null" sein.</param>
      <param name="beginTrace">Die <see cref="T:System.Action" />, die vor der Ausführung des Vorgangs aufgerufen werden soll und es ermöglicht, den angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> auszufüllen.Sie kann "null" sein.</param>
      <param name="execute">Eine &lt;siehe cref="T:System.Func`1" /&gt;, die den <see cref="T:System.Threading.Tasks.Task" /> zurückgibt, der den Vorgang ausführt.</param>
      <param name="endTrace">Die <see cref="T:System.Action" />, die nach der erfolgreichen Ausführung des Vorgangs aufgerufen werden soll und es ermöglicht, den angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> auszufüllen.Das Ergebnis der abgeschlossenen Aufgabe wird ebenfalls an diese Aktion übergeben.Diese Aktion kann null sein.</param>
      <param name="errorTrace">Die <see cref="T:System.Action" />, die aufgerufen werden soll, wenn während der Ausführung des Vorgangs ein Fehler aufgetreten ist, und die es ermöglicht, den angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> auszufüllen.Sie kann "null" sein.</param>
      <typeparam name="TResult">Der von <see cref="T:System.Threading.Tasks.Task" /> generierte Ergebnistyp.</typeparam>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task},System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Verfolgt beides, sowohl eine Begin- als auch eine End-Ablaufverfolgung, die einen angegebenen Vorgang einschließen. </summary>
      <returns>Der vom Vorgang zurückgegebene <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="level">Die <see cref="T:System.Web.Http.Tracing.TraceLevel" /> der Ablaufverfolgung.</param>
      <param name="operatorName">Der Name des Objekts, von dem der Vorgang ausgeführt wird.Sie kann "null" sein.</param>
      <param name="operationName">Der Name des ausgeführten Vorgangs.Sie kann "null" sein.</param>
      <param name="beginTrace">Die <see cref="T:System.Action" />, die vor der Ausführung des Vorgangs aufgerufen werden soll und es ermöglicht, den angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> auszufüllen.Sie kann "null" sein.</param>
      <param name="execute">Eine &lt;siehe cref="T:System.Func`1" /&gt;, die den <see cref="T:System.Threading.Tasks.Task" /> zurückgibt, der den Vorgang ausführt.</param>
      <param name="endTrace">Die <see cref="T:System.Action" />, die nach der erfolgreichen Ausführung des Vorgangs aufgerufen werden soll und es ermöglicht, den angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> auszufüllen.Sie kann "null" sein.</param>
      <param name="errorTrace">Die <see cref="T:System.Action" />, die aufgerufen werden soll, wenn während der Ausführung des Vorgangs ein Fehler aufgetreten ist, und die es ermöglicht, den angegebenen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> auszufüllen.Sie kann "null" sein.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Gibt die Warnstufe der Ausführung an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Der Fehler ist während der Ausführung aufgetreten.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Gibt die Warnstufe der Ausführung an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="exception">Der Fehler ist während der Ausführung aufgetreten.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Gibt die Warnstufe der Ausführung an.</summary>
      <param name="traceWriter">Das <see cref="T:System.Web.Http.Tracing.ITraceWriter" />-Objekt.</param>
      <param name="request">Die <see cref="T:System.Net.Http.HttpRequestMessage" />, der die Anforderung zugeordnet werden soll.Sie kann "null" sein.</param>
      <param name="category">Die logische Kategorie der Ablaufverfolgung.</param>
      <param name="messageFormat">Das Format der Nachricht.</param>
      <param name="messageArguments">Das Nachrichtenargument.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceCategories">
      <summary>Gibt eine Enumeration von Ablaufverfolgungskategorien an.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ActionCategory">
      <summary>Eine Aktionskategorie.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ControllersCategory">
      <summary>Die Controllerkategorie.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FiltersCategory">
      <summary>Die Filterkategorie.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FormattingCategory">
      <summary>Die Formatierungskategorie.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.MessageHandlersCategory">
      <summary>Die Nachrichtenhandlerkategorie.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ModelBindingCategory">
      <summary>Die Modellbindungskategorie.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RequestCategory">
      <summary>Die Anforderungskategorie.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RoutingCategory">
      <summary>Die Routingkategorie.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceKind">
      <summary>Gibt die Art des Ablaufverfolgungsvorgangs an.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Begin">
      <summary>Ablaufverfolgung, die den Anfang eines Vorgangs kennzeichnet.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.End">
      <summary>Ablaufverfolgung, die das Ende eines Vorgangs kennzeichnet.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Trace">
      <summary>Einzelne Ablaufverfolgung, nicht Teil eines Begin/End-Ablaufverfolgungspaars.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceLevel">
      <summary>Gibt eine Enumeration von Ablaufverfolgungsstufen an.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Debug">
      <summary>Die Ablaufverfolgungsstufe für Debugablaufverfolgungen.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Error">
      <summary>Die Ablaufverfolgungsstufe für Fehlerablaufverfolgungen.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Fatal">
      <summary>Die Ablaufverfolgungsstufe für schwerwiegende Fehlerablaufverfolgungen.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Info">
      <summary>Die Ablaufverfolgungsstufe für Informationsablaufverfolgungen.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Off">
      <summary>Ablaufverfolgung ist deaktiviert.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Warn">
      <summary>Die Ablaufverfolgungsstufe für Warnungsablaufverfolgungen.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceRecord">
      <summary>Stellt einen Ablaufverfolgungs-Datensatz dar.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.TraceRecord.#ctor(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Tracing.TraceRecord" />-Klasse.</summary>
      <param name="request">Die Nachrichtenanforderung.</param>
      <param name="category">Die Ablaufverfolgungskategorie.</param>
      <param name="level">Die Ablaufverfolgungsstufe.</param>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Category">
      <summary>Ruft die Ablaufverfolgungskategorie ab oder legt diese fest.</summary>
      <returns>Die Ablaufverfolgungskategorie.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Exception">
      <summary>Ruft die Ausnahme ab oder legt diese fest.</summary>
      <returns>Die Ausnahme.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Kind">
      <summary>Ruft die Art der Ablaufverfolgung ab oder legt diese fest.</summary>
      <returns>Die Art der Ablaufverfolgung.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Level">
      <summary>Ruft die Ablaufverfolgungsstufe ab oder legt diese fest.</summary>
      <returns>Die Ablaufverfolgungsstufe.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Message">
      <summary>Ruft die Nachricht ab bzw. legt sie fest.</summary>
      <returns>Die Nachricht.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operation">
      <summary>Ruft den logischen Namen des Vorgangs ab, der ausgeführt wird, oder legt ihn fest.</summary>
      <returns>Der logische Name des Vorgangs, der ausgeführt wird.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operator">
      <summary>Ruft den logischen Namen des Objekts ab, von dem der Vorgang ausgeführt wird, oder legt diesen fest.</summary>
      <returns>Der logische Name des Objekts, von dem der Vorgang ausgeführt wird.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Properties">
      <summary>Ruft die optionalen, benutzerdefinierten Eigenschaften ab.</summary>
      <returns>Die optionalen, benutzerdefinierten Eigenschaften.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Request">
      <summary>Ruft die <see cref="T:System.Net.Http.HttpRequestMessage" /> aus dem Datensatz ab.</summary>
      <returns>Die <see cref="T:System.Net.Http.HttpRequestMessage" /> aus dem Datensatz.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.RequestId">
      <summary>Ruft die Korrelations-ID aus der <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" /> ab.</summary>
      <returns>Die Korrelations-ID aus der <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" />.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Status">
      <summary>Ruft den <see cref="T:System.Net.HttpStatusCode" /> ab, der der <see cref="T:System.Net.Http.HttpResponseMessage" /> zugeordnet ist, oder legt diesen fest.</summary>
      <returns>Das <see cref="T:System.Net.HttpStatusCode" />-Objekt, das der <see cref="T:System.Net.Http.HttpResponseMessage" /> zugeordnet ist.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Timestamp">
      <summary>Ruft <see cref="T:System.DateTime" /> dieser Ablaufverfolgung ab (mittels <see cref="P:System.DateTime.UtcNow" />).</summary>
      <returns>Ruft <see cref="T:System.DateTime" /> dieser Ablaufverfolgung ab (mittels <see cref="P:System.DateTime.UtcNow" />).</returns>
    </member>
    <member name="T:System.Web.Http.Validation.DefaultBodyModelValidator">
      <summary>Überprüft kursiv ein Objekt.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.DefaultBodyModelValidator" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.ShouldValidateType(System.Type)">
      <summary>Bestimmt, ob Instanzen eines bestimmten Typs überprüft werden sollen.</summary>
      <returns>True, wenn der Typ überprüft werden soll, andernfalls False.</returns>
      <param name="type">Der zu überprüfende Typ.</param>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary>Bestimmt, ob das Modell gültig ist und fügt jegliche Überprüfungsfehler dem ModelStateDictionary des actionContext hinzu.</summary>
      <returns>True, wenn das Modell gültig ist, andernfalls False.</returns>
      <param name="model">Das zu überprüfende Modell.</param>
      <param name="type">Der für die Validierung zu verwendende Typ.</param>
      <param name="metadataProvider">Der Metadatenanbieter, der für die Bereitstellung der Modellmetadaten verwendet wird.</param>
      <param name="actionContext">Der HttpActionContext, in dem das Modell validiert wird.</param>
      <param name="keyPrefix">Die Zeichenfolge, die dem Schlüssel bei allen Validierungsfehlern angefügt wird.</param>
    </member>
    <member name="T:System.Web.Http.Validation.IBodyModelValidator">
      <summary>Stellt eine Schnittstelle für die Validierung der Modelle dar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.IBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary> Bestimmt, ob das Modell (model) gültig ist und fügt jegliche Validierungsfehler dem <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> des actionContext hinzu.</summary>
      <returns>True, wenn das Modell (model) gültig ist, andernfalls False.</returns>
      <param name="model">Das zu validierende Modell.</param>
      <param name="type">Der für die Validierung zu verwendende <see cref="T:System.Type" />.</param>
      <param name="metadataProvider">Der <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />, der für die Bereitstellung der Modellmetadaten verwendet wird.</param>
      <param name="actionContext">Der <see cref="T:System.Web.Http.Controllers.HttpActionContext" />, in dem das Modell validiert wird.</param>
      <param name="keyPrefix">Die <see cref="T:System.String" />, die dem Schlüssel bei allen Validierungsfehlern angefügt wird.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelStateFormatterLogger">
      <summary>Dieser <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> protokolliert Formatiererfehler im bereitgestellten <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.ModelStateFormatterLogger" />-Klasse.</summary>
      <param name="modelState">Die Modellstatus.</param>
      <param name="prefix">Das Präfix.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.Exception)">
      <summary>Protokolliert den angegebenen Modellfehler.</summary>
      <param name="errorPath">Der Fehlerpfad.</param>
      <param name="exception">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.String)">
      <summary>Protokolliert den angegebenen Modellfehler.</summary>
      <param name="errorPath">Der Fehlerpfad.</param>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validated" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatedEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.ModelValidatedEventArgs" />-Klasse.</summary>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="parentNode">Der übergeordnete Knoten.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ActionContext">
      <summary>Ruft den Kontext für eine Aktion ab bzw. legt diesen fest.</summary>
      <returns>Der Kontext für eine Aktion.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ParentNode">
      <summary>Ruft das übergeordnete Element dieses Knotens ab oder legt es fest.</summary>
      <returns>Das übergeordnete Element dieses Knotens.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatingEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validating" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatingEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.ModelValidatingEventArgs" />-Klasse.</summary>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="parentNode">Der übergeordnete Knoten.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ActionContext">
      <summary>Ruft den Kontext für eine Aktion ab bzw. legt diesen fest.</summary>
      <returns>Der Kontext für eine Aktion.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ParentNode">
      <summary>Ruft das übergeordnete Element dieses Knotens ab oder legt es fest.</summary>
      <returns>Das übergeordnete Element dieses Knotens.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationNode">
      <summary>Stellt einen Container für Modellvalidierungsinformationen bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.ModelValidationNode" />-Klasse unter Verwendung der Modellmetadaten und des Zustandsschlüssels.</summary>
      <param name="modelMetadata">Die Modellmetadaten.</param>
      <param name="modelStateKey">Der Modellzustandsschlüssel.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidationNode})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.ModelValidationNode" />-Klasse unter Verwendung der Modellmetadaten, des Modellzustandsschlüssels und der untergeordneten Modellvalidierungsknoten.</summary>
      <param name="modelMetadata">Die Modellmetadaten.</param>
      <param name="modelStateKey">Der Modellzustandsschlüssel.</param>
      <param name="childNodes">Die untergeordneten Modellknoten.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ChildNodes">
      <summary>Ruft die untergeordneten Knoten ab oder legt diese fest.</summary>
      <returns>Die untergeordneten Knoten.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.CombineWith(System.Web.Http.Validation.ModelValidationNode)">
      <summary>Kombiniert die aktuelle <see cref="T:System.Web.Http.Validation.ModelValidationNode" />-Instanz mit einer angegebenen <see cref="T:System.Web.Http.Validation.ModelValidationNode" />-Instanz.</summary>
      <param name="otherNode">Der Modellvalidierungsknoten, der mit der aktuellen Instanz kombiniert werden soll.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelMetadata">
      <summary>Ruft die Modellmetadaten ab oder legt diese fest.</summary>
      <returns>Die Modellmetadaten.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelStateKey">
      <summary>Ruft den Modellzustandsschlüssel ab bzw. legt ihn fest.</summary>
      <returns>Der Modellzustandsschlüssel.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.SuppressValidation">
      <summary>Ruft einen Wert ab, der angibt, ob die Validierung unterdrückt werden soll, bzw. legt diesen fest.</summary>
      <returns>True, wenn die Validierung unterdrückt werden soll, andernfalls False.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Überprüft das Modell unter Verwendung des angegebenen Ausführungskontexts.</summary>
      <param name="actionContext">Der Aktionskontext.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Überprüft das Modell unter Verwendung des angegebenen Ausführungskontexts und übergeordneten Knotens.</summary>
      <param name="actionContext">Der Aktionskontext.</param>
      <param name="parentNode">Der übergeordnete Knoten.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ValidateAllProperties">
      <summary>Ruft einen Wert ab, der angibt, ob alle Eigenschaften des Modells validiert werden sollen, bzw. legt diesen fest.</summary>
      <returns>True, wenn alle Eigenschaften des Modells validiert werden sollen, oder False, wenn die Validierung übersprungen werden soll.</returns>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validated">
      <summary>Tritt auf, wenn das Modell validiert wurde.</summary>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validating">
      <summary>Tritt auf, wenn das Modell validiert wird.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector">
      <summary>Stellt die Auswahl erforderlicher Member dar, indem auf das Vorhandensein von erforderlichen ModelValidators überprüft wird, die dem Member zugeordnet sind.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector" />-Klasse.</summary>
      <param name="metadataProvider">Der Metadatenanbieter.</param>
      <param name="validatorProviders">Die Validierungssteuerelement-Anbieter.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.IsRequiredMember(System.Reflection.MemberInfo)">
      <summary>Gibt an, ob der Member für die Validierung erforderlich ist.</summary>
      <returns>True, wenn der Member für die Validierung erforderlich ist, andernfalls False.</returns>
      <param name="member">Der Member.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationResult">
      <summary>Stellt einen Container für ein Validierungsergebnis bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.ModelValidationResult" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.MemberName">
      <summary>Ruft den Namen des Members ab oder legt diesen fest.</summary>
      <returns>Der Name des Members.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.Message">
      <summary>Ruft die Validierungsergebnismeldung ab oder legt sie fest.</summary>
      <returns>Die Meldung des Validierungsergebnisses.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidator">
      <summary>Stellt eine Basisklasse zum Implementieren von Validierungslogik bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.ModelValidator" />-Klasse.</summary>
      <param name="validatorProviders">Die Validierungssteuerelement-Anbieter.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.GetModelValidator(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Gibt ein zusammengesetztes Modellvalidierungssteuerelement für das Modell zurück.</summary>
      <returns>Ein zusammengesetztes Modellvalidierungssteuerelement für das Modell.</returns>
      <param name="validatorProviders">Eine Enumeration von Validierungssteuerelement-Anbietern.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.IsRequired">
      <summary>Ruft einen Wert ab, der angibt, ob eine Modelleigenschaft erforderlich ist.</summary>
      <returns>True, wenn die Modelleigenschaft erforderlich ist, andernfalls False.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Überprüft ein angegebenes Objekt.</summary>
      <returns>Eine Liste der Validierungsergebnisse.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="container">Der Container.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.ValidatorProviders">
      <summary>Ruft eine Enumeration von Validierungssteuerelementanbietern ab oder legt diese fest.</summary>
      <returns>Eine Enumeration von Validierungssteuerelement-Anbietern.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatorProvider">
      <summary>Stellt eine Liste der Validierungssteuerelemente für ein Modell bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Ruft eine Liste der Validierungssteuerelemente ab, die diesem <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> zugeordnet sind.</summary>
      <returns>Die Liste der Validierungssteuerelemente.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="validatorProviders">Die Validierungssteuerelement-Anbieter.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider">
      <summary>Stellt eine abstrakte Klasse für Klassen bereit, die einen Validierungsanbieter implementieren.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Ruft einen Typdeskriptor für den angegebenen Typ ab.</summary>
      <returns>Ein Typdeskriptor für den angegebenen Typ.</returns>
      <param name="type">Der Typ des Validierungsanbieters.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Ruft die Validierungssteuerelemente für das Modell anhand der Metadaten und des Validierungssteuerelement-Anbieters ab.</summary>
      <returns>Die Validierungssteuerelemente für das Modell.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="validatorProviders">Eine Enumeration von Validierungssteuerelement-Anbietern.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ruft die Validierungssteuerelemente für das Modell anhand der Metadaten, des Validierungssteuerelement-Anbieters und einer Liste von Attributen ab.</summary>
      <returns>Die Validierungssteuerelemente für das Modell.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="validatorProviders">Eine Enumeration von Validierungssteuerelement-Anbietern.</param>
      <param name="attributes">Die Liste der Attribute.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory">
      <summary>Stellt die Methode dar, die eine <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />-Instanz erstellt.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider">
      <summary>Stellt eine Implementierung von <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> dar, die Validierungssteuerelemente für Attribute bereitstellt, die von <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> abgeleitet werden. Stellt außerdem ein Validierungssteuerelement für Typen bereit, die <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> implementieren. Zur Unterstützung der clientseitigen Validierung können Sie entweder Adapter mithilfe der statischen Methoden in dieser Klasse registrieren, oder Sie lassen von Ihren Validierungsattributen <see cref="T:System.Web.Http.Validation.IClientValidatable" /> implementieren. Die Logik für die Unterstützung von IClientValidatable ist in <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" /> implementiert. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ruft die Validierungssteuerelemente für das Modell anhand der angegebenen Metadaten, des Validierungssteuerelement-Anbieters und der Attribute ab.</summary>
      <returns>Die Validierungssteuerelemente für das Modell.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="validatorProviders">Die Validierungssteuerelement-Anbieter.</param>
      <param name="attributes">Die Attribute.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Registriert einen Adapter, um die clientseitige Validierung bereitzustellen.</summary>
      <param name="attributeType">Der Typ des Validierungsattributs.</param>
      <param name="adapterType">Der Typ des Adapters.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Registriert eine Adapterfactory für den Validierungsanbieter.</summary>
      <param name="attributeType">Der Typ des Attributs.</param>
      <param name="factory">Die Factory, die verwendet wird, um das <see cref="T:System.Web.Http.Validation.ModelValidator" />-Objekt für das angegebene Attribut zu erstellen.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Registriert den Standardadapter.</summary>
      <param name="adapterType">Der Typ des Adapters.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Registriert die Standardadapterfactory.</summary>
      <param name="factory">Die Factory, die verwendet wird, um das <see cref="T:System.Web.Http.Validation.ModelValidator" />-Objekt für den Standardadapter zu erstellen.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Registriert den Standardadaptertyp für Objekte, die <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> implementieren. Der Adaptertyp muss von <see cref="T:System.Web.Http.Validation.ModelValidator" /> abgeleitet werden und einen öffentlichen Konstruktor enthalten, der zwei Parameter der Typen <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> und <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> akzeptiert. </summary>
      <param name="adapterType">Der Typ des Adapters.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registriert die Standardadapterfactory für Objekte, die <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> implementieren. </summary>
      <param name="factory">Die Factory.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Registriert einen Adaptertyp für den angegebenen modelType, der <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> implementieren muss. Der Adaptertyp muss von <see cref="T:System.Web.Http.Validation.ModelValidator" /> abgeleitet werden und einen öffentlichen Konstruktor enthalten, der zwei Parameter der Typen <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> und <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> akzeptiert. </summary>
      <param name="modelType">Der Modelltyp.</param>
      <param name="adapterType">Der Typ des Adapters.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registriert eine Adapterfactory für den angegebenen modelType, der <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> implementieren muss. </summary>
      <param name="modelType">Der Modelltyp.</param>
      <param name="factory">Die Factory.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Stellt eine Factory für Validierungen bereit, die auf <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> basieren.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider">
      <summary>Stellt einen Validierungssteuerelement-Anbieter für das Datenmembermodell dar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ruft die Validierungssteuerelemente für das Modell ab.</summary>
      <returns>Die Validierungssteuerelemente für das Modell.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="validatorProviders">Ein Enumerator von Validierungssteuerelement-Anbietern.</param>
      <param name="attributes">Eine Liste von Attributen.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider">
      <summary>Eine Implementierung von <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />, die Validierungssteuerelemente zur Verfügung stellt, die Ausnahmen auslösen, wenn das Modell ungültig ist.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ruft eine Liste der Validierungssteuerelemente ab, die diesem <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" /> zugeordnet sind.</summary>
      <returns>Die Liste der Validierungssteuerelemente.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="validatorProviders">Die Validierungssteuerelement-Anbieter.</param>
      <param name="attributes">Die Liste der Attribute.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider">
      <summary>Stellt den Anbieter für das erforderliche Validierungssteuerelement für das Membermodell bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.#ctor(System.Net.Http.Formatting.IRequiredMemberSelector)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider" />-Klasse.</summary>
      <param name="requiredMemberSelector">Der erforderliche Memberselektor.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Ruft das Validierungssteuerelement für das Membermodell ab.</summary>
      <returns>Das Validierungssteuerelement für das Membermodell.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="validatorProviders">Die Validierungssteuerelement-Anbieter.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator">
      <summary>Stellt ein Validierungssteuerelement für das Modell bereit.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" />-Klasse.</summary>
      <param name="validatorProviders">Die Validierungssteuerelement-Anbieter.</param>
      <param name="attribute">Das Validierungsattribut für das Modell.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Attribute">
      <summary>Ruft das Validierungsattribut für das Validierungssteuerelement des Modells ab oder legt es fest.</summary>
      <returns>Das Validierungsattribut für das Validierungssteuerelement des Modells.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.IsRequired">
      <summary>Ruft einen Wert ab, der angibt, ob Modellvalidierung erforderlich ist, oder legt diesen fest.</summary>
      <returns>True, wenn die Modellvalidierung erforderlich ist, andernfalls False.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Überprüft das Modell und gibt die Überprüfungsfehler zurück (wenn vorhanden).</summary>
      <returns>Eine Liste von Validierungsfehlermeldungen für das Modell oder eine leere Liste, wenn keine Fehler aufgetreten sind.</returns>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="container">Der Container für das Modell.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ErrorModelValidator">
      <summary>Ein <see cref="T:System.Web.Http.Validation.ModelValidator" /> zum Darstellen eines Fehlers.Dieses Validierungssteuerelement löst unabhängig vom tatsächlichen Modellwert immer eine Ausnahme aus.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.Validators.ErrorModelValidator" />-Klasse.</summary>
      <param name="validatorProviders">Die Liste der Modellvalidierungssteuerelement-Anbieter.</param>
      <param name="errorMessage">Die Fehlermeldung für die Ausnahme.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Überprüft ein angegebenes Objekt.</summary>
      <returns>Eine Liste der Validierungsergebnisse.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="container">Der Container.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator">
      <summary>Stellt den <see cref="T:System.Web.Http.Validation.ModelValidator" /> für erforderliche Member dar. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator" />-Klasse.</summary>
      <param name="validatorProviders">Die Validierungssteuerelement-Anbieter.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.IsRequired">
      <summary>Ruft einen Wert ab, der dem Serialisierungsmodul vorgibt, dass der Member bei der Validierung vorhanden sein muss, oder legt diesen fest.</summary>
      <returns>True, wenn der Member erforderlich ist, andernfalls False.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Validiert das Objekt.</summary>
      <returns>Eine Liste der Validierungsergebnisse.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="container">Der Container.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter">
      <summary>Stellt einen Objektadapter bereit, der validiert werden kann.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter" />-Klasse.</summary>
      <param name="validatorProviders">Der Überprüfungsanbieter.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Validiert das angegebene Objekt.</summary>
      <returns>Eine Liste der Validierungsergebnisse.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="container">Der Container.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IEnumerableValueProvider">
      <summary>Stellt die Basisklasse für Wertanbieter dar, deren Werte aus einer Auflistung stammen, die die <see cref="T:System.Collections.IEnumerable" />-Schnittstelle implementiert.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Ruft die Schlüssel aus dem angegebenen <paramref name="prefix" /> ab.</summary>
      <returns>Die Schlüssel aus dem angegebenen <paramref name="prefix" />.</returns>
      <param name="prefix">Das Präfix.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IValueProvider">
      <summary>Definiert die Methoden, die für einen Wertanbieter in ASP.NET MVC erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.ContainsPrefix(System.String)">
      <summary>Bestimmt, ob die Auflistung das angegebene Präfix enthält.</summary>
      <returns>True, wenn die Auflistung das angegebene Präfix enthält, andernfalls False.</returns>
      <param name="prefix">Das Präfix, nach dem gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.GetValue(System.String)">
      <summary>Ruft mit dem angegebenen Schlüssel ein Wertobjekt ab.</summary>
      <returns>Das Wertobjekt für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel für das Wertobjekt, das abgerufen werden soll.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderAttribute">
      <summary> Dieses Attribut wird verwendet, um eine benutzerdefinierte <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> anzugeben. </summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactory">Der Typ des Modellbinders.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type[])">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactories">Ein Array von Modellbindungstypen.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Ruft die Wertanbieterfactorys ab.</summary>
      <returns>Die Auflistung der Wertanbieterfactorys.</returns>
      <param name="configuration">Ein Konfigurationsobjekt.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderAttribute.ValueProviderFactoryTypes">
      <summary>Ruft die Objekttypen ab, die von der Wertanbieterfactory zurückgegeben werden.</summary>
      <returns>Eine Auflistung von Typen.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderFactory">
      <summary>Stellt eine Factory zum Erstellen von Wertanbieterobjekten dar.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Gibt ein Wertanbieterobjekt für den angegebenen Controllerkontext zurück.</summary>
      <returns>Ein Wertanbieterobjekt.</returns>
      <param name="actionContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderResult">
      <summary>Stellt das Ergebnis dar, das sich aus dem Binden eines Werts (z. B. aus einer Formularbereitstellung oder einer Abfragezeichenfolge) an eine Aktionsmethodenargument-Eigenschaft oder an das Argument selbst ergibt.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />-Klasse.</summary>
      <param name="rawValue">Der Rohwert.</param>
      <param name="attemptedValue">Der Versuchswert.</param>
      <param name="culture">Die Kultur.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.AttemptedValue">
      <summary>Ruft den Rohwert ab (bzw. legt diesen fest), der für die Anzeige in eine Zeichenfolge konvertiert wird.</summary>
      <returns>Der Rohwert, der für die Anzeige in eine Zeichenfolge konvertiert wird.</returns>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Konvertiert den Wert, der von diesem Ergebnis gekapselt wird, in den angegebenen Typ.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="type">Der Zieltyp.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Konvertiert den Wert, der von diesem Ergebnis gekapselt wird, in den angegebenen Typ, indem die angegebenen Kulturinformationen verwendet werden.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="type">Der Zieltyp.</param>
      <param name="culture">Die Kultur, die bei der Konvertierung verwendet wird.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.Culture">
      <summary>Ruft die Kultur ab bzw. legt diese fest.</summary>
      <returns>Die Kultur.</returns>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.RawValue">
      <summary>Ruft den Rohwert ab (bzw. legt diesen fest), der vom Wertanbieter angegeben wird.</summary>
      <returns>Der Rohwert, der vom Wertanbieter bereitgestellt wird.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider">
      <summary>Stellt einen Wertanbieter dar, dessen Werte aus einer Liste von Wertanbietern stammen, die die <see cref="T:System.Collections.IEnumerable" />-Schnittstelle implementiert.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor(System.Collections.Generic.IList{System.Web.Http.ValueProviders.IValueProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />-Klasse.</summary>
      <param name="list">Die Liste der Wertanbieter.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.ContainsPrefix(System.String)">
      <summary>Bestimmt, ob die Auflistung das angegebene <paramref name="prefix" /> enthält.</summary>
      <returns>true, wenn die Auflistung das angegebene <paramref name="prefix" /> enthält, andernfalls false.</returns>
      <param name="prefix">Das Präfix, nach dem gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Ruft die Schlüssel aus dem angegebenen <paramref name="prefix" /> ab.</summary>
      <returns>Die Schlüssel aus dem angegebenen <paramref name="prefix" />.</returns>
      <param name="prefix">Das Präfix, aus dem die Schlüssel abgerufen werden.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetValue(System.String)">
      <summary>Ruft ein Wertobjekt mithilfe des angegebenen <paramref name="key" />s ab.</summary>
      <returns>Das Wertobjekt für den angegebenen <paramref name="key" />.</returns>
      <param name="key">Der Schlüssel für das Wertobjekt, das abgerufen werden soll.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.InsertItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das einzufügende Objekt.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.SetItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Ersetzt das Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item">Der neue Wert für das Element am angegebenen Index.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory">
      <summary>Stellt eine Factory zum Erstellen einer Liste von Wertanbieterobjekten dar.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory" />-Klasse.</summary>
      <param name="factories">Die Auflistung der Wertanbieterfactorys.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Ruft eine Liste von Wertanbieterobjekten für den angegebenen Controllerkontext ab.</summary>
      <returns>Die Liste von Wertanbieterobjekten für den angegebenen Controllerkontext.</returns>
      <param name="actionContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider">
      <summary>Ein Wertanbieter für Name-Wert-Paare.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" />-Klasse.</summary>
      <param name="values">Die Name-Wert-Paare für den Anbieter.</param>
      <param name="culture">Die Kultur, die für die Name-Wert-Paare verwendet wird.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}},System.Globalization.CultureInfo)">
      <summary>Initialisiert mithilfe eines Funktionsdelegaten zum Bereitstellen der Name-Wert-Paare eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" />-Klasse.</summary>
      <param name="valuesFactory">Ein Funktionsdelegat, der eine Auflistung von Name-Wert-Paaren zurückgibt.</param>
      <param name="culture">Die Kultur, die für die Name-Wert-Paare verwendet wird.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.ContainsPrefix(System.String)">
      <summary>Bestimmt, ob die Auflistung das angegebene Präfix enthält.</summary>
      <returns>True, wenn die Auflistung das angegebene Präfix enthält, andernfalls False.</returns>
      <param name="prefix">Das Präfix, nach dem gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Ruft die Schlüssel aus einem Präfix ab.</summary>
      <returns>Die Schlüssel.</returns>
      <param name="prefix">Das Präfix.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetValue(System.String)">
      <summary>Ruft mit dem angegebenen Schlüssel ein Wertobjekt ab.</summary>
      <returns>Das Wertobjekt für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel für das Wertobjekt, das abgerufen werden soll.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider">
      <summary>Stellt einen Wertanbieter für Abfragezeichenfolgen in einem <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt dar.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider" />-Klasse.</summary>
      <param name="actionContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
      <param name="culture">Ein Objekt, das Informationen zur Zielkultur enthält.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory">
      <summary>Stellt eine Klasse dar, die für das Erstellen einer neuen Instanz eines Wertanbieterobjekts für Abfragezeichenfolgen zuständig ist.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Ruft ein Wertanbieterobjekt für den angegebenen Controllerkontext ab.</summary>
      <returns>Ein Wertanbieterobjekt für Abfragezeichenfolgen.</returns>
      <param name="actionContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider">
      <summary>Stellt einen Wertanbieter für Routendaten in einem Objekt dar, das die IDictionary(Of TKey, TValue)-Schnittstelle implementiert.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider" />-Klasse.</summary>
      <param name="actionContext">Ein Objekt, in dem Informationen zur HTTP-Anforderung enthalten sind.</param>
      <param name="culture">Ein Objekt, das Informationen zur Zielkultur enthält.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory">
      <summary>Stellt eine Factory zum Erstellen von Wertanbieterobjekten für Routendaten dar.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Ruft ein Wertanbieterobjekt für den angegebenen Controllerkontext ab.</summary>
      <returns>Ein Wertanbieterobjekt.</returns>
      <param name="actionContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
  </members>
</doc>